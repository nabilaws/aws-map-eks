<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.EC2</name>
    </assembly>
    <members>
        <member name="M:Amazon.PowerShell.Cmdlets.EC2.AmazonEC2Helper.InstanceParamToIDs(System.Object[])">
            <summary>
            Converts a list of string instance ids, RunningInstance objects or Reservation objects 
            to a collection of string instance ids
            </summary>
            <param name="instances"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.EC2.AmazonEC2Helper.FromResponseTemplateData(Amazon.EC2.Model.ResponseLaunchTemplateData)">
            <summary>
            Constructs a RequestLaunchTemplateData suitable for use in New-EC2LaunchTemplate[Version],
            from a response shape output by Get-EC2LaunchTemplateData. This enables pipelining of the
            form Get-EC2LaunchTemplateData | New-EC2LaunchTemplateData[Version].This works around
            the lack of copy constructors in the sdk.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageByNameCmdlet">
            <summary>
            <para>
            Outputs a collection of one or more Amazon Machine Images using either a set of supplied service-pack independent 
            'logical' name pattern(s), or a set of custom name patterns. The set of service-pack independent logical names can 
            be viewed using the -ShowFilters switch.
            </para>
            <para>
            If more than one name pattern is supplied (built-in or custom) then all available machine images that match the 
            pattern are output. If only a single name pattern is supplied and it corresponds to one of the built-in service-pack
            independent names, then only the very latest machine image that matches is output. To see all versions of a machine
            image that correspond to a built-in name, use the -AllAvailable switch.
            </para>
            <para>
            This cmdlet is deprecated and will be removed in a future version. Use Get-SSMLatestEC2Image instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageByNameCmdlet.Name">
            <summary>
            <para>
            A collection of one or more name patterns to use as filters to select an image. If this parameter is 
            not specified, the set of built-in service-pack independent names are output.
            </para>
            <para>
            If the name supplied is recognized as one of the built-in service pack independent 'logical' names, 
            it will be replaced internally by the corresponding pattern mapped by the logical name and used to 
            query EC2 to find the latest available image corresponding to that name pattern. Using independent names 
            means your script will continue to work even after AMIs are deprecated as new service packs are 
            released. Names containing service pack/RTM designations can be deprecated as machine images are
            periodically refresh and eventually removed from the set of Amazon-published AMIs.
            </para>
            <para>
            If more than one value is supplied for this parameter, all machine images matching the name
            pattern are output, irrespective of whether the names supplied are from the built-in service-pack
            independent set or are custom name patterns of your own making.
            </para>
            <para>
            If a single value is supplied and it matches one of the built-in service-pack independent 'logical'
            names then only the very latest machine image corresponding to that name is output. Use the -AllAvailable
            switch to obtain the latest plus prior versions of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageByNameCmdlet.ShowFilters">
            <summary>
            If set, the cmdlet emits the actual name pattern used to filter the machine images.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageByNameCmdlet.AllAvailable">
            <summary>
            <para>
            Amazon Web Services periodically refreshes machine images and 'deprecates' the prior versions.
            For a time it is possible for more than one image to correspond to a given logical filter.
            </para>
            <para>
            If this switch is specified and the name filter(s) supplied to the cmdlet are recognized as 
            service pack independent 'logical' filters (i.e. the filter names shown if the -ShowFilters 
            switch is supplied) then the cmdlet will emit all of the images corresponding to the
            filter. By default, the older images are suppressed and only the very latest image corresponding
            to the filter is output.
            </para>
            <para>
            If the supplied name filter(s) are not recognized (i.e. they are custom naming patterns of your
            own construction) then this switch is ignored and all matching images are returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceMetadataCmdlet">
            <summary>
            Return values of available metadata categories for the current EC2 instance. For more information
            on EC2 instance metadata see http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceMetadataCmdlet.MetadataCategory">
            <summary>
            The currently known categories; some of these descend into further data 
            keys, others are 'convenience' categories that extract some relevant data 
            from data associated with another category (for example Region is a subfield
            in the data returned with the IdentityDocument category).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceMetadataCmdlet.Category">
            <summary>
            One or more categories of instance metadata to retrieve.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceMetadataCmdlet.Path">
            <summary>
            One or more instance metadata category paths to retrieve.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceMetadataCmdlet.ListCategory">
            <summary>
            Enumerates the categories that can be used with the -Category parameter to the pipeline.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet">
            <summary>
            <para>
            Retrieves the encrypted administrator password for the instances running Windows and optionally decrypts it.
            </para>
            <para>
            When running on Windows with the desktop version of PowerShell if the -Decrypt switch is specified the cmdlet 
            can attempt to auto-discover the name of the keypair that was used to launch the instance, and inspects the 
            configuration store of the AWS Toolkit for Visual Studio to determine if the corresponding keypair data needed 
            to decrypt the password is available locally. If it is the password will be decrypted without needing to specify 
            the location of the Pem file.
            </para>
            <para>
            On platforms other than Windows, or when running PowerShell Core on Windows, the configuration store of the AWS
            Toolkit for Visual Studio is not available. In these situations the location of a Pem file containing the data 
            needed to decrypt the password can be supplied to the -PemFile parameter.
            </para>
            <para>
            Note that if the -PemFile parameter is supplied (on any platform), the cmdlet automatically assumes that -Decrypt
            is set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.InstanceId">
            <summary>
            The ID of the instance for which to get the password.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.Decrypt">
            <summary>
            <para>
            If specified the instance password is decrypted and emitted to the pipeline as a string. 
            </para>
            <para>
            <b>Note:</b> If the -Pem File parameter is used this switch is assumed to be set. It is included
            in both parameter sets for this cmdlet for legacy, non-breaking change reasons.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.PemFile">
            <summary>
            <para>
            The name of a .pem file containing the key materials corresponding to the keypair
            used to launch the instance. This will be used to decrypt the password data. 
            </para>
            <para>
            If -PemFile is specified, then -Decrypt is assumed.
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.DecryptViaPemDiscovery(System.String,Amazon.EC2.Model.GetPasswordDataResponse,System.String,System.String)" -->
        <member name="M:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.DecryptViaPemFile(System.String,Amazon.EC2.Model.GetPasswordDataResponse)">
            <summary>
            Loads the specified .pem file and uses it to decrypt the password data returned
            from the instance.
            </summary>
            <param name="pemFile">The full path to the .pem file to use</param>
            <param name="passwordDataResponse">Encrypted password data retrieved from the instance</param>
            <returns>The decrypted password</returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.EC2.GetEC2PasswordDataCmdlet.LookupAccountSettingsKey(System.String,System.String,System.String)">
            <summary>
            Walks the credentials store to find the matching account settings for the specified
            access key
            </summary>
            <param name="accessKey">Access key to serach by.</param>
            <param name="profileName">ProfileName to search by.</param>
            <param name="profileLocation">The location of the ini-format credential file.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet">
            <summary>
            Imports the public key from an RSA key pair that you created with a third-party tool.
            Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives
            the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create
            the key pair and give AWS just the public key. The private key is never transferred
            between you and AWS.
            
             
            <para>
            For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.PublicKeyMaterial">
            <summary>
            <para>
            This parameter is obsolete and will be removed in a future version. Use 'PublicKey' instead.
            The public key. For API calls, the text must be base64-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.KeyName">
            <summary>
            <para>
            <para>A unique name for the key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.PublicKey">
            <summary>
            <para>
            <para>The public key. For API calls, the text must be base64-encoded. For command line tools,
            base64 encoding is performed for you.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter to Base64 before supplying to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the imported key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ImportKeyPairResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ImportKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2KeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet">
            <summary>
            Launches the specified number of instances using an AMI for which you have permissions.
            
             
            <para>
            You can specify a number of options, or leave the default options. The following rules
            apply:
            </para><ul><li><para>
            [EC2-VPC] If you don't specify a subnet ID, we choose a default subnet from your default
            VPC for you. If you don't have a default VPC, you must specify a subnet ID in the
            request.
            </para></li><li><para>
            [EC2-Classic] If don't specify an Availability Zone, we choose one for you.
            </para></li><li><para>
            Some instance types must be launched into a VPC. If you do not have a default VPC,
            or if you do not specify a subnet ID, the request fails. For more information, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance
            Types Available Only in a VPC</a>.
            </para></li><li><para>
            [EC2-VPC] All instances have a network interface with a primary private IPv4 address.
            If you don't specify this address, we choose one from the IPv4 range of your subnet.
            </para></li><li><para>
            Not all instance types support IPv6 addresses. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a>.
            </para></li><li><para>
            If you don't specify a security group ID, we use the default security group. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security
            Groups</a>.
            </para></li><li><para>
            If any of the AMIs have a product code attached for which the user has not subscribed,
            the request fails.
            </para></li></ul><para>
            You can create a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a>, which is a resource that contains the parameters to launch an instance.
            When you launch an instance using <a>RunInstances</a>, you can specify the launch
            template instead of specifying the launch parameters.
            </para><para>
            To ensure faster instance launches, break up large requests into smaller batches.
            For example, create five separate launch requests for 100 instances each instead of
            one launch request for 500 instances.
            </para><para>
            An instance is ready for you to use when it's in the <code>running</code> state. You
            can check the state of your instance using <a>DescribeInstances</a>. You can tag instances
            and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a>
            and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a>.
            </para><para>
            Linux instances have access to the public key of the key pair at boot. You can use
            this key to provide secure access to the instance. Amazon EC2 public images use this
            feature to provide secure access without passwords. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            For troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What
            To Do If An Instance Immediately Terminates</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting
            Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.AssociatePublicIp">
            <summary>
            Indicates whether to assign a public IP address to an instance in a VPC.      
            </summary>
            <remarks>
            <para>The public IP address is associated with a specific network interface. 
            If set to true, the following rules apply:</para>
            <ol>
            <li>
            <p>Can only be associated with a single network interface with
            the device index of 0. You can't associate a public IP address
            with a second network interface, and you can't associate a
            public IP address if you are launching more than one network
            interface.</p>
            </li>
            <li>
            <p>Can only be associated with a new network interface, 
            not an existing one.</p>
            </li>
            </ol>
            <p>
            Default: If launching into a default subnet, the default value is <b>true</b>.
            If launching into a nondefault subnet, the default value is <b>false</b>. 
            </p>
            </remarks>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.UserDataFile">
            <summary>
            The name of a file containing base64-encoded MIME user data for the instances. 
            Using this parameter causes any value for the UserData parameter to be ignored. 
            If the -EncodeUserData switch is also set, the contents of the file can be normal 
            ASCII text and will be base64-encoded by the cmdlet.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.EncodeUserData">
            <summary>
            If set and the -UserData or -UserDataFile parameters are specified, the specified
            user data is base64 encoded prior to submitting to EC2. By default the user data
            is assumed to be encoded prior to being supplied to the cmdlet.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.AdditionalInfo">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_Affinity">
            <summary>
            <para>
            <para>The affinity setting for the instance on the Dedicated Host. This parameter is not
            supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
            command.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.IamInstanceProfile_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone of the instance.</para><para>If not specified, an Availability Zone will be automatically chosen for you based
            on the load balancing criteria for the Region.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>The block device mapping entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.CapacityReservationTarget_CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.CapacityReservationSpecification_CapacityReservationPreference">
            <summary>
            <para>
            <para>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</para><ul><li><para><code>open</code> - The instance can run in any <code>open</code> Capacity Reservation
            that has matching attributes (instance type, platform, Availability Zone).</para></li><li><para><code>none</code> - The instance avoids running in a Capacity Reservation even if
            one is available. The instance runs as an On-Demand Instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.HibernationOptions_Configured">
            <summary>
            <para>
            <para>If you set this parameter to <code>true</code>, your instance is enabled for hibernation.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.CreditSpecification_CpuCredit">
            <summary>
            <para>
            <para>The credit option for CPU usage of a T2 or T3 instance. Valid values are <code>standard</code>
            and <code>unlimited</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.CpuOption">
            <summary>
            <para>
            <para>The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing
            CPU Options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.DisableApiTermination">
            <summary>
            <para>
            <para>If you set this parameter to <code>true</code>, you can't terminate the instance using
            the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute
            after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>.
            Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>,
            you can terminate the instance by running the shutdown command from the instance.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.EbsOptimized">
            <summary>
            <para>
            <para>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
            provides dedicated throughput to Amazon EBS and an optimized configuration stack to
            provide optimal Amazon EBS I/O performance. This optimization isn't available with
            all instance types. Additional usage charges apply when using an EBS-optimized instance.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.ElasticGpuSpecification">
            <summary>
            <para>
            <para>An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that
            you can attach to your Windows instance to accelerate the graphics performance of
            your applications. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">
            Amazon EC2 Elastic GPUs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.ElasticInferenceAccelerator">
            <summary>
            <para>
            <para>An elastic inference accelerator to associate with the instance. Elastic inference
            accelerators are a resource you can attach to your Amazon EC2 instances to accelerate
            your Deep Learning (DL) inference workloads.</para><para>You cannot specify accelerators from different generations in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_GroupName">
            <summary>
            <para>
            <para>The name of the placement group the instance is in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_HostId">
            <summary>
            <para>
            <para>The ID of the Dedicated Host on which the instance resides. This parameter is not
            supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
            command.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_HostResourceGroupArn">
            <summary>
            <para>
            <para>The ARN of the host resource group in which to launch the instances. If you specify
            a host resource group ARN, omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.MetadataOptions_HttpEndpoint">
            <summary>
            <para>
            <para>This parameter enables or disables the HTTP metadata endpoint on your instances. If
            the parameter is not specified, the default state is <code>enabled</code>.</para><note><para>If you specify a value of <code>disabled</code>, you will not be able to access your
            instance metadata.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.MetadataOptions_HttpPutResponseHopLimit">
            <summary>
            <para>
            <para>The desired HTTP PUT response hop limit for instance metadata requests. The larger
            the number, the further instance metadata requests can travel.</para><para>Default: 1</para><para>Possible values: Integers from 1 to 64</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.MetadataOptions_HttpToken">
            <summary>
            <para>
            <para>The state of token usage for your instance metadata requests. If the parameter is
            not specified in the request, the default state is <code>optional</code>.</para><para>If the state is <code>optional</code>, you can choose to retrieve instance metadata
            with or without a signed token header on your request. If you retrieve the IAM role
            credentials without a token, the version 1.0 role credentials are returned. If you
            retrieve the IAM role credentials using a valid signed token, the version 2.0 role
            credentials are returned.</para><para>If the state is <code>required</code>, you must send a signed token header with any
            instance metadata retrieval requests. In this state, retrieving the IAM role credentials
            always returns the version 2.0 credentials; the version 1.0 credentials are not available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the AMI. An AMI ID is required to launch an instance and must be specified
            here or in a launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.InstanceInitiatedShutdownBehavior">
            <summary>
            <para>
            <para>Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).</para><para>Default: <code>stop</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.InstanceMarketOption">
            <summary>
            <para>
            <para>The market (purchasing) option for the instances.</para><para>For <a>RunInstances</a>, persistent Spot Instance requests are only supported when
            <b>InstanceInterruptionBehavior</b> is set to either <code>hibernate</code> or <code>stop</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.InstanceType">
            <summary>
            <para>
            <para>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para>Default: <code>m1.small</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Ipv6AddressCount">
            <summary>
            <para>
            <para>[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface.
            Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify
            this option and the option to assign specific IPv6 addresses in the same request.
            You can specify this option if you've specified a minimum number of instances to launch.</para><para>You cannot specify this option and the network interfaces option in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Ipv6Address">
            <summary>
            <para>
            <para>[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary
            network interface. You cannot specify this option and the option to assign a number
            of IPv6 addresses in the same request. You cannot specify this option if you've specified
            a minimum number of instances to launch.</para><para>You cannot specify this option and the network interfaces option in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.KernelId">
            <summary>
            <para>
            <para>The ID of the kernel.</para><important><para>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">
            PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.KeyName">
            <summary>
            <para>
            <para>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a>
            or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</para><important><para>If you do not specify a key pair, you can't connect to the instance unless you choose
            an AMI that is configured to allow users another way to log in.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.LaunchTemplate">
            <summary>
            <para>
            <para>The launch template to use to launch the instances. Any parameters that you specify
            in <a>RunInstances</a> override the same parameters in the launch template. You can
            specify either the name or ID of a launch template, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.LicenseSpecification">
            <summary>
            <para>
            <para>The license configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.MaxCount">
            <summary>
            <para>
            <para>The maximum number of instances to launch. If you specify more instances than Amazon
            EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible
            number of instances above <code>MinCount</code>.</para><para>Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</para>
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>1</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.MinCount">
            <summary>
            <para>
            <para>The minimum number of instances to launch. If you specify a minimum that is more instances
            than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no
            instances.</para><para>Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</para>
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>1</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Monitoring">
            <summary>
            <para>
            <para>Specifies whether detailed monitoring is enabled for the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.IamInstanceProfile_Name">
            <summary>
            <para>
            <para>The name of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.NetworkInterface">
            <summary>
            <para>
            <para>The network interfaces to associate with the instance. If you specify a network interface,
            you must specify any security groups and subnets as part of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_PartitionNumber">
            <summary>
            <para>
            <para>The number of the partition the instance is in. Valid only if the placement group
            strategy is set to <code>partition</code>.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.PrivateIpAddress">
            <summary>
            <para>
            <para>[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address
            range of the subnet.</para><para>Only one private IP address can be designated as primary. You can't specify this option
            if you've specified the option to designate a private IP address as the primary IP
            address in a network interface specification. You cannot specify this option if you're
            launching more than one instance in the request.</para><para>You cannot specify this option and the network interfaces option in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk to select. Some kernels require additional drivers at launch.
            Check the kernel requirements for information about whether you need to specify a
            RAM disk. To find kernel requirements, go to the AWS Resource Center and search for
            the kernel ID.</para><important><para>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">
            PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>The IDs of the security groups. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>.</para><para>If you specify a network interface, you must specify any security groups as part of
            the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC,
            you must use security group IDs instead.</para><para>If you specify a network interface, you must specify any security groups as part of
            the network interface.</para><para>Default: Amazon EC2 uses the default security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_SpreadDomain">
            <summary>
            <para>
            <para>Reserved for future use.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.SubnetId">
            <summary>
            <para>
            <para>[EC2-VPC] The ID of the subnet to launch the instance into.</para><para>If you specify a network interface, you must specify any subnets as part of the network
            interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the resources during launch. You can only tag instances and volumes
            on launch. The specified tags are applied to all instances or volumes that are created
            during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Placement_Tenancy">
            <summary>
            <para>
            <para>The tenancy of the instance (if the instance is running in a VPC). An instance with
            a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code>
            tenancy is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
            command.</para><para>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.UserData">
            <summary>
            The base64-encoded MIME user data for the instances. If the -EncodeUserData switch is also set, the value for this parameter can be supplied as normal ASCII text and will be base64-encoded by the cmdlet.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            If you do not specify a client token, a randomly generated token is used for the request
            to ensure idempotency.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para><para>Constraints: Maximum 64 ASCII characters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Reservation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RunInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RunInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet">
            <summary>
            Creates a launch template. A launch template contains the parameters to launch an
            instance. When you launch an instance using <a>RunInstances</a>, you can specify a
            launch template instead of providing the launch parameters in the request. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching
            an instance from a launch template</a>in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.SourceTemplateData">
            <summary>
            <para>
            The information for the launch template, returned from a call to Get-EC2LaunchTemplateData. The data
            will be used to construct the data for the -LaunchTemplateData parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.LaunchTemplateData">
            <summary>
            <para>
            <para>The information for the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>A name for the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the launch template during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the first version of the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para><para>Constraint: Maximum 128 ASCII characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateLaunchTemplateResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateLaunchTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchTemplateData parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchTemplateData' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet">
            <summary>
            Creates a new version for a launch template. You can specify an existing version of
            launch template from which to base the new version.
            
             
            <para>
            Launch template versions are numbered in the order in which they are created. You
            cannot specify, change, or replace the numbering of launch template versions.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#manage-launch-template-versions">Managing
            launch template versions</a>in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.SourceTemplateData">
            <summary>
            <para>
            The information for the launch template, returned from a call to Get-EC2LaunchTemplateData. The data
            will be used to construct the data for the -LaunchTemplateData parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.LaunchTemplateData">
            <summary>
            <para>
            <para>The information for the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. You must specify either the launch template ID or launch
            template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. You must specify either the launch template ID or
            launch template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.SourceVersion">
            <summary>
            <para>
            <para>The version number of the launch template version on which to base the new version.
            The new version inherits the same launch parameters as the source version, except
            for parameters that you specify in <code>LaunchTemplateData</code>. Snapshots applied
            to the block device mapping are ignored when creating a new version unless they are
            explicitly included.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the version of the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para><para>Constraint: Maximum 128 ASCII characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplateVersion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateLaunchTemplateVersionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateLaunchTemplateVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchTemplateData parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchTemplateData' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LaunchTemplateVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet">
            <summary>
            Stops an Amazon EBS-backed instance.
            
             
            <para>
            You can use the Stop action to hibernate an instance if the instance is <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#enabling-hibernation">enabled
            for hibernation</a> and it meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
            prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
            Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            We don't charge usage for a stopped instance, or data transfer fees; however, your
            root partition Amazon EBS volume remains and continues to persist your data, and you
            are charged for Amazon EBS volume usage. Every time you start your Windows instance,
            Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows
            instance, a new instance hour begins and Amazon EC2 charges you for another full instance
            hour even if you are still within the same 60-minute period when it was stopped. Every
            time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance
            usage, and thereafter charges per second for instance usage.
            </para><para>
            You can't stop or hibernate instance store-backed instances. You can't use the Stop
            action to hibernate Spot Instances, but you can specify that Amazon EC2 should hibernate
            Spot Instances when they are interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html#hibernate-spot-instances">Hibernating
            Interrupted Spot Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            When you stop or hibernate an instance, we shut it down. You can restart your instance
            at any time. Before stopping or hibernating an instance, make sure it is in a state
            from which it can be restarted. Stopping an instance does not preserve data stored
            in RAM, but hibernating an instance does preserve data stored in RAM. If an instance
            cannot hibernate successfully, a normal shutdown occurs.
            </para><para>
            Stopping and hibernating an instance is different to rebooting or terminating it.
            For example, when you stop or hibernate an instance, the root device and any other
            devices attached to the instance persist. When you terminate an instance, the root
            device and any other devices attached during the instance launch are automatically
            deleted. For more information about the differences between rebooting, stopping, hibernating,
            and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            When you stop an instance, we attempt to shut it down forcibly after a short while.
            If your instance appears stuck in the stopping state after a period of time, there
            may be an issue with the underlying host computer. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting
            Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.ForceStop">
            <summary>
            The ForceStop parameter is deprecated and will be removed in a future version. Use Enforce instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.Enforce">
            <summary>
            <para>
            <para>Forces the instances to stop. The instances do not have an opportunity to flush file
            system caches or file system metadata. If you use this option, you must perform file
            system check and repair procedures. This option is not recommended for Windows instances.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.Hibernate">
            <summary>
            <para>
            <para>Hibernates the instance if the instance was enabled for hibernation at launch. If
            the instance cannot hibernate successfully, a normal shutdown occurs. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
            Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para> Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StoppingInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.StopInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.StopInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet">
            <summary>
            Creates a new Capacity Reservation with the specified attributes.
            
             
            <para>
            Capacity Reservations enable you to reserve capacity for your Amazon EC2 instances
            in a specific Availability Zone for any duration. This gives you the flexibility to
            selectively add capacity reservations and still get the Regional RI discounts for
            that usage. By creating Capacity Reservations, you ensure that you always have access
            to Amazon EC2 capacity when you need it, for as long as you need it. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">Capacity
            Reservations</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            Your request to create a Capacity Reservation could fail if Amazon EC2 does not have
            sufficient capacity to fulfill the request. If your request fails due to Amazon EC2
            capacity constraints, either try again at a later time, try in a different Availability
            Zone, or request a smaller capacity reservation. If your application is flexible across
            instance types and sizes, try to create a Capacity Reservation with different instance
            attributes.
            </para><para>
            Your request could also fail if the requested quantity exceeds your On-Demand Instance
            limit for the selected instance type. If your request fails due to limit constraints,
            increase your On-Demand Instance limit for the required instance type and try again.
            For more information about increasing your instance limits, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon
            EC2 Service Limits</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.AvailabilityZoneId">
            <summary>
            <para>
            <para>The ID of the Availability Zone in which to create the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.EbsOptimized">
            <summary>
            <para>
            <para>Indicates whether the Capacity Reservation supports EBS-optimized instances. This
            optimization provides dedicated throughput to Amazon EBS and an optimized configuration
            stack to provide optimal I/O performance. This optimization isn't available with all
            instance types. Additional usage charges apply when using an EBS- optimized instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.EndDate">
            <summary>
            <para>
            <para>The date and time at which the Capacity Reservation expires. When a Capacity Reservation
            expires, the reserved capacity is released and you can no longer launch instances
            into it. The Capacity Reservation's state changes to <code>expired</code> when it
            reaches its end date and time.</para><para>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.
            Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</para><para>If the <code>EndDateType</code> is <code>limited</code>, the Capacity Reservation
            is cancelled within an hour from the specified time. For example, if you specify 5/31/2019,
            13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55
            on 5/31/2019.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.EndDateType">
            <summary>
            <para>
            <para>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can
            have one of the following end types:</para><ul><li><para><code>unlimited</code> - The Capacity Reservation remains active until you explicitly
            cancel it. Do not provide an <code>EndDate</code> if the <code>EndDateType</code>
            is <code>unlimited</code>.</para></li><li><para><code>limited</code> - The Capacity Reservation expires automatically at a specified
            date and time. You must provide an <code>EndDate</code> value if the <code>EndDateType</code>
            value is <code>limited</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.EphemeralStorage">
            <summary>
            <para>
            <para>Indicates whether the Capacity Reservation supports instances with temporary, block-level
            storage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The number of instances for which to reserve capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.InstanceMatchCriterion">
            <summary>
            <para>
            <para>Indicates the type of instance launches that the Capacity Reservation accepts. The
            options include:</para><ul><li><para><code>open</code> - The Capacity Reservation automatically matches all instances
            that have matching attributes (instance type, platform, and Availability Zone). Instances
            that have matching attributes run in the Capacity Reservation automatically without
            specifying any additional parameters.</para></li><li><para><code>targeted</code> - The Capacity Reservation only accepts instances that have
            matching attributes (instance type, platform, and Availability Zone), and explicitly
            target the Capacity Reservation. This ensures that only permitted instances can use
            the reserved capacity. </para></li></ul><para>Default: <code>open</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.InstancePlatform">
            <summary>
            <para>
            <para>The type of operating system for which to reserve capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.InstanceType">
            <summary>
            <para>
            <para>The instance type for which to reserve capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the Capacity Reservation during launch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.Tenancy">
            <summary>
            <para>
            <para>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have
            one of the following tenancy settings:</para><ul><li><para><code>default</code> - The Capacity Reservation is created on hardware that is shared
            with other AWS accounts.</para></li><li><para><code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware
            that is dedicated to a single AWS account.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para><para>Constraint: Maximum 64 ASCII characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CapacityReservation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateCapacityReservationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateCapacityReservationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceType parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2CapacityReservationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet">
            <summary>
            Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of
            the VPC's security groups. You cannot link an EC2-Classic instance to more than one
            VPC at a time. You can only link an instance that's in the <code>running</code> state.
            An instance is automatically unlinked from a VPC when it's stopped - you can link
            it to the VPC again when you restart it.
            
             
            <para>
            After you've linked an instance, you cannot change the VPC security groups that are
            associated with it. To change the security groups, you must first unlink the instance,
            and then link it again.
            </para><para>
            Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.Group">
            <summary>
            <para>
            <para>The ID of one or more of the VPC's security groups. You cannot specify security groups
            from a different VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of a ClassicLink-enabled VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AttachClassicLinkVpcResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AttachClassicLinkVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2ClassicLinkVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet">
            <summary>
            Attaches an internet gateway or a virtual private gateway to a VPC, enabling connectivity
            between the internet and the VPC. For more information about your VPC and internet
            gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet.InternetGatewayId">
            <summary>
            <para>
            <para>The ID of the internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AttachInternetGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2InternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet">
            <summary>
            Attaches a network interface to an instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.DeviceIndex">
            <summary>
            <para>
            <para>The index of the device for the network interface attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AttachmentId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AttachNetworkInterfaceResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AttachNetworkInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2NetworkInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet">
            <summary>
            Applies a security group to the association between the target network and the Client
            VPN endpoint. This action replaces the existing security groups with the specified
            security groups.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>The IDs of the security groups to apply to the associated target network. Up to 5
            security groups can be applied to an associated target network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC in which the associated target network is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityGroupIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ApplySecurityGroupsToClientVpnTargetNetworkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ApplySecurityGroupsToClientVpnTargetNetworkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2SecurityGroupToClientVpnTargetNetworkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet">
            <summary>
            Attaches an EBS volume to a running or stopped instance and exposes it to the instance
            with the specified device name.
            
             
            <para>
            Encrypted EBS volumes must be attached to instances that support Amazon EBS encryption.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            After you attach an EBS volume, you must make it available. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html">Making
            an EBS Volume Available For Use</a>.
            </para><para>
            If a volume has an AWS Marketplace product code:
            </para><ul><li><para>
            The volume can be attached only to a stopped instance.
            </para></li><li><para>
            AWS Marketplace product codes are copied from the volume to the instance.
            </para></li><li><para>
            You must be subscribed to the product.
            </para></li><li><para>
            The instance type and operating system of the instance must support the product. For
            example, you can't detach a volume from a Windows instance and attach it to a Linux
            instance.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.Device">
            <summary>
            <para>
            <para>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the EBS volume. The volume and instance must be within the same Availability
            Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Attachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AttachVolumeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AttachVolumeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VolumeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet">
            <summary>
            Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway
            to one VPC at a time.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AttachVpnGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AttachVpnGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.AddEC2VpnGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet">
            <summary>
            Accepts one or more interface VPC endpoint connection requests to your VPC endpoint
            service.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the VPC endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>The IDs of one or more interface VPC endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AcceptVpcEndpointConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AcceptVpcEndpointConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2EndpointConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet">
            <summary>
            Accepts the Convertible Reserved Instance exchange quote described in the <a>GetReservedInstancesExchangeQuote</a>
            call.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet.ReservedInstanceId">
            <summary>
            <para>
            <para>The IDs of the Convertible Reserved Instances to exchange for another Convertible
            Reserved Instance of the same or higher value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet.TargetConfiguration">
            <summary>
            <para>
            <para>The configuration of the target Convertible Reserved Instance to exchange for your
            current Convertible Reserved Instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExchangeId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2ReservedInstancesExchangeQuoteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayPeeringAttachmentCmdlet">
            <summary>
            Accepts a transit gateway peering attachment request. The peering attachment must
            be in the <code>pendingAcceptance</code> state.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayPeeringAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the transit gateway attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayPeeringAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayPeeringAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AcceptTransitGatewayPeeringAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AcceptTransitGatewayPeeringAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayPeeringAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayPeeringAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Accepts a request to attach a VPC to a transit gateway.
            
             
            <para>
            The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a>
            to view your pending VPC attachment requests. Use <a>RejectTransitGatewayVpcAttachment</a>
            to reject a VPC attachment request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AcceptTransitGatewayVpcAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AcceptTransitGatewayVpcAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayVpcAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2TransitGatewayVpcAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2VpcPeeringConnectionCmdlet">
            <summary>
            Accept a VPC peering connection request. To accept a request, the VPC peering connection
            must be in the <code>pending-acceptance</code> state, and you must be the owner of
            the peer VPC. Use <a>DescribeVpcPeeringConnections</a> to view your outstanding VPC
            peering connection requests.
            
             
            <para>
            For an inter-Region VPC peering connection request, you must accept the VPC peering
            connection in the Region of the accepter VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2VpcPeeringConnectionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of the VPC peering connection. You must specify this parameter in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2VpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2VpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcPeeringConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcPeeringConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ApproveEC2VpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet">
            <summary>
            Determines whether a product code is associated with an instance. This action can
            only be used by the owner of the product code. It is useful when a product code owner
            must verify whether another user's instance is eligible for support.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet.ProductCode">
            <summary>
            <para>
            <para>The product code. This must be a product code that you own.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ConfirmProductInstanceResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ConfirmProductInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ConfirmEC2ProductInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet">
            <summary>
            Copies the specified Amazon FPGA Image (AFI) to the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.Description">
            <summary>
            <para>
            <para>The description for the new AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.Name">
            <summary>
            <para>
            <para>The name for the new AFI. The default is the name of the source AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.SourceFpgaImageId">
            <summary>
            <para>
            <para>The ID of the source AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The Region that contains the source AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FpgaImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CopyFpgaImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CopyFpgaImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceFpgaImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceFpgaImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2FpgaImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet">
            <summary>
            Initiates the copy of an AMI from the specified source Region to the current Region.
            You specify the destination Region by using its endpoint when making the request.
            
             
            <para>
            Copies of encrypted backing snapshots for the AMI are encrypted. Copies of unencrypted
            backing snapshots remain unencrypted, unless you set <code>Encrypted</code> during
            the copy operation. You cannot create an unencrypted copy of an encrypted backing
            snapshot.
            </para><para>
            For more information about the prerequisites and limits when copying an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying
            an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.Description">
            <summary>
            <para>
            <para>A description for the new AMI in the destination Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.Encrypted">
            <summary>
            <para>
            <para>Specifies whether the destination snapshots of the copied image should be encrypted.
            You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted
            copy of an encrypted snapshot. The default CMK for EBS is used unless you specify
            a non-default AWS Key Management Service (AWS KMS) CMK using <code>KmsKeyId</code>.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master
            key (CMK) to use when creating the encrypted volume. This parameter is only required
            if you want to use a non-default CMK; if this parameter is not specified, the default
            CMK for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code>
            flag must also be set. </para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with "alias/". For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call
            may appear to complete even though you provided an invalid identifier. This action
            will eventually report failure. </para><para>The specified CMK must exist in the Region that the snapshot is being copied to. </para><para>Amazon EBS does not support asymmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new AMI in the destination Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.SourceImageId">
            <summary>
            <para>
            <para>The ID of the AMI to copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The name of the Region that contains the AMI to copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CopyImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CopyImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet">
            <summary>
            Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can
            copy the snapshot within the same Region or from one Region to another. You can use
            the snapshot to create EBS volumes or Amazon Machine Images (AMIs).
            
             
            <para>
            Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots
            remain unencrypted, unless you enable encryption for the snapshot copy operation.
            By default, encrypted snapshot copies use the default AWS Key Management Service (AWS
            KMS) customer master key (CMK); however, you can specify a different CMK.
            </para><para>
            To copy an encrypted snapshot that has been shared from another account, you must
            have permissions for the CMK used to encrypt the snapshot.
            </para><para>
            Snapshots created by copying another snapshot have an arbitrary volume ID that should
            not be used for any purpose.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.Description">
            <summary>
            <para>
            <para>A description for the EBS snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.DestinationRegion">
            <summary>
            <para>
            <para>The destination Region to use in the <code>PresignedUrl</code> parameter of a snapshot
            copy operation. This parameter is only valid for specifying the destination Region
            in a <code>PresignedUrl</code> parameter, where it is required.</para><para>The snapshot copy is sent to the regional endpoint that you sent the HTTP request
            to (for example, <code>ec2.us-east-1.amazonaws.com</code>). With the AWS CLI, this
            is specified using the <code>--region</code> parameter or the default Region in your
            AWS configuration file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.Encrypted">
            <summary>
            <para>
            <para>To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled,
            enable encryption using this parameter. Otherwise, omit this parameter. Encrypted
            snapshots are encrypted, even if you omit this parameter and encryption by default
            is not enabled. You cannot set this parameter to false. For more information, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed
            CMK for EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must
            be <code>true</code>.</para><para>You can specify the CMK using any of the following:</para><ul><li><para>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</para></li><li><para>Key alias. For example, alias/ExampleAlias.</para></li><li><para>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</para></li><li><para>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</para></li></ul><para>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias,
            or ARN that is not valid, the action can appear to complete, but eventually fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The ID of the Region that contains the snapshot to be copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.SourceSnapshotId">
            <summary>
            <para>
            <para>The ID of the EBS snapshot to copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the new snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CopySnapshotResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CopySnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceSnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceSnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.CopyEC2SnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet">
            <summary>
            Rejects one or more VPC endpoint connection requests to your VPC endpoint service.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>The IDs of one or more VPC endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RejectVpcEndpointConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RejectVpcEndpointConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2EndpointConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayPeeringAttachmentCmdlet">
            <summary>
            Rejects a transit gateway peering attachment request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayPeeringAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the transit gateway peering attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayPeeringAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayPeeringAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RejectTransitGatewayPeeringAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RejectTransitGatewayPeeringAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayPeeringAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayPeeringAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Rejects a request to attach a VPC to a transit gateway.
            
             
            <para>
            The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a>
            to view your pending VPC attachment requests. Use <a>AcceptTransitGatewayVpcAttachment</a>
            to accept a VPC attachment request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RejectTransitGatewayVpcAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RejectTransitGatewayVpcAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayVpcAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2TransitGatewayVpcAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DenyEC2VpcPeeringConnectionCmdlet">
            <summary>
            Rejects a VPC peering connection request. The VPC peering connection must be in the
            <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a>
            request to view your outstanding VPC peering connection requests. To delete an active
            VPC peering connection, or to delete a VPC peering connection request that you initiated,
            use <a>DeleteVpcPeeringConnection</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2VpcPeeringConnectionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of the VPC peering connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2VpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RejectVpcPeeringConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2VpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcPeeringConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcPeeringConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DenyEC2VpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2EbsEncryptionByDefaultCmdlet">
            <summary>
            Disables EBS encryption by default for your account in the current Region.
            
             
            <para>
            After you disable encryption by default, you can still create encrypted volumes by
            enabling encryption when you create each volume.
            </para><para>
            Disabling encryption by default does not change the encryption status of your existing
            volumes.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2EbsEncryptionByDefaultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EbsEncryptionByDefault'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableEbsEncryptionByDefaultResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisableEbsEncryptionByDefaultResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2EbsEncryptionByDefaultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2FastSnapshotRestoreCmdlet">
            <summary>
            Disables fast snapshot restores for the specified snapshots in the specified Availability
            Zones.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2FastSnapshotRestoreCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>One or more Availability Zones. For example, <code>us-east-2a</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2FastSnapshotRestoreCmdlet.SourceSnapshotId">
            <summary>
            <para>
            <para>The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2FastSnapshotRestoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableFastSnapshotRestoresResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisableFastSnapshotRestoresResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2FastSnapshotRestoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet">
            <summary>
            Disables the specified resource attachment from propagating routes to the specified
            propagation route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the propagation route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Propagation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableTransitGatewayRouteTablePropagationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisableTransitGatewayRouteTablePropagationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2TransitGatewayRouteTablePropagationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet">
            <summary>
            Disables a virtual private gateway (VGW) from propagating routes to a specified route
            table of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableVgwRoutePropagationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VgwRoutePropagationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkCmdlet">
            <summary>
            Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has
            EC2-Classic instances linked to it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableVpcClassicLinkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisableVpcClassicLinkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkDnsSupportCmdlet">
            <summary>
            Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to
            public IP addresses when addressed between a linked EC2-Classic instance and instances
            in the VPC to which it's linked. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You must specify a VPC ID in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkDnsSupportCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkDnsSupportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkDnsSupportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DisableEC2VpcClassicLinkDnsSupportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet">
            <summary>
            Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has
            been unlinked, the VPC security groups are no longer associated with it. An instance
            is automatically unlinked from a VPC when it's stopped.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance to unlink from the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC to which the instance is linked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DetachClassicLinkVpcResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DetachClassicLinkVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2ClassicLinkVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet">
            <summary>
            Detaches an internet gateway from a VPC, disabling connectivity between the internet
            and the VPC. The VPC must not contain any running instances with Elastic IP addresses
            or public IPv4 addresses.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet.InternetGatewayId">
            <summary>
            <para>
            <para>The ID of the internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DetachInternetGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2InternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet">
            <summary>
            Detaches a network interface from an instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet.AttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet.ForceDismount">
            <summary>
            <para>
            <para>Specifies whether to force a detachment.</para><note><ul><li><para>Use the <code>Force</code> parameter only as a last resort to detach a network interface
            from a failed instance. </para></li><li><para>If you use the <code>Force</code> parameter to detach a network interface, you might
            not be able to attach a different network interface to the same index on the instance
            without first stopping and starting the instance.</para></li><li><para>If you force the detachment of a network interface, the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">instance
            metadata</a> might not get updated. This means that the attributes associated with
            the detached network interface might still be visible. The instance metadata will
            get updated when you stop and start the instance.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DetachNetworkInterfaceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2NetworkInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet">
            <summary>
            Detaches an EBS volume from an instance. Make sure to unmount any file systems on
            the device within your operating system before detaching the volume. Failure to do
            so can result in the volume becoming stuck in the <code>busy</code> state while detaching.
            If this happens, detachment can be delayed indefinitely until you unmount the volume,
            force detachment, reboot the instance, or all three. If an EBS volume is the root
            device of an instance, it can't be detached while the instance is running. To detach
            the root volume, stop the instance first.
            
             
            <para>
            When a volume with an AWS Marketplace product code is detached from an instance, the
            product code is no longer associated with the instance.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.Device">
            <summary>
            <para>
            <para>The device name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.ForceDismount">
            <summary>
            <para>
            <para>Forces detachment if the previous detachment attempt did not occur cleanly (for example,
            logging into an instance, unmounting the volume, and detaching normally). This option
            can lead to data loss or a corrupted file system. Use this option only as a last resort
            to detach a volume from a failed instance. The instance won't have an opportunity
            to flush file system caches or file system metadata. If you use this option, you must
            perform file system check and repair procedures.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must
            specify an instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Attachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DetachVolumeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DetachVolumeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VolumeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet">
            <summary>
            Detaches a virtual private gateway from a VPC. You do this if you're planning to turn
            off the VPC and not use it anymore. You can confirm a virtual private gateway has
            been completely detached from a VPC by describing the virtual private gateway (any
            attachments to the virtual private gateway are also described).
            
             
            <para>
            You must wait for the attachment's state to switch to <code>detached</code> before
            you can delete the VPC or attach a different VPC to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DetachVpnGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.DismountEC2VpnGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet">
            <summary>
            Enables or disables an Availability Zone group for your account.
            
             
            <para>
            Use <a href="https://docs.aws.amazon.com/AWSEC2ApiDocReef/build/server-root/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html">describe-availability-zones</a>
            to view the value for <code>GroupName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the Availability Zone Group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet.OptInStatus">
            <summary>
            <para>
            <para>Indicates whether to enable or disable membership. The valid values are <code>opted-in</code>.
            You must contact <a href="https://console.aws.amazon.com/support/home#/case/create%3FissueType=customer-service%26serviceCode=general-info%26getting-started%26categoryCode=using-aws%26services">AWS
            Support</a> to disable an Availability Zone group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyAvailabilityZoneGroupResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyAvailabilityZoneGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2AvailabilityZoneGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet">
            <summary>
            Modifies a Capacity Reservation's capacity and the conditions under which it is to
            be released. You cannot change a Capacity Reservation's instance type, EBS optimization,
            instance store settings, platform, Availability Zone, or instance eligibility. If
            you need to modify any of these attributes, we recommend that you cancel the Capacity
            Reservation, and then create a new one with the required attributes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.EndDate">
            <summary>
            <para>
            <para>The date and time at which the Capacity Reservation expires. When a Capacity Reservation
            expires, the reserved capacity is released and you can no longer launch instances
            into it. The Capacity Reservation's state changes to <code>expired</code> when it
            reaches its end date and time.</para><para>The Capacity Reservation is cancelled within an hour from the specified time. For
            example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed
            to end between 13:30:55 and 14:30:55 on 5/31/2019.</para><para>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.
            Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.EndDateType">
            <summary>
            <para>
            <para>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can
            have one of the following end types:</para><ul><li><para><code>unlimited</code> - The Capacity Reservation remains active until you explicitly
            cancel it. Do not provide an <code>EndDate</code> value if <code>EndDateType</code>
            is <code>unlimited</code>.</para></li><li><para><code>limited</code> - The Capacity Reservation expires automatically at a specified
            date and time. You must provide an <code>EndDate</code> value if <code>EndDateType</code>
            is <code>limited</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The number of instances for which to reserve capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyCapacityReservationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyCapacityReservationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CapacityReservationId parameter.
            The -PassThru parameter is deprecated, use -Select '^CapacityReservationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2CapacityReservationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet">
            <summary>
            Modifies the specified Client VPN endpoint. Modifying the DNS server resets existing
            client connections.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_CloudwatchLogGroup">
            <summary>
            <para>
            <para>The name of the CloudWatch Logs log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_CloudwatchLogStream">
            <summary>
            <para>
            <para>The name of the CloudWatch Logs log stream to which the connection data is published.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.DnsServers_CustomDnsServer">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, of the DNS servers to be used. You can specify
            up to two DNS servers. Ensure that the DNS servers can be reached by the clients.
            The specified values overwrite the existing values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.Description">
            <summary>
            <para>
            <para>A brief description of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_Enabled">
            <summary>
            <para>
            <para>Indicates whether connection logging is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.DnsServers_Enabled">
            <summary>
            <para>
            <para>Indicates whether DNS servers should be used. Specify <code>False</code> to delete
            the existing DNS servers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>The IDs of one or more security groups to apply to the target network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.ServerCertificateArn">
            <summary>
            <para>
            <para>The ARN of the server certificate to be used. The server certificate must be provisioned
            in AWS Certificate Manager (ACM).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.SplitTunnel">
            <summary>
            <para>
            <para>Indicates whether the VPN is split-tunnel.</para><para>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel
            AWS Client VPN Endpoint</a> in the <i>AWS Client VPN Administrator Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC to associate with the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.VpnPort">
            <summary>
            <para>
            <para>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</para><para>Valid Values: <code>443</code> | <code>1194</code></para><para>Default Value: <code>443</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyClientVpnEndpointResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyClientVpnEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ClientVpnEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet">
            <summary>
            Modifies the default credit option for CPU usage of burstable performance instances.
            The default credit option is set at the account level per AWS Region, and is specified
            per instance family. All new burstable performance instances in the account launch
            using the default credit option.
            
             
            <para><code>ModifyDefaultCreditSpecification</code> is an asynchronous operation, which
            works at an AWS Region level and modifies the credit option for each Availability
            Zone. All zones in a Region are updated within five minutes. But if instances are
            launched during this operation, they might not get the new credit option until the
            zone is updated. To verify whether the update has occurred, you can call <code>GetDefaultCreditSpecification</code>
            and check <code>DefaultCreditSpecification</code> for updates.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable
            Performance Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet.CpuCredit">
            <summary>
            <para>
            <para>The credit option for CPU usage of the instance family.</para><para>Valid Values: <code>standard</code> | <code>unlimited</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet.InstanceFamily">
            <summary>
            <para>
            <para>The instance family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceFamilyCreditSpecification'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyDefaultCreditSpecificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyDefaultCreditSpecificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2DefaultCreditSpecificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2EbsDefaultKmsKeyIdCmdlet">
            <summary>
            Changes the default customer master key (CMK) for EBS encryption by default for your
            account in this Region.
            
             
            <para>
            AWS creates a unique AWS managed CMK in each Region for use with encryption by default.
            If you change the default CMK to a symmetric customer managed CMK, it is used instead
            of the AWS managed CMK. To reset the default CMK to the AWS managed CMK for EBS, use
            <a>ResetEbsDefaultKmsKeyId</a>. Amazon EBS does not support asymmetric CMKs.
            </para><para>
            If you delete or disable the customer managed CMK that you specified for use with
            encryption by default, your instances will fail to launch.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EbsDefaultKmsKeyIdCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed
            CMK for EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must
            be <code>true</code>.</para><para>You can specify the CMK using any of the following:</para><ul><li><para>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</para></li><li><para>Key alias. For example, alias/ExampleAlias.</para></li><li><para>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</para></li><li><para>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</para></li></ul><para>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias,
            or ARN that is not valid, the action can appear to complete, but eventually fails.</para><para>Amazon EBS does not support asymmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EbsDefaultKmsKeyIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KmsKeyId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyEbsDefaultKmsKeyIdResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyEbsDefaultKmsKeyIdResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EbsDefaultKmsKeyIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KmsKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KmsKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EbsDefaultKmsKeyIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet">
            <summary>
            Modifies the permissions for your <a href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-service.html">VPC
            endpoint service</a>. You can add or remove permissions for service consumers (IAM
            users, IAM roles, and AWS accounts) to connect to your endpoint service.
            
             
            <para>
            If you grant permissions to all principals, the service is public. Any users who know
            the name of a public service can send a request to attach an endpoint. If the service
            does not require manual approval, attachments are automatically approved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.AddAllowedPrincipal">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of one or more principals. Permissions are granted
            to the principals in this list. To grant permissions to all principals, specify an
            asterisk (*).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.RemoveAllowedPrincipal">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked
            for principals in this list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcEndpointServicePermissionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpcEndpointServicePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2EndpointServicePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet">
            <summary>
            Modifies the specified EC2 Fleet.
            
             
            <para>
            You can only modify an EC2 Fleet request of type <code>maintain</code>.
            </para><para>
            While the EC2 Fleet is being modified, it is in the <code>modifying</code> state.
            </para><para>
            To scale up your EC2 Fleet, increase its target capacity. The EC2 Fleet launches the
            additional Spot Instances according to the allocation strategy for the EC2 Fleet request.
            If the allocation strategy is <code>lowest-price</code>, the EC2 Fleet launches instances
            using the Spot Instance pool with the lowest price. If the allocation strategy is
            <code>diversified</code>, the EC2 Fleet distributes the instances across the Spot
            Instance pools. If the allocation strategy is <code>capacity-optimized</code>, EC2
            Fleet launches instances from Spot Instance pools with optimal capacity for the number
            of instances that are launching.
            </para><para>
            To scale down your EC2 Fleet, decrease its target capacity. First, the EC2 Fleet cancels
            any open requests that exceed the new target capacity. You can request that the EC2
            Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new
            target capacity. If the allocation strategy is <code>lowest-price</code>, the EC2
            Fleet terminates the instances with the highest price per unit. If the allocation
            strategy is <code>capacity-optimized</code>, the EC2 Fleet terminates the instances
            in the Spot Instance pools that have the least available Spot Instance capacity. If
            the allocation strategy is <code>diversified</code>, the EC2 Fleet terminates instances
            across the Spot Instance pools. Alternatively, you can request that the EC2 Fleet
            keep the fleet at its current size, but not replace any Spot Instances that are interrupted
            or that you terminate manually.
            </para><para>
            If you are finished with your EC2 Fleet for now, but will use it again later, you
            can set the target capacity to 0.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.TargetCapacitySpecification_DefaultTargetCapacityType">
            <summary>
            <para>
            <para>The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or
            <code>On-Demand</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.ExcessCapacityTerminationPolicy">
            <summary>
            <para>
            <para>Indicates whether running instances should be terminated if the total target capacity
            of the EC2 Fleet is decreased below the current size of the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.FleetId">
            <summary>
            <para>
            <para>The ID of the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.TargetCapacitySpecification_OnDemandTargetCapacity">
            <summary>
            <para>
            <para>The number of On-Demand units to request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.TargetCapacitySpecification_SpotTargetCapacity">
            <summary>
            <para>
            <para>The number of Spot units to request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.TargetCapacitySpecification_TotalTargetCapacity">
            <summary>
            <para>
            <para>The number of units to request, filled using <code>DefaultTargetCapacityType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyFleetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyFleetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet">
            <summary>
            Modifies the specified attribute of the specified Amazon FPGA Image (AFI).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.LoadPermission_Add">
            <summary>
            <para>
            <para>The load permissions to add.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The name of the attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.Description">
            <summary>
            <para>
            <para>A description for the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.FpgaImageId">
            <summary>
            <para>
            <para>The ID of the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.Name">
            <summary>
            <para>
            <para>A name for the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.OperationType">
            <summary>
            <para>
            <para>The operation type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.ProductCode">
            <summary>
            <para>
            <para>The product codes. After you add a product code to an AFI, it can't be removed. This
            parameter is valid only when modifying the <code>productCodes</code> attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.LoadPermission_Remove">
            <summary>
            <para>
            <para>The load permissions to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.UserGroup">
            <summary>
            <para>
            <para>The user groups. This parameter is valid only when modifying the <code>loadPermission</code>
            attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.UserId">
            <summary>
            <para>
            <para>The AWS account IDs. This parameter is valid only when modifying the <code>loadPermission</code>
            attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FpgaImageAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyFpgaImageAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyFpgaImageAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Attribute parameter.
            The -PassThru parameter is deprecated, use -Select '^Attribute' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2FpgaImageAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet">
            <summary>
            Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled,
            any instances that you launch with a tenancy of <code>host</code> but without a specific
            host ID are placed onto any available Dedicated Host in your account that has auto-placement
            enabled. When auto-placement is disabled, you need to provide a host ID to have the
            instance launch onto a specific host. If no host ID is provided, the instance is launched
            onto a suitable host with auto-placement enabled.
            
             
            <para>
            You can also use this API action to modify a Dedicated Host to support either multiple
            instance types in an instance family, or to support a specific instance type only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.AutoPlacement">
            <summary>
            <para>
            <para>Specify whether to enable or disable auto-placement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.HostId">
            <summary>
            <para>
            <para>The IDs of the Dedicated Hosts to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.HostRecovery">
            <summary>
            <para>
            <para>Indicates whether to enable or disable host recovery for the Dedicated Host. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html">
            Host Recovery</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.InstanceFamily">
            <summary>
            <para>
            <para>Specifies the instance family to be supported by the Dedicated Host. Specify this
            parameter to modify a Dedicated Host to support multiple instance types within its
            current instance family.</para><para>If you want to modify a Dedicated Host to support a specific instance type only, omit
            this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b>
            and <b>InstanceType</b> in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.InstanceType">
            <summary>
            <para>
            <para>Specifies the instance type to be supported by the Dedicated Host. Specify this parameter
            to modify a Dedicated Host to support only a specific instance type.</para><para>If you want to modify a Dedicated Host to support multiple instance types in its current
            instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You
            cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyHostsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyHostsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2HostCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet">
            <summary>
            Modifies the ID format of a resource for a specified IAM user, IAM role, or the root
            user for an account; or all IAM users, IAM roles, and the root user for an account.
            You can specify that resources should receive longer IDs (17-character IDs) when they
            are created. 
            
             
            <para>
            This request can only be used to modify longer ID settings for resource types that
            are within the opt-in period. Resources currently in their opt-in period include:
            <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code>
            | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code>
            | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code>
            | <code>vpn-connection</code> | <code>vpn-gateway</code>. 
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para><para>
            This setting applies to the principal specified in the request; it does not apply
            to the principal that makes the request. 
            </para><para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.PrincipalArn">
            <summary>
            <para>
            <para>The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify
            <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root
            user of the account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.Resource">
            <summary>
            <para>
            <para>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code>
            | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code>
            | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code>
            | <code>vpn-connection</code> | <code>vpn-gateway</code>.</para><para>Alternatively, use the <code>all-current</code> option to include all resource types
            that are currently within their opt-in period for longer IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.UseLongId">
            <summary>
            <para>
            <para>Indicates whether the resource should use longer IDs (17-character IDs)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyIdentityIdFormatResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdentityIdFormatCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet">
            <summary>
            Modifies the ID format for the specified resource on a per-Region basis. You can specify
            that resources should receive longer IDs (17-character IDs) when they are created.
            
             
            <para>
            This request can only be used to modify longer ID settings for resource types that
            are within the opt-in period. Resources currently in their opt-in period include:
            <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code>
            | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code>
            | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code>
            | <code>vpn-connection</code> | <code>vpn-gateway</code>.
            </para><para>
            This setting applies to the IAM user who makes the request; it does not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user. If you're using this action as the root user, then these settings apply to the
            entire account, unless an IAM user explicitly overrides these settings for themselves.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet.Resource">
            <summary>
            <para>
            <para>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code>
            | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code>
            | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code>
            | <code>vpn-connection</code> | <code>vpn-gateway</code>.</para><para>Alternatively, use the <code>all-current</code> option to include all resource types
            that are currently within their opt-in period for longer IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet.UseLongId">
            <summary>
            <para>
            <para>Indicate whether the resource should use longer IDs (17-character IDs).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyIdFormatResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Resource parameter.
            The -PassThru parameter is deprecated, use -Select '^Resource' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2IdFormatCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet">
            <summary>
            Modifies the specified attribute of the specified AMI. You can specify only one attribute
            at a time. You can use the <code>Attribute</code> parameter to specify the attribute
            or one of the following parameters: <code>Description</code>, <code>LaunchPermission</code>,
            or <code>ProductCode</code>.
            
             
            <para>
            AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product
            code cannot be made public.
            </para><para>
            To enable the SriovNetSupport enhanced networking attribute of an image, enable SriovNetSupport
            on an instance and create an AMI from the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.LaunchPermission_Add">
            <summary>
            <para>
            <para>The AWS account ID to add to the list of launch permissions for the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The name of the attribute to modify. The valid values are <code>description</code>,
            <code>launchPermission</code>, and <code>productCodes</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.Description">
            <summary>
            <para>
            <para>A new description for the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.OperationType">
            <summary>
            <para>
            <para>The operation type. This parameter can be used only when the <code>Attribute</code>
            parameter is <code>launchPermission</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.ProductCode">
            <summary>
            <para>
            <para>The DevPay product codes. After you add a product code to an AMI, it can't be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.LaunchPermission_Remove">
            <summary>
            <para>
            <para>The AWS account ID to remove from the list of launch permissions for the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.UserGroup">
            <summary>
            <para>
            <para>The user groups. This parameter can be used only when the <code>Attribute</code> parameter
            is <code>launchPermission</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.UserId">
            <summary>
            <para>
            <para>The AWS account IDs. This parameter can be used only when the <code>Attribute</code>
            parameter is <code>launchPermission</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.Value">
            <summary>
            <para>
            <para>The value of the attribute being modified. This parameter can be used only when the
            <code>Attribute</code> parameter is <code>description</code> or <code>productCodes</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyImageAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ImageAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet">
            <summary>
            Modifies the specified attribute of the specified instance. You can specify only one
            attribute at a time.
            
             
            <para><b>Note: </b>Using this action to change the security groups associated with an elastic
            network interface (ENI) attached to an instance in a VPC can result in an error if
            the instance has more than one ENI. To change the security groups associated with
            an ENI attached to an instance that has multiple ENIs, we recommend that you use the
            <a>ModifyNetworkInterfaceAttribute</a> action.
            </para><para>
            To modify some attributes, the instance must be stopped. For more information, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying
            Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The name of the attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently
            attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>,
            the default is <code>true</code> and the volume is deleted when the instance is terminated.</para><para>To add instance store volumes to an Amazon EBS-backed instance, you must add them
            when you launch the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating
            the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.DisableApiTermination">
            <summary>
            <para>
            <para>If the value is <code>true</code>, you can't terminate the instance using the Amazon
            EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot
            Instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.EbsOptimized">
            <summary>
            <para>
            <para>Specifies whether the instance is optimized for Amazon EBS I/O. This optimization
            provides dedicated throughput to Amazon EBS and an optimized configuration stack to
            provide optimal EBS I/O performance. This optimization isn't available with all instance
            types. Additional usage charges apply when using an EBS Optimized instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.EnaSupport">
            <summary>
            <para>
            <para>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</para><para>This option is supported only for HVM instances. Specifying this option with a PV
            instance can make it unreachable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Group">
            <summary>
            <para>
            <para>[EC2-VPC] Changes the security groups of the instance. You must specify at least one
            security group, even if it's just the default security group for the VPC. You must
            specify the security group ID, not the security group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.InstanceInitiatedShutdownBehavior">
            <summary>
            <para>
            <para>Specifies whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.InstanceType">
            <summary>
            <para>
            <para>Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Kernel">
            <summary>
            <para>
            <para>Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB
            instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Ramdisk">
            <summary>
            <para>
            <para>Changes the instance's RAM disk to the specified value. We recommend that you use
            PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.SourceDestCheck">
            <summary>
            <para>
            <para>Specifies whether source/destination checking is enabled. A value of <code>true</code>
            means that checking is enabled, and <code>false</code> means that checking is disabled.
            This value must be <code>false</code> for a NAT instance to perform NAT.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.SriovNetSupport">
            <summary>
            <para>
            <para>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual
            Function interface for the instance.</para><para>There is no way to disable enhanced networking with the Intel 82599 Virtual Function
            interface at this time.</para><para>This option is supported only for HVM instances. Specifying this option with a PV
            instance can make it unreachable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.UserData">
            <summary>
            <para>
            <para>Changes the instance's user data to the specified value. If you are using an AWS SDK
            or command line tool, base64-encoding is performed for you, and you can load the text
            from a file. Otherwise, you must provide base64-encoded text.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Value">
            <summary>
            <para>
            <para>A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>,
            <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code>
            attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstanceAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet">
            <summary>
            Modifies the Capacity Reservation settings for a stopped instance. Use this action
            to configure an instance to target a specific Capacity Reservation, run in any <code>open</code>
            Capacity Reservation with matching attributes, or run On-Demand Instance capacity.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.CapacityReservationTarget_CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.CapacityReservationSpecification_CapacityReservationPreference">
            <summary>
            <para>
            <para>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</para><ul><li><para><code>open</code> - The instance can run in any <code>open</code> Capacity Reservation
            that has matching attributes (instance type, platform, Availability Zone).</para></li><li><para><code>none</code> - The instance avoids running in a Capacity Reservation even if
            one is available. The instance runs as an On-Demand Instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance to be modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstanceCapacityReservationAttributesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyInstanceCapacityReservationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCapacityReservationAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCreditSpecificationCmdlet">
            <summary>
            Modifies the credit option for CPU usage on a running or stopped burstable performance
            instance. The credit options are <code>standard</code> and <code>unlimited</code>.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable
            Performance Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCreditSpecificationCmdlet.InstanceCreditSpecification">
            <summary>
            <para>
            <para>Information about the credit option for CPU usage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCreditSpecificationCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive token that you provide to ensure idempotency of your modification
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCreditSpecificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstanceCreditSpecificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyInstanceCreditSpecificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceCreditSpecificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet">
            <summary>
            Modifies the start time for a scheduled Amazon EC2 instance event.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.InstanceEventId">
            <summary>
            <para>
            <para>The ID of the event whose date and time you are modifying.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance with the scheduled event.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.NotBefore">
            <summary>
            <para>
            <para>The new date and time when the event will take place.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Event'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstanceEventStartTimeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyInstanceEventStartTimeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceEventStartTimeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet">
            <summary>
            Modify the instance metadata parameters on a running or stopped instance. When you
            modify the parameters on a stopped instance, they are applied when the instance is
            started. When you modify the parameters on a running instance, the API responds with
            a state of “pending”. After the parameter modifications are successfully applied to
            the instance, the state of the modifications changes from “pending” to “applied” in
            subsequent describe-instances API calls. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance
            Metadata and User Data</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.HttpEndpoint">
            <summary>
            <para>
            <para>This parameter enables or disables the HTTP metadata endpoint on your instances. If
            the parameter is not specified, the existing state is maintained.</para><note><para>If you specify a value of <code>disabled</code>, you will not be able to access your
            instance metadata.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.HttpPutResponseHopLimit">
            <summary>
            <para>
            <para>The desired HTTP PUT response hop limit for instance metadata requests. The larger
            the number, the further instance metadata requests can travel. If no parameter is
            specified, the existing state is maintained.</para><para>Possible values: Integers from 1 to 64</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.HttpToken">
            <summary>
            <para>
            <para>The state of token usage for your instance metadata requests. If the parameter is
            not specified in the request, the default state is <code>optional</code>.</para><para>If the state is <code>optional</code>, you can choose to retrieve instance metadata
            with or without a signed token header on your request. If you retrieve the IAM role
            credentials without a token, the version 1.0 role credentials are returned. If you
            retrieve the IAM role credentials using a valid signed token, the version 2.0 role
            credentials are returned.</para><para>If the state is <code>required</code>, you must send a signed token header with any
            instance metadata retrieval requests. In this state, retrieving the IAM role credential
            always returns the version 2.0 credentials; the version 1.0 credentials are not available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstanceMetadataOptionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyInstanceMetadataOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstanceMetadataOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet">
            <summary>
            Modifies the placement attributes for a specified instance. You can do the following:
            
             <ul><li><para>
            Modify the affinity between an instance and a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
            Host</a>. When affinity is set to <code>host</code> and the instance is not associated
            with a specific Dedicated Host, the next time the instance is launched, it is automatically
            associated with the host on which it lands. If the instance is restarted or rebooted,
            this relationship persists.
            </para></li><li><para>
            Change the Dedicated Host with which an instance is associated.
            </para></li><li><para>
            Change the instance tenancy of an instance from <code>host</code> to <code>dedicated</code>,
            or from <code>dedicated</code> to <code>host</code>.
            </para></li><li><para>
            Move an instance to or from a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">placement
            group</a>.
            </para></li></ul><para>
            At least one attribute for affinity, host ID, tenancy, or placement group name must
            be specified in the request. Affinity and tenancy can be modified in the same request.
            </para><para>
            To modify the host ID, tenancy, placement group, or partition for an instance, the
            instance must be in the <code>stopped</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.Affinity">
            <summary>
            <para>
            <para>The affinity setting for the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the placement group in which to place the instance. For spread placement
            groups, the instance must have a tenancy of <code>default</code>. For cluster and
            partition placement groups, the instance must have a tenancy of <code>default</code>
            or <code>dedicated</code>.</para><para>To remove an instance from a placement group, specify an empty string ("").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.HostId">
            <summary>
            <para>
            <para>The ID of the Dedicated Host with which to associate the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.HostResourceGroupArn">
            <summary>
            <para>
            <para>The ARN of the host resource group in which to place the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance that you are modifying.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.PartitionNumber">
            <summary>
            <para>
            <para>Reserved for future use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.Tenancy">
            <summary>
            <para>
            <para>The tenancy for the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyInstancePlacementResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyInstancePlacementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2InstancePlacementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet">
            <summary>
            Modifies a launch template. You can specify which version of the launch template to
            set as the default version. When launching an instance, the default version applies
            when a launch template version is not specified.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.DefaultVersion">
            <summary>
            <para>
            <para>The version number of the launch template to set as the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. You must specify either the launch template ID or launch
            template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. You must specify either the launch template ID or
            launch template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para><para>Constraint: Maximum 128 ASCII characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyLaunchTemplateResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyLaunchTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2LaunchTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet">
            <summary>
            Modifies the specified network interface attribute. You can specify only one attribute
            at a time. You can use this action to attach and detach security groups from an existing
            EC2 instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Attachment_AttachmentId">
            <summary>
            <para>
            <para>The ID of the network interface attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Attachment_DeleteOnTermination">
            <summary>
            <para>
            <para>Indicates whether the network interface is deleted when the instance is terminated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Description">
            <summary>
            <para>
            <para>A description for the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Group">
            <summary>
            <para>
            <para>Changes the security groups for the network interface. The new set of groups you specify
            replaces the current set. You must specify at least one group, even if it's just the
            default security group in the VPC. You must specify the ID of the security group,
            not the name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.SourceDestCheck">
            <summary>
            <para>
            <para>Indicates whether source/destination checking is enabled. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. This
            value must be <code>false</code> for a NAT instance to perform NAT. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2NetworkInterfaceAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet">
            <summary>
            Modifies the Availability Zone, instance count, instance type, or network platform
            (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be
            modified must be identical, except for Availability Zone, network platform, and instance
            type.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.ReservedInstancesId">
            <summary>
            <para>
            <para>The IDs of the Reserved Instances to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.TargetConfiguration">
            <summary>
            <para>
            <para>The configuration settings for the Reserved Instances to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive token you provide to ensure idempotency of your modification
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesModificationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyReservedInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyReservedInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2ReservedInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet">
            <summary>
            Adds or removes permission settings for the specified snapshot. You may add or remove
            specified AWS account IDs from a snapshot's list of create volume permissions, but
            you cannot do both in a single operation. If you need to both add and remove account
            IDs for a snapshot, you must use multiple operations. You can make up to 500 modifications
            to a snapshot in a single operation.
            
             
            <para>
            Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made
            public. Snapshots encrypted with your default CMK cannot be shared with other accounts.
            </para><para>
            For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.CreateVolumePermission_Add">
            <summary>
            <para>
            <para>Adds the specified AWS account ID or group to the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The snapshot attribute to modify. Only volume creation permissions can be modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.GroupName">
            <summary>
            <para>
            <para>The group to modify for the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.OperationType">
            <summary>
            <para>
            <para>The type of operation to perform to the attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.CreateVolumePermission_Remove">
            <summary>
            <para>
            <para>Removes the specified AWS account ID or group from the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.UserId">
            <summary>
            <para>
            <para>The account ID to modify for the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifySnapshotAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet">
            <summary>
            Modifies the specified Spot Fleet request.
            
             
            <para>
            You can only modify a Spot Fleet request of type <code>maintain</code>.
            </para><para>
            While the Spot Fleet request is being modified, it is in the <code>modifying</code>
            state.
            </para><para>
            To scale up your Spot Fleet, increase its target capacity. The Spot Fleet launches
            the additional Spot Instances according to the allocation strategy for the Spot Fleet
            request. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet launches
            instances using the Spot Instance pool with the lowest price. If the allocation strategy
            is <code>diversified</code>, the Spot Fleet distributes the instances across the Spot
            Instance pools. If the allocation strategy is <code>capacityOptimized</code>, Spot
            Fleet launches instances from Spot Instance pools with optimal capacity for the number
            of instances that are launching.
            </para><para>
            To scale down your Spot Fleet, decrease its target capacity. First, the Spot Fleet
            cancels any open requests that exceed the new target capacity. You can request that
            the Spot Fleet terminate Spot Instances until the size of the fleet no longer exceeds
            the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the
            Spot Fleet terminates the instances with the highest price per unit. If the allocation
            strategy is <code>capacityOptimized</code>, the Spot Fleet terminates the instances
            in the Spot Instance pools that have the least available Spot Instance capacity. If
            the allocation strategy is <code>diversified</code>, the Spot Fleet terminates instances
            across the Spot Instance pools. Alternatively, you can request that the Spot Fleet
            keep the fleet at its current size, but not replace any Spot Instances that are interrupted
            or that you terminate manually.
            </para><para>
            If you are finished with your Spot Fleet for now, but will use it again later, you
            can set the target capacity to 0.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.ExcessCapacityTerminationPolicy">
            <summary>
            <para>
            <para>Indicates whether running Spot Instances should be terminated if the target capacity
            of the Spot Fleet request is decreased below the current size of the Spot Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.OnDemandTargetCapacity">
            <summary>
            <para>
            <para>The number of On-Demand Instances in the fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.TargetCapacity">
            <summary>
            <para>
            <para>The size of the fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.SpotFleetRequestId">
            <summary>
            <para>
            <para>The ID of the Spot Fleet request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifySpotFleetRequestResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifySpotFleetRequestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SpotFleetRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet">
            <summary>
            Modifies a subnet attribute. You can only modify one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.AssignIpv6AddressOnCreation">
            <summary>
            <para>
            <para>Specify <code>true</code> to indicate that network interfaces created in the specified
            subnet should be assigned an IPv6 address. This includes a network interface that's
            created when launching an instance into the subnet (the instance therefore receives
            an IPv6 address). </para><para>If you enable the IPv6 addressing feature for your subnet, your network interface
            or instance only receives an IPv6 address if it's created using version <code>2016-11-15</code>
            or later of the Amazon EC2 API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.CustomerOwnedIpv4Pool">
            <summary>
            <para>
            <para>The customer-owned IPv4 address pool associated with the subnet.</para><para>You must set this value when you specify <code>true</code> for <code>MapCustomerOwnedIpOnLaunch</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.MapCustomerOwnedIpOnLaunch">
            <summary>
            <para>
            <para>Specify <code>true</code> to indicate that network interfaces attached to instances
            created in the specified subnet should be assigned a customer-owned IPv4 address.</para><para>When this value is <code>true</code>, you must specify the customer-owned IP pool
            using <code>CustomerOwnedIpv4Pool</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.MapPublicIpOnLaunch">
            <summary>
            <para>
            <para>Specify <code>true</code> to indicate that network interfaces attached to instances
            created in the specified subnet should be assigned a public IPv4 address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifySubnetAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2SubnetAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet">
            <summary>
            Allows or restricts mirroring network services.
            
             
            <para>
             By default, Amazon DNS network services are not eligible for Traffic Mirror. Use
            <code>AddNetworkServices</code> to add network services to a Traffic Mirror filter.
            When a network service is added to the Traffic Mirror filter, all traffic related
            to that network service will be mirrored. When you no longer want to mirror network
            services, use <code>RemoveNetworkServices</code> to remove the network services from
            the Traffic Mirror filter. 
            </para><para>
            For information about filter rule properties, see <a href="https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html">Network
            Services</a> in the <i>Traffic Mirroring User Guide </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.AddNetworkService">
            <summary>
            <para>
            <para>The network service, for example Amazon DNS, that you want to mirror.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.RemoveNetworkService">
            <summary>
            <para>
            <para>The network service, for example Amazon DNS, that you no longer want to mirror.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilter'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyTrafficMirrorFilterNetworkServicesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyTrafficMirrorFilterNetworkServicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterNetworkServiceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet">
            <summary>
            Modifies the specified Traffic Mirror rule.
            
             
            <para><code>DestinationCidrBlock</code> and <code>SourceCidrBlock</code> must both be an
            IPv4 range or an IPv6 range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.Description">
            <summary>
            <para>
            <para>The description to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The destination CIDR block to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.DestinationPortRange_FromPort">
            <summary>
            <para>
            <para>The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.SourcePortRange_FromPort">
            <summary>
            <para>
            <para>The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol, for example TCP, to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.RemoveField">
            <summary>
            <para>
            <para>The properties that you want to remove from the Traffic Mirror filter rule.</para><para>When you remove a property from a Traffic Mirror filter rule, the property is set
            to the default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.RuleAction">
            <summary>
            <para>
            <para>The action to assign to the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.RuleNumber">
            <summary>
            <para>
            <para>The number of the Traffic Mirror rule. This number must be unique for each Traffic
            Mirror rule in a given direction. The rules are processed in ascending order by rule
            number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.SourceCidrBlock">
            <summary>
            <para>
            <para>The source CIDR block to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.DestinationPortRange_ToPort">
            <summary>
            <para>
            <para>The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.SourcePortRange_ToPort">
            <summary>
            <para>
            <para>The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.TrafficDirection">
            <summary>
            <para>
            <para>The type of traffic (<code>ingress</code> | <code>egress</code>) to assign to the
            rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.TrafficMirrorFilterRuleId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilterRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyTrafficMirrorFilterRuleResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyTrafficMirrorFilterRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorFilterRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet">
            <summary>
            Modifies a Traffic Mirror session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.Description">
            <summary>
            <para>
            <para>The description to assign to the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.PacketLength">
            <summary>
            <para>
            <para>The number of bytes in each packet to mirror. These are bytes after the VXLAN header.
            To mirror a subset, set this to the length (in bytes) to mirror. For example, if you
            set this value to 100, then the first 100 bytes that meet the filter criteria are
            copied to the target. Do not specify this parameter when you want to mirror the entire
            packet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.RemoveField">
            <summary>
            <para>
            <para>The properties that you want to remove from the Traffic Mirror session.</para><para>When you remove a property from a Traffic Mirror session, the property is set to the
            default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.SessionNumber">
            <summary>
            <para>
            <para>The session number determines the order in which sessions are evaluated when an interface
            is used by multiple sessions. The first session with a matching filter is the one
            that mirrors the packets.</para><para>Valid values are 1-32766.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.TrafficMirrorSessionId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.TrafficMirrorTargetId">
            <summary>
            <para>
            <para>The Traffic Mirror target. The target must be in the same VPC as the source, or have
            a VPC peering connection with the source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.VirtualNetworkId">
            <summary>
            <para>
            <para>The virtual network ID of the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyTrafficMirrorSessionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyTrafficMirrorSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TrafficMirrorSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Modifies the specified VPC attachment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.AddSubnetId">
            <summary>
            <para>
            <para>The IDs of one or more subnets to add. You can specify at most one subnet per Availability
            Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.Options_DnsSupport">
            <summary>
            <para>
            <para>Enable or disable DNS support. The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.Options_Ipv6Support">
            <summary>
            <para>
            <para>Enable or disable IPv6 support. The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.RemoveSubnetId">
            <summary>
            <para>
            <para>The IDs of one or more subnets to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyTransitGatewayVpcAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyTransitGatewayVpcAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2TransitGatewayVpcAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet">
            <summary>
            You can modify several parameters of an existing EBS volume, including volume size,
            volume type, and IOPS capacity. If your EBS volume is attached to a current-generation
            EC2 instance type, you may be able to apply these changes without stopping the instance
            or detaching the volume from it. For more information about modifying an EBS volume
            running Linux, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying
            the Size, IOPS, or Type of an EBS Volume on Linux</a>. For more information about
            modifying an EBS volume running Windows, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying
            the Size, IOPS, or Type of an EBS Volume on Windows</a>. 
            
             
            <para>
             When you complete a resize operation on your volume, you need to extend the volume's
            file-system size to take advantage of the new storage capacity. For information about
            extending a Linux file system, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux">Extending
            a Linux File System</a>. For information about extending a Windows file system, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html#recognize-expanded-volume-windows">Extending
            a Windows File System</a>. 
            </para><para>
             You can use CloudWatch Events to check the status of a modification to an EBS volume.
            For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon
            CloudWatch Events User Guide</a>. You can also track the status of a modification
            using <a>DescribeVolumesModifications</a>. For information about tracking status changes
            using either method, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring
            Volume Modifications</a>. 
            </para><para>
            With previous-generation instance types, resizing an EBS volume may require detaching
            and reattaching the volume or stopping and restarting the instance. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying
            the Size, IOPS, or Type of an EBS Volume on Linux</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying
            the Size, IOPS, or Type of an EBS Volume on Windows</a>.
            </para><para>
            If you reach the maximum volume modification rate per volume limit, you will need
            to wait at least six hours before applying further modifications to the affected EBS
            volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.Iops">
            <summary>
            <para>
            <para>The target IOPS rate of the volume.</para><para>This is only valid for Provisioned IOPS SSD (<code>io1</code>) volumes. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html#EBSVolumeTypes_piops">Provisioned
            IOPS SSD (io1) Volumes</a>.</para><para>Default: If no IOPS value is specified, the existing value is retained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.Size">
            <summary>
            <para>
            <para>The target size of the volume, in GiB. The target volume size must be greater than
            or equal to than the existing size of the volume. For information about available
            EBS volume sizes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
            EBS Volume Types</a>.</para><para>Default: If no size is specified, the existing size is retained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.VolumeType">
            <summary>
            <para>
            <para>The target EBS volume type of the volume.</para><para>Default: If no type is specified, the existing type is retained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VolumeModification'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVolumeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVolumeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet">
            <summary>
            Modifies a volume attribute.
            
             
            <para>
            By default, all I/O operations for the volume are suspended when the data on the volume
            is determined to be potentially inconsistent, to prevent undetectable, latent data
            corruption. The I/O access to the volume can be resumed by first enabling I/O access
            and then checking the data consistency on your volume.
            </para><para>
            You can change the default behavior to resume I/O operations. We recommend that you
            change this only for boot volumes or for volumes that are stateless or disposable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet.AutoEnableIO">
            <summary>
            <para>
            <para>Indicates whether the volume should be auto-enabled for I/O operations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVolumeAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VolumeAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet">
            <summary>
            Modifies the specified attribute of the specified VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.EnableDnsHostname">
            <summary>
            <para>
            <para>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled,
            instances in the VPC get DNS hostnames; otherwise, they do not.</para><para>You cannot modify the DNS resolution and DNS hostnames attributes in the same request.
            Use separate requests for each attribute. You can only enable DNS hostnames if you've
            enabled DNS support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.EnableDnsSupport">
            <summary>
            <para>
            <para>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries
            to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved
            IP address at the base of the VPC network range "plus two" succeed. If disabled, the
            Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses
            is not enabled.</para><para>You cannot modify the DNS resolution and DNS hostnames attributes in the same request.
            Use separate requests for each attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet">
            <summary>
            Modifies attributes of a specified VPC endpoint. The attributes that you can modify
            depend on the type of VPC endpoint (interface or gateway). For more information, see
            <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html">VPC
            Endpoints</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.AddRouteTableId">
            <summary>
            <para>
            <para>(Gateway endpoint) One or more route tables IDs to associate with the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.AddSecurityGroupId">
            <summary>
            <para>
            <para>(Interface endpoint) One or more security group IDs to associate with the network
            interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.AddSubnetId">
            <summary>
            <para>
            <para>(Interface endpoint) One or more subnet IDs in which to serve the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>A policy to attach to the endpoint that controls access to the service. The policy
            must be in valid JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.PrivateDnsEnabled">
            <summary>
            <para>
            <para>(Interface endpoint) Indicates whether a private hosted zone is associated with the
            VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.RemoveRouteTableId">
            <summary>
            <para>
            <para>(Gateway endpoint) One or more route table IDs to disassociate from the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.RemoveSecurityGroupId">
            <summary>
            <para>
            <para>(Interface endpoint) One or more security group IDs to disassociate from the network
            interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.RemoveSubnetId">
            <summary>
            <para>
            <para>(Interface endpoint) One or more subnets IDs in which to remove the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.ResetPolicy">
            <summary>
            <para>
            <para>(Gateway endpoint) Specify <code>true</code> to reset the policy document to the default
            policy. The default policy allows full access to the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>The ID of the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet">
            <summary>
            Modifies a connection notification for VPC endpoint or VPC endpoint service. You can
            change the SNS topic for the notification, or the events for which to be notified.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.ConnectionEvent">
            <summary>
            <para>
            <para>One or more events for the endpoint. Valid values are <code>Accept</code>, <code>Connect</code>,
            <code>Delete</code>, and <code>Reject</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.ConnectionNotificationArn">
            <summary>
            <para>
            <para>The ARN for the SNS topic for the notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.ConnectionNotificationId">
            <summary>
            <para>
            <para>The ID of the notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcEndpointConnectionNotificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpcEndpointConnectionNotificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionNotificationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionNotificationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointConnectionNotificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet">
            <summary>
            Modifies the attributes of your VPC endpoint service configuration. You can change
            the Network Load Balancers for your service, and you can specify whether acceptance
            is required for requests to connect to your endpoint service through an interface
            VPC endpoint.
            
             
            <para>
            If you set or modify the private DNS name, you must prove that you own the private
            DNS domain name. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-dns-validation.html">VPC
            Endpoint Service Private DNS Name Verification</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.AcceptanceRequired">
            <summary>
            <para>
            <para>Indicates whether requests to create an endpoint to your service must be accepted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.AddNetworkLoadBalancerArn">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.PrivateDnsName">
            <summary>
            <para>
            <para>The private DNS name to assign to the endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.RemoveNetworkLoadBalancerArn">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.RemovePrivateDnsName">
            <summary>
            <para>
            <para>Removes the private DNS name of the endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcEndpointServiceConfigurationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpcEndpointServiceConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcEndpointServiceConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet">
            <summary>
            Modifies the VPC peering connection options on one side of a VPC peering connection.
            You can do the following:
            
             <ul><li><para>
            Enable/disable communication over the peering connection between an EC2-Classic instance
            that's linked to your VPC (using ClassicLink) and instances in the peer VPC.
            </para></li><li><para>
            Enable/disable communication over the peering connection between instances in your
            VPC and an EC2-Classic instance that's linked to the peer VPC.
            </para></li><li><para>
            Enable/disable the ability to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para></li></ul><para>
            If the peered VPCs are in the same AWS account, you can enable DNS resolution for
            queries from the local VPC. This ensures that queries from the local VPC resolve to
            private IP addresses in the peer VPC. This option is not available if the peered VPCs
            are in different AWS accounts or different Regions. For peered VPCs in different AWS
            accounts, each AWS account owner must initiate a separate request to modify the peering
            connection options. For inter-region peering connections, you must use the Region
            for the requester VPC to modify the requester VPC peering options and the Region for
            the accepter VPC to modify the accepter VPC peering options. To verify which VPCs
            are the accepter and the requester for a VPC peering connection, use the <a>DescribeVpcPeeringConnections</a>
            command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.AccepterPeeringConnectionOptions_AllowDnsResolutionFromRemoteVpc">
            <summary>
            <para>
            <para>If true, enables a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.RequesterPeeringConnectionOptions_AllowDnsResolutionFromRemoteVpc">
            <summary>
            <para>
            <para>If true, enables a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.AccepterPeeringConnectionOptions_AllowEgressFromLocalClassicLinkToRemoteVpc">
            <summary>
            <para>
            <para>If true, enables outbound communication from an EC2-Classic instance that's linked
            to a local VPC using ClassicLink to instances in a peer VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.RequesterPeeringConnectionOptions_AllowEgressFromLocalClassicLinkToRemoteVpc">
            <summary>
            <para>
            <para>If true, enables outbound communication from an EC2-Classic instance that's linked
            to a local VPC using ClassicLink to instances in a peer VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.AccepterPeeringConnectionOptions_AllowEgressFromLocalVpcToRemoteClassicLink">
            <summary>
            <para>
            <para>If true, enables outbound communication from instances in a local VPC to an EC2-Classic
            instance that's linked to a peer VPC using ClassicLink.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.RequesterPeeringConnectionOptions_AllowEgressFromLocalVpcToRemoteClassicLink">
            <summary>
            <para>
            <para>If true, enables outbound communication from instances in a local VPC to an EC2-Classic
            instance that's linked to a peer VPC using ClassicLink.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of the VPC peering connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcPeeringConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcPeeringConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcPeeringConnectionOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet">
            <summary>
            Modifies the instance tenancy attribute of the specified VPC. You can change the instance
            tenancy attribute of a VPC to <code>default</code> only. You cannot change the instance
            tenancy attribute to <code>dedicated</code>.
            
             
            <para>
            After you modify the tenancy of the VPC, any new instances that you launch into the
            VPC have a tenancy of <code>default</code>, unless you specify otherwise during launch.
            The tenancy of any existing instances in the VPC is not affected.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet.InstanceTenancy">
            <summary>
            <para>
            <para>The instance tenancy attribute for the VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpcTenancyResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpcTenancyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpcTenancyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet">
            <summary>
            Modifies the customer gateway or the target gateway of an AWS Site-to-Site VPN connection.
            To modify the target gateway, the following migration options are available:
            
             <ul><li><para>
            An existing virtual private gateway to a new virtual private gateway
            </para></li><li><para>
            An existing virtual private gateway to a transit gateway
            </para></li><li><para>
            An existing transit gateway to a new transit gateway
            </para></li><li><para>
            An existing transit gateway to a virtual private gateway
            </para></li></ul><para>
            Before you perform the migration to the new gateway, you must configure the new gateway.
            Use <a>CreateVpnGateway</a> to create a virtual private gateway, or <a>CreateTransitGateway</a>
            to create a transit gateway.
            </para><para>
            This step is required when you migrate from a virtual private gateway with static
            routes to a transit gateway. 
            </para><para>
            You must delete the static routes before you migrate to the new gateway.
            </para><para>
            Keep a copy of the static route before you delete it. You will need to add back these
            routes to the transit gateway after the VPN connection migration is complete.
            </para><para>
            After you migrate to the new gateway, you might need to modify your VPC route table.
            Use <a>CreateRoute</a> and <a>DeleteRoute</a> to make the changes described in <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/modify-vpn-target.html#step-update-routing">VPN
            Gateway Target Modification Required VPC Route Table Updates</a> in the <i>AWS Site-to-Site
            VPN User Guide</i>.
            </para><para>
             When the new gateway is a transit gateway, modify the transit gateway route table
            to allow traffic between the VPC and the AWS Site-to-Site VPN connection. Use <a>CreateTransitGatewayRoute</a>
            to add the routes.
            </para><para>
             If you deleted VPN static routes, you must add the static routes to the transit gateway
            route table.
            </para><para>
            After you perform this operation, the AWS VPN endpoint's IP addresses on the AWS side
            and the tunnel options remain intact. Your AWS Site-to-Site VPN connection will be
            temporarily unavailable for a brief period while we provision the new endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.CustomerGatewayId">
            <summary>
            <para>
            <para>The ID of the customer gateway at your end of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway at the AWS side of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpnConnectionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpnConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet">
            <summary>
            Modifies the VPN tunnel endpoint certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the AWS Site-to-Site VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet.VpnTunnelOutsideIpAddress">
            <summary>
            <para>
            <para>The external IP address of the VPN tunnel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpnTunnelCertificateResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpnTunnelCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet">
            <summary>
            Modifies the options for a VPN tunnel in an AWS Site-to-Site VPN connection. You can
            modify multiple options for a tunnel in a single request, but you can only modify
            one tunnel at a time. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNTunnels.html">Site-to-Site
            VPN Tunnel Options for Your Site-to-Site VPN Connection</a> in the <i>AWS Site-to-Site
            VPN User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_DPDTimeoutSecond">
            <summary>
            <para>
            <para>The number of seconds after which a DPD timeout occurs.</para><para>Constraints: A value between 0 and 30.</para><para>Default: <code>30</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_IKEVersion">
            <summary>
            <para>
            <para>The IKE versions that are permitted for the VPN tunnel.</para><para>Valid values: <code>ikev1</code> | <code>ikev2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase1DHGroupNumber">
            <summary>
            <para>
            <para>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for
            phase 1 IKE negotiations.</para><para>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code>
            | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code> | <code>24</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase1EncryptionAlgorithm">
            <summary>
            <para>
            <para>One or more encryption algorithms that are permitted for the VPN tunnel for phase
            1 IKE negotiations.</para><para>Valid values: <code>AES128</code> | <code>AES256</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase1IntegrityAlgorithm">
            <summary>
            <para>
            <para>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1
            IKE negotiations.</para><para>Valid values: <code>SHA1</code> | <code>SHA2-256</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase1LifetimeSecond">
            <summary>
            <para>
            <para>The lifetime for phase 1 of the IKE negotiation, in seconds.</para><para>Constraints: A value between 900 and 28,800.</para><para>Default: <code>28800</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase2DHGroupNumber">
            <summary>
            <para>
            <para>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for
            phase 2 IKE negotiations.</para><para>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code>
            | <code>16</code> | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code>
            | <code>24</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase2EncryptionAlgorithm">
            <summary>
            <para>
            <para>One or more encryption algorithms that are permitted for the VPN tunnel for phase
            2 IKE negotiations.</para><para>Valid values: <code>AES128</code> | <code>AES256</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase2IntegrityAlgorithm">
            <summary>
            <para>
            <para>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2
            IKE negotiations.</para><para>Valid values: <code>SHA1</code> | <code>SHA2-256</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_Phase2LifetimeSecond">
            <summary>
            <para>
            <para>The lifetime for phase 2 of the IKE negotiation, in seconds.</para><para>Constraints: A value between 900 and 3,600. The value must be less than the value
            for <code>Phase1LifetimeSeconds</code>.</para><para>Default: <code>3600</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_PreSharedKey">
            <summary>
            <para>
            <para>The pre-shared key (PSK) to establish initial authentication between the virtual private
            gateway and the customer gateway.</para><para>Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores
            (_). Must be between 8 and 64 characters in length and cannot start with zero (0).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_RekeyFuzzPercentage">
            <summary>
            <para>
            <para>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>)
            during which the rekey time is randomly selected.</para><para>Constraints: A value between 0 and 100.</para><para>Default: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_RekeyMarginTimeSecond">
            <summary>
            <para>
            <para>The margin time, in seconds, before the phase 2 lifetime expires, during which the
            AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey
            is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</para><para>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</para><para>Default: <code>540</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_ReplayWindowSize">
            <summary>
            <para>
            <para>The number of packets in an IKE replay window.</para><para>Constraints: A value between 64 and 2048.</para><para>Default: <code>1024</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.TunnelOptions_TunnelInsideCidr">
            <summary>
            <para>
            <para>The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be
            unique across all VPN connections that use the same virtual private gateway. </para><para>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The
            following CIDR blocks are reserved and cannot be used:</para><ul><li><para><code>169.254.0.0/30</code></para></li><li><para><code>169.254.1.0/30</code></para></li><li><para><code>169.254.2.0/30</code></para></li><li><para><code>169.254.3.0/30</code></para></li><li><para><code>169.254.4.0/30</code></para></li><li><para><code>169.254.5.0/30</code></para></li><li><para><code>169.254.169.252/30</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the AWS Site-to-Site VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.VpnTunnelOutsideIpAddress">
            <summary>
            <para>
            <para>The external IP address of the VPN tunnel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ModifyVpnTunnelOptionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ModifyVpnTunnelOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EditEC2VpnTunnelOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2EbsEncryptionByDefaultCmdlet">
            <summary>
            Enables EBS encryption by default for your account in the current Region.
            
             
            <para>
            After you enable encryption by default, the EBS volumes that you create are are always
            encrypted, either using the default CMK or the CMK that you specified when you created
            each volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            You can specify the default CMK for encryption by default using <a>ModifyEbsDefaultKmsKeyId</a>
            or <a>ResetEbsDefaultKmsKeyId</a>.
            </para><para>
            Enabling encryption by default has no effect on the encryption status of your existing
            volumes.
            </para><para>
            After you enable encryption by default, you can no longer launch instances using instance
            types that do not support encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported
            Instance Types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2EbsEncryptionByDefaultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EbsEncryptionByDefault'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableEbsEncryptionByDefaultResponse).
            Specifying the name of a property of type Amazon.EC2.Model.EnableEbsEncryptionByDefaultResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2EbsEncryptionByDefaultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2FastSnapshotRestoreCmdlet">
            <summary>
            Enables fast snapshot restores for the specified snapshots in the specified Availability
            Zones.
            
             
            <para>
            You get the full benefit of fast snapshot restores after they enter the <code>enabled</code>
            state. To get the current state of fast snapshot restores, use <a>DescribeFastSnapshotRestores</a>.
            To disable fast snapshot restores, use <a>DisableFastSnapshotRestores</a>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-fast-snapshot-restore.html">Amazon
            EBS Fast Snapshot Restore</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2FastSnapshotRestoreCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>One or more Availability Zones. For example, <code>us-east-2a</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2FastSnapshotRestoreCmdlet.SourceSnapshotId">
            <summary>
            <para>
            <para>The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>.
            You can specify a snapshot that was shared with you from another AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2FastSnapshotRestoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableFastSnapshotRestoresResponse).
            Specifying the name of a property of type Amazon.EC2.Model.EnableFastSnapshotRestoresResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2FastSnapshotRestoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet">
            <summary>
            Enables the specified attachment to propagate routes to the specified propagation
            route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the propagation route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Propagation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableTransitGatewayRouteTablePropagationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.EnableTransitGatewayRouteTablePropagationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2TransitGatewayRouteTablePropagationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet">
            <summary>
            Enables a virtual private gateway (VGW) to propagate routes to the specified route
            table of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway that is attached to a VPC. The virtual private
            gateway must be attached to the same VPC that the routing tables are associated with.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table. The routing table must be associated with the same VPC
            that the virtual private gateway is attached to. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableVgwRoutePropagationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VgwRoutePropagationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VolumeIOCmdlet">
            <summary>
            Enables I/O operations for a volume that had I/O operations disabled because the data
            on the volume was potentially inconsistent.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VolumeIOCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VolumeIOCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableVolumeIOResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VolumeIOCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VolumeIOCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkCmdlet">
            <summary>
            Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled
            VPC to allow communication over private IP addresses. You cannot enable your VPC for
            ClassicLink if any of your VPC route tables have existing routes for address ranges
            within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs
            in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableVpcClassicLinkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.EnableVpcClassicLinkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkDnsSupportCmdlet">
            <summary>
            Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You must specify a VPC ID in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkDnsSupportCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkDnsSupportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportResponse).
            Specifying the name of a property of type Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkDnsSupportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.EnableEC2VpcClassicLinkDnsSupportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientCertificateRevocationListCmdlet">
            <summary>
            Downloads the client certificate revocation list for the specified Client VPN endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientCertificateRevocationListCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientCertificateRevocationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ExportClientVpnClientCertificateRevocationListResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ExportClientVpnClientCertificateRevocationListResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientCertificateRevocationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientCertificateRevocationListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientConfigurationCmdlet">
            <summary>
            Downloads the contents of the Client VPN endpoint configuration file for the specified
            Client VPN endpoint. The Client VPN endpoint configuration file includes the Client
            VPN endpoint and certificate information clients need to establish a connection with
            the Client VPN endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientConfigurationCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClientConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ExportClientVpnClientConfigurationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ExportClientVpnClientConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ClientVpnClientConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet">
            <summary>
            Exports an Amazon Machine Image (AMI) to a VM file. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport_image.html">Exporting
            a VM Directory from an Amazon Machine Image (AMI)</a> in the <i>VM Import/Export User
            Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.Description">
            <summary>
            <para>
            <para>A description of the image being exported. The maximum length is 255 bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.DiskImageFormat">
            <summary>
            <para>
            <para>The disk image format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.RoleName">
            <summary>
            <para>
            <para>The name of the role that grants VM Import/Export permission to export images to your
            S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.S3ExportLocation_S3Bucket">
            <summary>
            <para>
            <para>The destination S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.S3ExportLocation_S3Prefix">
            <summary>
            <para>
            <para>The prefix (logical hierarchy) in the bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.ClientToken">
            <summary>
            <para>
            <para>Token to enable idempotency for export image requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ExportImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ExportImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet">
            <summary>
            Exports routes from the specified transit gateway route table to the specified S3
            bucket. By default, all routes are exported. Alternatively, you can filter by CIDR
            range.
            
             
            <para>
            The routes are saved to the specified bucket in a JSON file. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/tgw-route-tables.html#tgw-export-route-tables">Export
            Route Tables to Amazon S3</a> in <i>Transit Gateways</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>attachment.transit-gateway-attachment-id</code> - The id of the transit gateway
            attachment.</para></li><li><para><code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</para></li><li><para><code>route-search.exact-match</code> - The exact match of the specified filter.</para></li><li><para><code>route-search.longest-prefix-match</code> - The longest prefix that matches
            the route.</para></li><li><para><code>route-search.subnet-of-match</code> - The routes with a subnet that match the
            specified CIDR filter.</para></li><li><para><code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass
            the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your
            route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns
            10.0.1.0/29.</para></li><li><para><code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code>
            | <code>deleting</code> | <code>failed</code> | <code>modifying</code> | <code>pendingAcceptance</code>
            | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-route-destination-cidr-block</code> - The CIDR range.</para></li><li><para><code>type</code> - The type of route (<code>active</code> | <code>blackhole</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.S3Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'S3Location'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ExportTransitGatewayRoutesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ExportTransitGatewayRoutesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ExportEC2TransitGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2AccountAttributeCmdlet">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul><li><para><code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para></li><li><para><code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para></li><li><para><code>max-instances</code>: This attribute is no longer supported. The returned value
            does not reflect your actual vCPU limit for running On-Demand Instances. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#ec2-on-demand-instances-limits">On-Demand
            Instance Limits</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para></li><li><para><code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para></li><li><para><code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para></li><li><para><code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AccountAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The account attribute names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AccountAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeAccountAttributesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeAccountAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AccountAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AttributeName parameter.
            The -PassThru parameter is deprecated, use -Select '^AttributeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet">
            <summary>
            Describes the specified Elastic IP addresses or all of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet.AllocationId">
            <summary>
            <para>
            <para>[EC2-VPC] Information about the allocation IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</para></li><li><para><code>association-id</code> - [EC2-VPC] The association ID for the address.</para></li><li><para><code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>)
            or in a VPC (<code>vpc</code>).</para></li><li><para><code>instance-id</code> - The ID of the instance the address is associated with,
            if any.</para></li><li><para><code>network-border-group</code> - The location from where the IP address is advertised.</para></li><li><para><code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that
            the address is associated with, if any.</para></li><li><para><code>network-interface-owner-id</code> - The AWS account ID of the owner.</para></li><li><para><code>private-ip-address</code> - [EC2-VPC] The private IP address associated with
            the Elastic IP address.</para></li><li><para><code>public-ip</code> - The Elastic IP address.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet.PublicIp">
            <summary>
            <para>
            <para>One or more Elastic IP addresses.</para><para>Default: Describes all your Elastic IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addresses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeAddressesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeAddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2AggregateIdFormatCmdlet">
            <summary>
            Describes the longer ID format settings for all resource types in a specific Region.
            This request is useful for performing a quick audit to determine whether a specific
            Region is fully opted in for longer IDs (17-character IDs).
            
             
            <para>
            This request only returns information about resource types that support longer IDs.
            </para><para>
            The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code>
            | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code>
            | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code>
            | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code>
            | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code>
            | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code>
            | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code>
            | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AggregateIdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeAggregateIdFormatResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeAggregateIdFormatResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet">
            <summary>
            Gets information about the IPv6 CIDR block associations for a specified IPv6 address
            pool.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.PoolId">
            <summary>
            <para>
            <para>The ID of the IPv6 address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ipv6CidrAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetAssociatedIpv6PoolCidrsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^PoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AssociatedIpv6PoolCidrCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet">
            <summary>
            Describes the Availability Zones and Local Zones that are available to you. If there
            is an event impacting an Availability Zone or Local Zone, you can use this request
            to view the state and any provided messages for that Availability Zone or Local Zone.
            
             
            <para>
            For more information about Availability Zones and Local Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.AllAvailabilityZone">
            <summary>
            <para>
            <para>Include all Availability Zones and Local Zones regardless of your opt in status.</para><para>If you do not use this parameter, the results include only the zones for the Regions
            where you have chosen the option to opt in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>group-name</code> - For Availability Zones, use the Region name. For Local
            Zones, use the name of the group associated with the Local Zone (for example, <code>us-west-2-lax-1</code>).</para></li><li><para><code>message</code> - The Availability Zone or Local Zone message.</para></li><li><para><code>opt-in-status</code> - The opt in status (<code>opted-in</code>, and <code>not-opted-in</code>
            | <code>opt-in-not-required</code>).</para></li><li><para><code>region-name</code> - The name of the Region for the Availability Zone or Local
            Zone (for example, <code>us-east-1</code>).</para></li><li><para><code>state</code> - The state of the Availability Zone or Local Zone (<code>available</code>
            | <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</para></li><li><para><code>zone-id</code> - The ID of the Availability Zone (for example, <code>use1-az1</code>)
            or the Local Zone (for example, use <code>usw2-lax1-az1</code>).</para></li><li><para><code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>)
            or the Local Zone (for example, use <code>us-west-2-lax-1a</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.ZoneId">
            <summary>
            <para>
            <para>The IDs of the Availability Zones and Local Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.ZoneName">
            <summary>
            <para>
            <para>The names of the Availability Zones and Local Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AvailabilityZones'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeAvailabilityZonesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeAvailabilityZonesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2AvailabilityZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ZoneName parameter.
            The -PassThru parameter is deprecated, use -Select '^ZoneName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2BundleTaskCmdlet">
            <summary>
            Describes the specified bundle tasks or all of your bundle tasks.
            
             <note><para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2BundleTaskCmdlet.BundleId">
            <summary>
            <para>
            <para>The bundle task IDs.</para><para>Default: Describes all your bundle tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2BundleTaskCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>bundle-id</code> - The ID of the bundle task.</para></li><li><para><code>error-code</code> - If the task failed, the error code returned.</para></li><li><para><code>error-message</code> - If the task failed, the error message returned.</para></li><li><para><code>instance-id</code> - The ID of the instance.</para></li><li><para><code>progress</code> - The level of task completion, as a percentage (for example,
            20%).</para></li><li><para><code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</para></li><li><para><code>s3-prefix</code> - The beginning of the AMI name.</para></li><li><para><code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</para></li><li><para><code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code>
            | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code>
            | <code>failed</code>).</para></li><li><para><code>update-time</code> - The time of the most recent update for the task.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2BundleTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BundleTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeBundleTasksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeBundleTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2BundleTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BundleId parameter.
            The -PassThru parameter is deprecated, use -Select '^BundleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ByoipCidrCmdlet">
            <summary>
            Describes the IP address ranges that were specified in calls to <a>ProvisionByoipCidr</a>.
            
             
            <para>
            To describe the address pools that were created when you provisioned the address ranges,
            use <a>DescribePublicIpv4Pools</a> or <a>DescribeIpv6Pools</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ByoipCidrCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ByoipCidrCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ByoipCidrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ByoipCidrs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeByoipCidrsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeByoipCidrsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ByoipCidrCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet">
            <summary>
            Describes one or more of your Capacity Reservations. The results describe only the
            Capacity Reservations in the AWS Region that you're currently using.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>instance-type</code> - The type of instance for which the Capacity Reservation
            reserves capacity.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the Capacity Reservation.</para></li><li><para><code>availability-zone-id</code> - The Availability Zone ID of the Capacity Reservation.</para></li><li><para><code>instance-platform</code> - The type of operating system for which the Capacity
            Reservation reserves capacity.</para></li><li><para><code>availability-zone</code> - The Availability Zone ID of the Capacity Reservation.</para></li><li><para><code>tenancy</code> - Indicates the tenancy of the Capacity Reservation. A Capacity
            Reservation can have one of the following tenancy settings:</para><ul><li><para><code>default</code> - The Capacity Reservation is created on hardware that is shared
            with other AWS accounts.</para></li><li><para><code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware
            that is dedicated to a single AWS account.</para></li></ul></li><li><para><code>state</code> - The current state of the Capacity Reservation. A Capacity Reservation
            can be in one of the following states:</para><ul><li><para><code>active</code>- The Capacity Reservation is active and the capacity is available
            for your use.</para></li><li><para><code>expired</code> - The Capacity Reservation expired automatically at the date
            and time specified in your request. The reserved capacity is no longer available for
            your use.</para></li><li><para><code>cancelled</code> - The Capacity Reservation was manually cancelled. The reserved
            capacity is no longer available for your use.</para></li><li><para><code>pending</code> - The Capacity Reservation request was successful but the capacity
            provisioning is still pending.</para></li><li><para><code>failed</code> - The Capacity Reservation request has failed. A request might
            fail due to invalid request parameters, capacity constraints, or instance limit constraints.
            Failed requests are retained for 60 minutes.</para></li></ul></li><li><para><code>end-date</code> - The date and time at which the Capacity Reservation expires.
            When a Capacity Reservation expires, the reserved capacity is released and you can
            no longer launch instances into it. The Capacity Reservation's state changes to expired
            when it reaches its end date and time.</para></li><li><para><code>end-date-type</code> - Indicates the way in which the Capacity Reservation
            ends. A Capacity Reservation can have one of the following end types:</para><ul><li><para><code>unlimited</code> - The Capacity Reservation remains active until you explicitly
            cancel it.</para></li><li><para><code>limited</code> - The Capacity Reservation expires automatically at a specified
            date and time.</para></li></ul></li><li><para><code>instance-match-criteria</code> - Indicates the type of instance launches that
            the Capacity Reservation accepts. The options include:</para><ul><li><para><code>open</code> - The Capacity Reservation accepts all instances that have matching
            attributes (instance type, platform, and Availability Zone). Instances that have matching
            attributes launch into the Capacity Reservation automatically without specifying any
            additional parameters.</para></li><li><para><code>targeted</code> - The Capacity Reservation only accepts instances that have
            matching attributes (instance type, platform, and Availability Zone), and explicitly
            target the Capacity Reservation. This ensures that only permitted instances can use
            the reserved capacity.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CapacityReservations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeCapacityReservationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeCapacityReservationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet">
            <summary>
            Gets usage information about a Capacity Reservation. If the Capacity Reservation is
            shared, it shows usage information for the Capacity Reservation owner and each AWS
            account that is currently using the shared capacity. If the Capacity Reservation is
            not shared, it shows only the Capacity Reservation owner's usage.<br/><br/>In the AWS.Tools.EC2 module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned nextToken value.</para><para>Valid range: Minimum value of 1. Maximum value of 1000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.EC2 module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetCapacityReservationUsageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetCapacityReservationUsageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CapacityReservationId parameter.
            The -PassThru parameter is deprecated, use -Select '^CapacityReservationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CapacityReservationUsageCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet">
            <summary>
            Describes one or more of your linked EC2-Classic instances. This request only returns
            information about EC2-Classic instances linked to a VPC through ClassicLink. You cannot
            use this request to return information about other instances.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>group-id</code> - The ID of a VPC security group that's associated with the
            instance.</para></li><li><para><code>instance-id</code> - The ID of the instance.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC to which the instance is linked.</para><para><code>vpc-id</code> - The ID of the VPC that the instance is linked to.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>One or more instance IDs. Must be instances linked to a VPC through ClassicLink.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>Constraint: If the value is greater than 1000, we return only 1000 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClassicLinkInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClassicLinkInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClassicLinkInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet">
            <summary>
            Describes the authorization rules for a specified Client VPN endpoint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>description</code> - The description of the authorization rule.</para></li><li><para><code>destination-cidr</code> - The CIDR of the network to which the authorization
            rule applies.</para></li><li><para><code>group-id</code> - The ID of the Active Directory group to which the authorization
            rule grants access.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AuthorizationRules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClientVpnAuthorizationRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnAuthorizationRuleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet">
            <summary>
            Describes active client connections and connections that have been terminated within
            the last 60 minutes for the specified Client VPN endpoint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>connection-id</code> - The ID of the connection.</para></li><li><para><code>username</code> - For Active Directory client authentication, the user name
            of the client who established the client connection.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClientVpnConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClientVpnConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnConnectionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet">
            <summary>
            Describes one or more Client VPN endpoints in the account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>endpoint-id</code> - The ID of the Client VPN endpoint.</para></li><li><para><code>transport-protocol</code> - The transport protocol (<code>tcp</code> | <code>udp</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClientVpnEndpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClientVpnEndpointsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClientVpnEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnEndpointCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet">
            <summary>
            Describes the routes for the specified Client VPN endpoint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>destination-cidr</code> - The CIDR of the route destination.</para></li><li><para><code>origin</code> - How the route was associated with the Client VPN endpoint (<code>associate</code>
            | <code>add-route</code>).</para></li><li><para><code>target-subnet</code> - The ID of the subnet through which traffic is routed.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Routes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClientVpnRoutesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClientVpnRoutesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnRouteCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet">
            <summary>
            Describes the target networks associated with the specified Client VPN endpoint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.AssociationId">
            <summary>
            <para>
            <para>The IDs of the target network associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>association-id</code> - The ID of the association.</para></li><li><para><code>target-network-id</code> - The ID of the subnet specified as the target network.</para></li><li><para><code>vpc-id</code> - The ID of the VPC in which the target network is located.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the nextToken value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClientVpnTargetNetworks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeClientVpnTargetNetworksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeClientVpnTargetNetworksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ClientVpnTargetNetworkCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet">
            <summary>
            Describes the specified customer-owned address pools or all of your customer-owned
            address pools.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.Filter">
            <summary>
            <para>
            <para>The filters. The following are the possible values:</para><ul><li><para><code>coip-pool.pool-id</code></para></li></ul><ul><li><para><code>coip-pool.local-gateway-route-table-id</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.PoolId">
            <summary>
            <para>
            <para>The IDs of the address pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CoipPools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeCoipPoolsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeCoipPoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet">
            <summary>
            Describes the allocations from the specified customer-owned address pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.Filter">
            <summary>
            <para>
            <para>The filters. The following are the possible values:</para><ul><li><para><code>coip-address-usage.allocation-id</code></para></li></ul><ul><li><para><code>coip-address-usage.aws-account-id</code></para></li></ul><ul><li><para><code>coip-address-usage.aws-service</code></para></li></ul><ul><li><para><code>coip-address-usage.co-ip</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.PoolId">
            <summary>
            <para>
            <para>The ID of the address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetCoipPoolUsageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetCoipPoolUsageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CoipPoolUsageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^PoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleOutputCmdlet">
            <summary>
            Gets the console output for the specified instance. For Linux instances, the instance
            console output displays the exact console output that would normally be displayed
            on a physical monitor attached to a computer. For Windows instances, the instance
            console output includes the last three system event log errors.
            
             
            <para>
            By default, the console output returns buffered information that was posted shortly
            after an instance transition state (start, stop, reboot, or terminate). This information
            is available for at least one hour after the most recent post. Only the most recent
            64 KB of console output is available.
            </para><para>
            You can optionally retrieve the latest serial console output at any time during the
            instance lifecycle. This option is supported on instance types that use the Nitro
            hypervisor.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html#instance-console-console-output">Instance
            Console Output</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleOutputCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleOutputCmdlet.Latest">
            <summary>
            <para>
            <para>When enabled, retrieves the latest console output for the instance.</para><para>Default: disabled (<code>false</code>)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleOutputCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetConsoleOutputResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetConsoleOutputResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleOutputCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleScreenshotCmdlet">
            <summary>
            Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.
            
             
            <para>
            The returned content is Base64-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleScreenshotCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleScreenshotCmdlet.WakeUp">
            <summary>
            <para>
            <para>When set to <code>true</code>, acts as keystroke input and wakes up an instance that's
            in standby or "sleep" mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleScreenshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetConsoleScreenshotResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetConsoleScreenshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ConsoleScreenshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet">
            <summary>
            Describes the credit option for CPU usage of the specified burstable performance instances.
            The credit options are <code>standard</code> and <code>unlimited</code>.
            
             
            <para>
            If you do not specify an instance ID, Amazon EC2 returns burstable performance instances
            with the <code>unlimited</code> credit option, as well as instances that were previously
            configured as T2, T3, and T3a with the <code>unlimited</code> credit option. For example,
            if you resize a T2 instance, while it is configured as <code>unlimited</code>, to
            an M4 instance, Amazon EC2 returns the M4 instance.
            </para><para>
            If you specify one or more instance IDs, Amazon EC2 returns the credit option (<code>standard</code>
            or <code>unlimited</code>) of those instances. If you specify an instance ID that
            is not valid, such as an instance that is not a burstable performance instance, an
            error is returned.
            </para><para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para><para>
            If an Availability Zone is experiencing a service disruption and you specify instance
            IDs in the affected zone, or do not specify any instance IDs at all, the call fails.
            If you specify only instance IDs in an unaffected zone, the call works normally.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable
            Performance Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>instance-id</code> - The ID of the instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs.</para><para>Default: Describes all your instances.</para><para>Constraints: Maximum 1000 explicitly specified instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000. You cannot specify this parameter and the instance IDs
            parameter in the same call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceCreditSpecifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceCreditSpecificationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceCreditSpecificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CreditSpecificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2CustomerGatewayCmdlet">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CustomerGatewayCmdlet.CustomerGatewayId">
            <summary>
            <para>
            <para>One or more customer gateway IDs.</para><para>Default: Describes all your customer gateways.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CustomerGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous
            System Number (ASN).</para></li><li><para><code>customer-gateway-id</code> - The ID of the customer gateway.</para></li><li><para><code>ip-address</code> - The IP address of the customer gateway's Internet-routable
            external interface.</para></li><li><para><code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).</para></li><li><para><code>type</code> - The type of customer gateway. Currently, the only supported type
            is <code>ipsec.1</code>.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CustomerGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomerGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeCustomerGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeCustomerGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2CustomerGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomerGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomerGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2DefaultCreditSpecificationCmdlet">
            <summary>
            Describes the default credit option for CPU usage of a burstable performance instance
            family.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable
            Performance Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DefaultCreditSpecificationCmdlet.InstanceFamily">
            <summary>
            <para>
            <para>The instance family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DefaultCreditSpecificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceFamilyCreditSpecification'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetDefaultCreditSpecificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetDefaultCreditSpecificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DefaultCreditSpecificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.DhcpOptionsId">
            <summary>
            <para>
            <para>The IDs of one or more DHCP options sets.</para><para>Default: Describes all your DHCP options sets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>dhcp-options-id</code> - The ID of a DHCP options set.</para></li><li><para><code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</para></li><li><para><code>value</code> - The value for one of the options.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the DHCP options set.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DhcpOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeDhcpOptionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeDhcpOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DhcpOptionsId parameter.
            The -PassThru parameter is deprecated, use -Select '^DhcpOptionsId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2DhcpOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EbsDefaultKmsKeyIdCmdlet">
            <summary>
            Describes the default customer master key (CMK) for EBS encryption by default for
            your account in this Region. You can change the default CMK for encryption by default
            using <a>ModifyEbsDefaultKmsKeyId</a> or <a>ResetEbsDefaultKmsKeyId</a>.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EbsDefaultKmsKeyIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KmsKeyId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetEbsDefaultKmsKeyIdResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetEbsDefaultKmsKeyIdResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EbsEncryptionByDefaultCmdlet">
            <summary>
            Describes whether EBS encryption by default is enabled for your account in the current
            Region.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EbsEncryptionByDefaultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EbsEncryptionByDefault'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetEbsEncryptionByDefaultResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetEbsEncryptionByDefaultResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet">
            <summary>
            Describes one or more of your egress-only internet gateways.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.EgressOnlyInternetGatewayId">
            <summary>
            <para>
            <para>One or more egress-only internet gateway IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EgressOnlyInternetGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeEgressOnlyInternetGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EgressOnlyInternetGatewayListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet">
            <summary>
            Describes the Elastic Graphics accelerator associated with your instances. For more
            information about Elastic Graphics, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon
            Elastic Graphics</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.ElasticGpuId">
            <summary>
            <para>
            <para>The Elastic Graphics accelerator IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone in which the Elastic Graphics
            accelerator resides.</para></li><li><para><code>elastic-gpu-health</code> - The status of the Elastic Graphics accelerator
            (<code>OK</code> | <code>IMPAIRED</code>).</para></li><li><para><code>elastic-gpu-state</code> - The state of the Elastic Graphics accelerator (<code>ATTACHED</code>).</para></li><li><para><code>elastic-gpu-type</code> - The type of Elastic Graphics accelerator; for example,
            <code>eg1.medium</code>.</para></li><li><para><code>instance-id</code> - The ID of the instance to which the Elastic Graphics accelerator
            is associated.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ElasticGpuSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeElasticGpusResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeElasticGpusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ElasticGpuCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet">
            <summary>
            Describes the VPC endpoint connections to your VPC endpoint services, including any
            endpoints that are pending your acceptance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>service-id</code> - The ID of the service.</para></li><li><para><code>vpc-endpoint-owner</code> - The AWS account number of the owner of the endpoint.</para></li><li><para><code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code>
            | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>
            | <code>rejected</code> | <code>failed</code>).</para></li><li><para><code>vpc-endpoint-id</code> - The ID of the endpoint.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code>
            is given a value larger than 1,000, only 1,000 results are returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcEndpointConnections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet">
            <summary>
            Describes the connection notifications for VPC endpoints and VPC endpoint services.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.ConnectionNotificationId">
            <summary>
            <para>
            <para>The ID of the notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>connection-notification-arn</code> - The ARN of the SNS topic for the notification.</para></li><li><para><code>connection-notification-id</code> - The ID of the notification.</para></li><li><para><code>connection-notification-state</code> - The state of the notification (<code>Enabled</code>
            | <code>Disabled</code>).</para></li><li><para><code>connection-notification-type</code> - The type of notification (<code>Topic</code>).</para></li><li><para><code>service-id</code> - The ID of the endpoint service.</para></li><li><para><code>vpc-endpoint-id</code> - The ID of the VPC endpoint.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another request with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectionNotificationSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointConnectionNotificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointConnectionNotificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet">
            <summary>
            Describes the VPC endpoint service configurations in your account (your services).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>service-name</code> - The name of the service.</para></li><li><para><code>service-id</code> - The ID of the service.</para></li><li><para><code>service-state</code> - The state of the service (<code>Pending</code> | <code>Available</code>
            | <code>Deleting</code> | <code>Deleted</code> | <code>Failed</code>). </para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The IDs of one or more services.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code>
            is given a value larger than 1,000, only 1,000 results are returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointServiceConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServiceConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet">
            <summary>
            Describes the principals (service consumers) that are permitted to discover your VPC
            endpoint service.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>principal</code> - The ARN of the principal.</para></li><li><para><code>principal-type</code> - The principal type (<code>All</code> | <code>Service</code>
            | <code>OrganizationUnit</code> | <code>Account</code> | <code>User</code> | <code>Role</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code>
            is given a value larger than 1,000, only 1,000 results are returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AllowedPrincipals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointServicePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2EndpointServicePermissionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet">
            <summary>
            Describes the specified export image tasks or all your export image tasks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.ExportImageTaskId">
            <summary>
            <para>
            <para>The IDs of the export image tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.Filter">
            <summary>
            <para>
            <para>Filter tasks using the <code>task-state</code> filter and one of the following values:
            <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportImageTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeExportImageTasksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeExportImageTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportImageTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportImageTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportImageTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportTaskCmdlet">
            <summary>
            Describes the specified export instance tasks or all your export instance tasks.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportTaskCmdlet.ExportTaskId">
            <summary>
            <para>
            <para>The export task IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportTaskCmdlet.Filter">
            <summary>
            <para>
            <para>the filters for the export tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeExportTasksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeExportTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet">
            <summary>
            Describes the state of fast snapshot restores for your snapshots.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.Filter">
            <summary>
            <para>
            <para>The filters. The possible values are:</para><ul><li><para><code>availability-zone</code>: The Availability Zone of the snapshot.</para></li><li><para><code>owner-id</code>: The ID of the AWS account that owns the snapshot.</para></li><li><para><code>snapshot-id</code>: The ID of the snapshot.</para></li><li><para><code>state</code>: The state of fast snapshot restores for the snapshot (<code>enabling</code>
            | <code>optimizing</code> | <code>enabled</code> | <code>disabling</code> | <code>disabled</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FastSnapshotRestores'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFastSnapshotRestoresResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFastSnapshotRestoresResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FastSnapshotRestoreCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet">
            <summary>
            Describes the events for the specified EC2 Fleet during the specified time.
            
             
            <para>
            EC2 Fleet events are delayed by up to 30 seconds before they can be described. This
            ensures that you can query by the last evaluated time and not miss a recorded event.
            EC2 Fleet events are available for 48 hours.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.EventType">
            <summary>
            <para>
            <para>The type of events to describe. By default, all events are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.FleetId">
            <summary>
            <para>
            <para>The ID of the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HistoryRecords'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFleetHistoryResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFleetHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet">
            <summary>
            Describes the running instances for the specified EC2 Fleet.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>instance-type</code> - The instance type.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.FleetId">
            <summary>
            <para>
            <para>The ID of the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFleetInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFleetInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet">
            <summary>
            Describes the specified EC2 Fleets or all of your EC2 Fleets.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>activity-status</code> - The progress of the EC2 Fleet ( <code>error</code>
            | <code>pending-fulfillment</code> | <code>pending-termination</code> | <code>fulfilled</code>).</para></li><li><para><code>excess-capacity-termination-policy</code> - Indicates whether to terminate
            running instances if the target capacity is decreased below the current EC2 Fleet
            size (<code>true</code> | <code>false</code>).</para></li><li><para><code>fleet-state</code> - The state of the EC2 Fleet (<code>submitted</code> | <code>active</code>
            | <code>deleted</code> | <code>failed</code> | <code>deleted-running</code> | <code>deleted-terminating</code>
            | <code>modifying</code>).</para></li><li><para><code>replace-unhealthy-instances</code> - Indicates whether EC2 Fleet should replace
            unhealthy instances (<code>true</code> | <code>false</code>).</para></li><li><para><code>type</code> - The type of request (<code>instant</code> | <code>request</code>
            | <code>maintain</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.FleetId">
            <summary>
            <para>
            <para>The ID of the EC2 Fleets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Fleets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFleetsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFleetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FleetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet">
            <summary>
            Describes one or more flow logs. To view the information in your flow logs (the log
            streams for the network interfaces), you must use the CloudWatch Logs console or the
            CloudWatch Logs API.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code>
            | <code>FAILED</code>).</para></li><li><para><code>log-destination-type</code> - The type of destination to which the flow log
            publishes data. Possible destination types include <code>cloud-watch-logs</code> and
            <code>S3</code>.</para></li><li><para><code>flow-log-id</code> - The ID of the flow log.</para></li><li><para><code>log-group-name</code> - The name of the log group.</para></li><li><para><code>resource-id</code> - The ID of the VPC, subnet, or network interface.</para></li><li><para><code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code>
            | <code>ALL</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.FlowLogId">
            <summary>
            <para>
            <para>One or more flow log IDs.</para><para>Constraint: Maximum of 1000 flow log IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FlowLogs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFlowLogsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFlowLogsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FlowLogId parameter.
            The -PassThru parameter is deprecated, use -Select '^FlowLogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FlowLogCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet">
            <summary>
            Describes the Amazon FPGA Images (AFIs) available to you. These include public AFIs,
            private AFIs that you own, and AFIs owned by other AWS accounts for which you have
            load permissions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>create-time</code> - The creation time of the AFI.</para></li><li><para><code>fpga-image-id</code> - The FPGA image identifier (AFI ID).</para></li><li><para><code>fpga-image-global-id</code> - The global FPGA image identifier (AGFI ID).</para></li><li><para><code>name</code> - The name of the AFI.</para></li><li><para><code>owner-id</code> - The AWS account ID of the AFI owner.</para></li><li><para><code>product-code</code> - The product code.</para></li><li><para><code>shell-version</code> - The version of the AWS Shell that was used to create
            the bitstream.</para></li><li><para><code>state</code> - The state of the AFI (<code>pending</code> | <code>failed</code>
            | <code>available</code> | <code>unavailable</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>update-time</code> - The time of the most recent update.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.FpgaImageId">
            <summary>
            <para>
            <para>The AFI IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.Owner">
            <summary>
            <para>
            <para>Filters the AFI by owner. Specify an AWS account ID, <code>self</code> (owner is the
            sender of the request), or an AWS owner alias (valid values are <code>amazon</code>
            | <code>aws-marketplace</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FpgaImages'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFpgaImagesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFpgaImagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified Amazon FPGA Image (AFI).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The AFI attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageAttributeCmdlet.FpgaImageId">
            <summary>
            <para>
            <para>The ID of the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FpgaImageAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeFpgaImageAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeFpgaImageAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2FpgaImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Attribute parameter.
            The -PassThru parameter is deprecated, use -Select '^Attribute' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet">
            <summary>
            Describes the specified Dedicated Hosts or all your Dedicated Hosts.
            
             
            <para>
            The results describe only the Dedicated Hosts in the Region you're currently using.
            All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that
            have recently been released are listed with the state <code>released</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code>
            | <code>off</code>).</para></li><li><para><code>availability-zone</code> - The Availability Zone of the host.</para></li><li><para><code>client-token</code> - The idempotency token that you provided when you allocated
            the host.</para></li><li><para><code>host-reservation-id</code> - The ID of the reservation assigned to this host.</para></li><li><para><code>instance-type</code> - The instance type size that the Dedicated Host is configured
            to support.</para></li><li><para><code>state</code> - The allocation state of the Dedicated Host (<code>available</code>
            | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code>
            | <code>released-permanent-failure</code>).</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.HostId">
            <summary>
            <para>
            <para>The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500. If <code>maxResults</code> is given a
            larger value than 500, you receive an error.</para><para>You cannot specify this parameter and the host IDs parameter in the same request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Hosts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeHostsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeHostsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet">
            <summary>
            Describes reservations that are associated with Dedicated Hosts in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>instance-family</code> - The instance family (for example, <code>m4</code>).</para></li><li><para><code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code>
            | <code>AllUpfront</code>).</para></li><li><para><code>state</code> - The state of the reservation (<code>payment-pending</code> |
            <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.HostReservationIdSet">
            <summary>
            <para>
            <para>The host reservation IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500. If <code>maxResults</code> is given a
            larger value than 500, you receive an error.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostReservationSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeHostReservationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeHostReservationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet">
            <summary>
            Describes the Dedicated Host reservations that are available to purchase.
            
             
            <para>
            The results describe all of the Dedicated Host reservation offerings, including offerings
            that might not match the instance family and Region of your Dedicated Hosts. When
            purchasing an offering, ensure that the instance family and Region of the offering
            matches that of the Dedicated Hosts with which it is to be associated. For more information
            about supported instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
            Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>instance-family</code> - The instance family of the offering (for example,
            <code>m4</code>).</para></li><li><para><code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code>
            | <code>AllUpfront</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.MaxDuration">
            <summary>
            <para>
            <para>This is the maximum duration of the reservation to purchase, specified in seconds.
            Reservations are available in one-year and three-year terms. The number of seconds
            specified must be the number of seconds in a year (365x24x60x60) times one of the
            supported durations (1 or 3). For example, specify 94608000 for three years.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.MinDuration">
            <summary>
            <para>
            <para>This is the minimum duration of the reservation you'd like to purchase, specified
            in seconds. Reservations are available in one-year and three-year terms. The number
            of seconds specified must be the number of seconds in a year (365x24x60x60) times
            one of the supported durations (1 or 3). For example, specify 31536000 for one year.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.OfferingId">
            <summary>
            <para>
            <para>The ID of the reservation offering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500. If <code>maxResults</code> is given a
            larger value than 500, you receive an error.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OfferingSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeHostReservationOfferingsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeHostReservationOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^OfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationPurchasePreviewCmdlet">
            <summary>
            Preview a reservation purchase with configurations that match those of your Dedicated
            Host. You must have active Dedicated Hosts in your account before you purchase a reservation.
            
             
            <para>
            This is a preview of the <a>PurchaseHostReservation</a> action and does not result
            in the offering being purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationPurchasePreviewCmdlet.HostIdSet">
            <summary>
            <para>
            <para>The IDs of the Dedicated Hosts with which the reservation is associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationPurchasePreviewCmdlet.OfferingId">
            <summary>
            <para>
            <para>The offering ID of the reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationPurchasePreviewCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2HostReservationPurchasePreviewCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^OfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet">
            <summary>
            Describes your IAM instance profile associations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The IAM instance profile associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>instance-id</code> - The ID of the instance.</para></li><li><para><code>state</code> - The state of the association (<code>associating</code> | <code>associated</code>
            | <code>disassociating</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IamInstanceProfileAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeIamInstanceProfileAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IamInstanceProfileAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdentityIdFormatCmdlet">
            <summary>
            Describes the ID format settings for resources for the specified IAM user, IAM role,
            or root user. For example, you can view the resource types that are enabled for longer
            IDs. This request only returns information about resource types whose ID formats can
            be modified; it does not return information about other resource types. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            
             
            <para>
            The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code>
            | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code>
            | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code>
            | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code>
            | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code>
            | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code>
            | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code>
            | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>. 
            </para><para>
            These settings apply to the principal specified in the request. They do not apply
            to the principal that makes the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdentityIdFormatCmdlet.PrincipalArn">
            <summary>
            <para>
            <para>The ARN of the principal, which can be an IAM role, IAM user, or the root user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdentityIdFormatCmdlet.Resource">
            <summary>
            <para>
            <para>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code>
            | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code>
            | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
            <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code>
            | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code>
            | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdentityIdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeIdentityIdFormatResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeIdentityIdFormatResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdentityIdFormatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdFormatCmdlet">
            <summary>
            Describes the ID format settings for your resources on a per-Region basis, for example,
            to view which resource types are enabled for longer IDs. This request only returns
            information about resource types whose ID formats can be modified; it does not return
            information about other resource types.
            
             
            <para>
            The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code>
            | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code>
            | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code>
            | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code>
            | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code>
            | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code>
            | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code>
            | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>. 
            </para><para>
            These settings apply to the IAM user who makes the request; they do not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a>
            command. Resources created with longer IDs are visible to all IAM users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdFormatCmdlet.Resource">
            <summary>
            <para>
            <para>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code>
            | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code>
            | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
            <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code>
            | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code>
            | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeIdFormatResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeIdFormatResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2IdFormatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Resource parameter.
            The -PassThru parameter is deprecated, use -Select '^Resource' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet">
            <summary>
            Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the
            images available to you.
            
             
            <para>
            The images available to you include public images, private images that you own, and
            private images owned by other AWS accounts for which you have explicit launch permissions.
            </para><para>
            Recently deregistered images appear in the returned results for a short interval and
            then return empty results. After all instances that reference a deregistered AMI are
            terminated, specifying the ID of the image results in an error indicating that the
            AMI ID cannot be found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.ExecutableUser">
            <summary>
            <para>
            <para>Scopes the images by users with explicit launch permissions. Specify an AWS account
            ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>
            | <code>arm64</code>).</para></li><li><para><code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates
            whether the Amazon EBS volume is deleted on instance termination.</para></li><li><para><code>block-device-mapping.device-name</code> - The device name specified in the
            block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</para></li><li><para><code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the
            EBS volume.</para></li><li><para><code>block-device-mapping.volume-size</code> - The volume size of the EBS volume,
            in GiB.</para></li><li><para><code>block-device-mapping.volume-type</code> - The volume type of the EBS volume
            (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> | <code>standard</code>).</para></li><li><para><code>block-device-mapping.encrypted</code> - A Boolean that indicates whether the
            EBS volume is encrypted.</para></li><li><para><code>description</code> - The description of the image (provided during image creation).</para></li><li><para><code>ena-support</code> - A Boolean that indicates whether enhanced networking with
            ENA is enabled.</para></li><li><para><code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</para></li><li><para><code>image-id</code> - The ID of the image.</para></li><li><para><code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code>
            | <code>ramdisk</code>).</para></li><li><para><code>is-public</code> - A Boolean that indicates whether the image is public.</para></li><li><para><code>kernel-id</code> - The kernel ID.</para></li><li><para><code>manifest-location</code> - The location of the image manifest.</para></li><li><para><code>name</code> - The name of the AMI (provided during image creation).</para></li><li><para><code>owner-alias</code> - String value from an Amazon-maintained list (<code>amazon</code>
            | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to
            be confused with the user-configured AWS account alias, which is set from the IAM
            console.</para></li><li><para><code>owner-id</code> - The AWS account ID of the image owner.</para></li><li><para><code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</para></li><li><para><code>product-code</code> - The product code.</para></li><li><para><code>product-code.type</code> - The type of the product code (<code>devpay</code>
            | <code>marketplace</code>).</para></li><li><para><code>ramdisk-id</code> - The RAM disk ID.</para></li><li><para><code>root-device-name</code> - The device name of the root device volume (for example,
            <code>/dev/sda1</code>).</para></li><li><para><code>root-device-type</code> - The type of the root device volume (<code>ebs</code>
            | <code>instance-store</code>).</para></li><li><para><code>state</code> - The state of the image (<code>available</code> | <code>pending</code>
            | <code>failed</code>).</para></li><li><para><code>state-reason-code</code> - The reason code for the state change.</para></li><li><para><code>state-reason-message</code> - The message for the state change.</para></li><li><para><code>sriov-net-support</code> - A value of <code>simple</code> indicates that enhanced
            networking with the Intel 82599 VF interface is enabled.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>virtualization-type</code> - The virtualization type (<code>paravirtual</code>
            | <code>hvm</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The image IDs.</para><para>Default: Describes all images available to you.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.Owner">
            <summary>
            <para>
            <para>Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner
            is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code>
            | <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns
            all images for which you have launch permissions, regardless of ownership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Images'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeImagesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeImagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The AMI attribute.</para><para><b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code>
            attribute may return a <code>Client.AuthFailure</code> error. If this happens, use
            <a>DescribeImages</a> to get information about the block device mapping for the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageAttributeCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeImageAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeImageAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet">
            <summary>
            Displays details about an import virtual machine or import snapshot tasks that are
            already created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.Filter">
            <summary>
            <para>
            <para>Filter tasks using the <code>task-state</code> filter and one of the following values:
            <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.ImportTaskId">
            <summary>
            <para>
            <para>The IDs of the import image tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImportImageTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeImportImageTasksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeImportImageTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportImageTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet">
            <summary>
            Describes your import snapshot tasks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.ImportTaskId">
            <summary>
            <para>
            <para>A list of import snapshot task IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImportSnapshotTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeImportSnapshotTasksResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeImportSnapshotTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ImportSnapshotTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet">
            <summary>
            Describes the specified instances or all instances.
            
             
            <para>
            If you specify instance IDs, the output includes information for only the specified
            instances. If you specify filters, the output includes information for only those
            instances that meet the filter criteria. If you do not specify instance IDs or filters,
            the output includes information for all instances, which can affect performance. We
            recommend that you use pagination to ensure that the operation returns quickly and
            successfully.
            </para><para>
            If you specify an instance ID that is not valid, an error is returned. If you specify
            an instance that you do not own, it is not included in the output.
            </para><para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para><para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para><br/><br/>In the AWS.Tools.EC2 module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>affinity</code> - The affinity setting for an instance running on a Dedicated
            Host (<code>default</code> | <code>host</code>).</para></li><li><para><code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>
            | <code>arm64</code>).</para></li><li><para><code>availability-zone</code> - The Availability Zone of the instance.</para></li><li><para><code>block-device-mapping.attach-time</code> - The attach time for an EBS volume
            mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</para></li><li><para><code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates
            whether the EBS volume is deleted on instance termination.</para></li><li><para><code>block-device-mapping.device-name</code> - The device name specified in the
            block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</para></li><li><para><code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</para></li><li><para><code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</para></li><li><para><code>client-token</code> - The idempotency token you provided when you launched
            the instance.</para></li><li><para><code>dns-name</code> - The public DNS name of the instance.</para></li><li><para><code>group-id</code> - The ID of the security group for the instance. EC2-Classic
            only.</para></li><li><para><code>group-name</code> - The name of the security group for the instance. EC2-Classic
            only.</para></li><li><para><code>hibernation-options.configured</code> - A Boolean that indicates whether the
            instance is enabled for hibernation. A value of <code>true</code> means that the instance
            is enabled for hibernation. </para></li><li><para><code>host-id</code> - The ID of the Dedicated Host on which the instance is running,
            if applicable.</para></li><li><para><code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> |
            <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</para></li><li><para><code>iam-instance-profile.arn</code> - The instance profile associated with the
            instance. Specified as an ARN.</para></li><li><para><code>image-id</code> - The ID of the image used to launch the instance.</para></li><li><para><code>instance-id</code> - The ID of the instance.</para></li><li><para><code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a
            Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</para></li><li><para><code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned
            integer. The high byte is used for internal purposes and should be ignored. The low
            byte is set based on the state represented. The valid values are: 0 (pending), 16
            (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</para></li><li><para><code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).</para></li><li><para><code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</para></li><li><para><code>instance.group-id</code> - The ID of the security group for the instance. </para></li><li><para><code>instance.group-name</code> - The name of the security group for the instance.
            </para></li><li><para><code>ip-address</code> - The public IPv4 address of the instance.</para></li><li><para><code>kernel-id</code> - The kernel ID.</para></li><li><para><code>key-name</code> - The name of the key pair used when the instance was launched.</para></li><li><para><code>launch-index</code> - When launching multiple instances, this is the index
            for the instance in the launch group (for example, 0, 1, 2, and so on). </para></li><li><para><code>launch-time</code> - The time when the instance was launched.</para></li><li><para><code>metadata-options.http-tokens</code> - The metadata request authorization state
            (<code>optional</code> | <code>required</code>)</para></li><li><para><code>metadata-options.http-put-response-hop-limit</code> - The http metadata request
            put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</para></li><li><para><code>metadata-options.http-endpoint</code> - Enable or disable metadata access on
            http endpoint (<code>enabled</code> | <code>disabled</code>)</para></li><li><para><code>monitoring-state</code> - Indicates whether detailed monitoring is enabled
            (<code>disabled</code> | <code>enabled</code>).</para></li><li><para><code>network-interface.addresses.private-ip-address</code> - The private IPv4 address
            associated with the network interface.</para></li><li><para><code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address
            of the network interface is the primary private IPv4 address.</para></li><li><para><code>network-interface.addresses.association.public-ip</code> - The ID of the association
            of an Elastic IP address (IPv4) with a network interface.</para></li><li><para><code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of
            the private IPv4 address associated with the network interface.</para></li><li><para><code>network-interface.association.public-ip</code> - The address of the Elastic
            IP address (IPv4) bound to the network interface.</para></li><li><para><code>network-interface.association.ip-owner-id</code> - The owner of the Elastic
            IP address (IPv4) associated with the network interface.</para></li><li><para><code>network-interface.association.allocation-id</code> - The allocation ID returned
            when you allocated the Elastic IP address (IPv4) for your network interface.</para></li><li><para><code>network-interface.association.association-id</code> - The association ID returned
            when the network interface was associated with an IPv4 address.</para></li><li><para><code>network-interface.attachment.attachment-id</code> - The ID of the interface
            attachment.</para></li><li><para><code>network-interface.attachment.instance-id</code> - The ID of the instance to
            which the network interface is attached.</para></li><li><para><code>network-interface.attachment.instance-owner-id</code> - The owner ID of the
            instance to which the network interface is attached.</para></li><li><para><code>network-interface.attachment.device-index</code> - The device index to which
            the network interface is attached.</para></li><li><para><code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</para></li><li><para><code>network-interface.attachment.attach-time</code> - The time that the network
            interface was attached to an instance.</para></li><li><para><code>network-interface.attachment.delete-on-termination</code> - Specifies whether
            the attachment is deleted when an instance is terminated.</para></li><li><para><code>network-interface.availability-zone</code> - The Availability Zone for the
            network interface.</para></li><li><para><code>network-interface.description</code> - The description of the network interface.</para></li><li><para><code>network-interface.group-id</code> - The ID of a security group associated with
            the network interface.</para></li><li><para><code>network-interface.group-name</code> - The name of a security group associated
            with the network interface.</para></li><li><para><code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated
            with the network interface.</para></li><li><para><code>network-interface.mac-address</code> - The MAC address of the network interface.</para></li><li><para><code>network-interface.network-interface-id</code> - The ID of the network interface.</para></li><li><para><code>network-interface.owner-id</code> - The ID of the owner of the network interface.</para></li><li><para><code>network-interface.private-dns-name</code> - The private DNS name of the network
            interface.</para></li><li><para><code>network-interface.requester-id</code> - The requester ID for the network interface.</para></li><li><para><code>network-interface.requester-managed</code> - Indicates whether the network
            interface is being managed by AWS.</para></li><li><para><code>network-interface.status</code> - The status of the network interface (<code>available</code>)
            | <code>in-use</code>).</para></li><li><para><code>network-interface.source-dest-check</code> - Whether the network interface
            performs source/destination checking. A value of <code>true</code> means that checking
            is enabled, and <code>false</code> means that checking is disabled. The value must
            be <code>false</code> for the network interface to perform network address translation
            (NAT) in your VPC.</para></li><li><para><code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</para></li><li><para><code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</para></li><li><para><code>owner-id</code> - The AWS account ID of the instance owner.</para></li><li><para><code>placement-group-name</code> - The name of the placement group for the instance.</para></li><li><para><code>placement-partition-number</code> - The partition in which the instance is
            located.</para></li><li><para><code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</para></li><li><para><code>private-dns-name</code> - The private IPv4 DNS name of the instance.</para></li><li><para><code>private-ip-address</code> - The private IPv4 address of the instance.</para></li><li><para><code>product-code</code> - The product code associated with the AMI used to launch
            the instance.</para></li><li><para><code>product-code.type</code> - The type of product code (<code>devpay</code> |
            <code>marketplace</code>).</para></li><li><para><code>ramdisk-id</code> - The RAM disk ID.</para></li><li><para><code>reason</code> - The reason for the current state of the instance (for example,
            shows "User Initiated [date]" when you stop or terminate the instance). Similar to
            the state-reason-code filter.</para></li><li><para><code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).</para></li><li><para><code>reservation-id</code> - The ID of the instance's reservation. A reservation
            ID is created any time you launch an instance. A reservation ID has a one-to-one relationship
            with an instance launch request, but can be associated with more than one instance
            if you launch multiple instances using the same launch request. For example, if you
            launch one instance, you get one reservation ID. If you launch ten instances using
            the same launch request, you also get one reservation ID.</para></li><li><para><code>root-device-name</code> - The device name of the root device volume (for example,
            <code>/dev/sda1</code>).</para></li><li><para><code>root-device-type</code> - The type of the root device volume (<code>ebs</code>
            | <code>instance-store</code>).</para></li><li><para><code>source-dest-check</code> - Indicates whether the instance performs source/destination
            checking. A value of <code>true</code> means that checking is enabled, and <code>false</code>
            means that checking is disabled. The value must be <code>false</code> for the instance
            to perform network address translation (NAT) in your VPC. </para></li><li><para><code>spot-instance-request-id</code> - The ID of the Spot Instance request.</para></li><li><para><code>state-reason-code</code> - The reason code for the state change.</para></li><li><para><code>state-reason-message</code> - A message that describes the state change.</para></li><li><para><code>subnet-id</code> - The ID of the subnet for the instance.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources that have a tag with a specific key, regardless of the tag value.</para></li><li><para><code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code>
            | <code>host</code>).</para></li><li><para><code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code>
            | <code>hvm</code>).</para></li><li><para><code>vpc-id</code> - The ID of the VPC that the instance is running in.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs.</para><para>Default: Describes all your instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000. You cannot specify this parameter and the instance IDs
            parameter in the same call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.EC2 module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Reservations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified instance. You can specify only
            one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code>
            | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code>
            | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code>
            | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code>
            | <code>ebsOptimized</code> | <code>sriovNetSupport</code>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The instance attribute.</para><para>Note: The <code>enaSupport</code> attribute is not supported at this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceEventNotificationAttributeCmdlet">
            <summary>
            Describes the tag keys that are registered to appear in scheduled event notifications
            for resources in the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceEventNotificationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceTagAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceEventNotificationAttributesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceEventNotificationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet">
            <summary>
            Describes the status of the specified instances or all of your instances. By default,
            only running instances are described, unless you specifically indicate to return the
            status of all instances.
            
             
            <para>
            Instance status includes the following components:
            </para><ul><li><para><b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para></li><li><para><b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para></li><li><para><b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone of the instance.</para></li><li><para><code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code>
            | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code>
            | <code>instance-stop</code>).</para></li><li><para><code>event.description</code> - A description of the event.</para></li><li><para><code>event.instance-event-id</code> - The ID of the event whose date and time you
            are modifying.</para></li><li><para><code>event.not-after</code> - The latest end time for the scheduled event (for example,
            <code>2014-09-15T17:15:20.000Z</code>).</para></li><li><para><code>event.not-before</code> - The earliest start time for the scheduled event (for
            example, <code>2014-09-15T17:15:20.000Z</code>).</para></li><li><para><code>event.not-before-deadline</code> - The deadline for starting the event (for
            example, <code>2014-09-15T17:15:20.000Z</code>).</para></li><li><para><code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned
            integer. The high byte is used for internal purposes and should be ignored. The low
            byte is set based on the state represented. The valid values are 0 (pending), 16 (running),
            32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</para></li><li><para><code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).</para></li><li><para><code>instance-status.reachability</code> - Filters on instance status where the
            name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).</para></li><li><para><code>instance-status.status</code> - The status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).</para></li><li><para><code>system-status.reachability</code> - Filters on system status where the name
            is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).</para></li><li><para><code>system-status.status</code> - The system status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.IncludeAllInstance">
            <summary>
            <para>
            <para>When <code>true</code>, includes the health status for all instances. When <code>false</code>,
            includes the health status for running instances only.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs.</para><para>Default: Describes all your instances.</para><para>Constraints: Maximum 100 explicitly specified instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000. You cannot specify this parameter and the instance IDs
            parameter in the same call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceStatuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceStatusResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet">
            <summary>
            Describes the details of the instance types that are offered in a location. The results
            can be filtered by the attributes of the instance types.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>auto-recovery-supported</code> - Indicates whether auto recovery is supported.
            (<code>true</code> | <code>false</code>)</para></li><li><para><code>bare-metal</code> - Indicates whether it is a bare metal instance type. (<code>true</code>
            | <code>false</code>)</para></li><li><para><code>burstable-performance-supported</code> - Indicates whether it is a burstable
            performance instance type. (<code>true</code> | <code>false</code>)</para></li><li><para><code>current-generation</code> - Indicates whether this instance type is the latest
            generation instance type of an instance family. (<code>true</code> | <code>false</code>)</para></li><li><para><code>ebs-info.ebs-optimized-info.baseline-bandwidth-in-mbps</code> - The baseline
            bandwidth performance for an EBS-optimized instance type, in Mbps.</para></li><li><para><code>ebs-info.ebs-optimized-info.baseline-throughput-in-mbps</code> - The baseline
            throughput performance for an EBS-optimized instance type, in MBps.</para></li><li><para><code>ebs-info.ebs-optimized-info.baseline-iops</code> - The baseline input/output
            storage operations per second for an EBS-optimized instance type.</para></li><li><para><code>ebs-info.ebs-optimized-info.maximum-bandwidth-in-mbps</code> - The maximum
            bandwidth performance for an EBS-optimized instance type, in Mbps.</para></li><li><para><code>ebs-info.ebs-optimized-info.maximum-throughput-in-mbps</code> - The maximum
            throughput performance for an EBS-optimized instance type, in MBps.</para></li><li><para><code>ebs-info.ebs-optimized-info.maximum-iops</code> - The maximum input/output
            storage operations per second for an EBS-optimized instance type.</para></li><li><para><code>ebs-info.ebs-optimized-support</code> - Indicates whether the instance type
            is EBS-optimized. (<code>supported</code> | <code>unsupported</code> | <code>default</code>)</para></li><li><para><code>ebs-info.encryption-support</code> - Indicates whether EBS encryption is supported.
            (<code>supported</code> | <code>unsupported</code>)</para></li><li><para><code>free-tier-eligible</code> - Indicates whether the instance type is eligible
            to use in the free tier. (<code>true</code> | <code>false</code>)</para></li><li><para><code>hibernation-supported</code> - Indicates whether On-Demand hibernation is supported.
            (<code>true</code> | <code>false</code>)</para></li><li><para><code>hypervisor</code> - The hypervisor used. (<code>nitro</code> | <code>xen</code>)</para></li><li><para><code>instance-storage-info.disk.count</code> - The number of local disks.</para></li><li><para><code>instance-storage-info.disk.size-in-gb</code> - The storage size of each instance
            storage disk, in GB.</para></li><li><para><code>instance-storage-info.disk.type</code> - The storage technology for the local
            instance storage disks. (<code>hdd</code> | <code>ssd</code>)</para></li><li><para><code>instance-storage-info.total-size-in-gb</code> - The total amount of storage
            available from all local instance storage, in GB.</para></li><li><para><code>instance-storage-supported</code> - Indicates whether the instance type has
            local instance storage. (<code>true</code> | <code>false</code>)</para></li><li><para><code>memory-info.size-in-mib</code> - The memory size.</para></li><li><para><code>network-info.ena-support</code> - Indicates whether Elastic Network Adapter
            (ENA) is supported or required. (<code>required</code> | <code>supported</code> |
            <code>unsupported</code>)</para></li><li><para><code>network-info.efa-supported</code> - Indicates whether the instance type supports
            Elastic Fabric Adapter (EFA). (<code>true</code> | <code>false</code>)</para></li><li><para><code>network-info.ipv4-addresses-per-interface</code> - The maximum number of private
            IPv4 addresses per network interface.</para></li><li><para><code>network-info.ipv6-addresses-per-interface</code> - The maximum number of private
            IPv6 addresses per network interface.</para></li><li><para><code>network-info.ipv6-supported</code> - Indicates whether the instance type supports
            IPv6. (<code>true</code> | <code>false</code>)</para></li><li><para><code>network-info.maximum-network-interfaces</code> - The maximum number of network
            interfaces per instance.</para></li><li><para><code>network-info.network-performance</code> - Describes the network performance.</para></li><li><para><code>processor-info.sustained-clock-speed-in-ghz</code> - The CPU clock speed, in
            GHz.</para></li><li><para><code>vcpu-info.default-cores</code> - The default number of cores for the instance
            type.</para></li><li><para><code>vcpu-info.default-threads-per-core</code> - The default number of threads per
            core for the instance type.</para></li><li><para><code>vcpu-info.default-vcpus</code> - The default number of vCPUs for the instance
            type.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.InstanceType">
            <summary>
            <para>
            <para>The instance types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the next token value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceTypesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet">
            <summary>
            Returns a list of all instance types offered. The results can be filtered by location
            (Region or Availability Zone). If no location is specified, the instance types offered
            in the current Region are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Filter names and values are case-sensitive.</para><ul><li><para><code>location</code> - This depends on the location type. For example, if the location
            type is <code>region</code> (default), the location is the Region code (for example,
            <code>us-east-2</code>.)</para></li><li><para><code>instance-type</code> - The instance type.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.LocationType">
            <summary>
            <para>
            <para>The location type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the next token value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceTypeOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInstanceTypeOfferingsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInstanceTypeOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InstanceTypeOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet">
            <summary>
            Describes one or more of your internet gateways.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC (<code>available</code>). Present only if a VPC is attached.</para></li><li><para><code>attachment.vpc-id</code> - The ID of an attached VPC.</para></li><li><para><code>internet-gateway-id</code> - The ID of the Internet gateway.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the internet gateway.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.InternetGatewayId">
            <summary>
            <para>
            <para>One or more internet gateway IDs.</para><para>Default: Describes all your internet gateways.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InternetGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeInternetGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeInternetGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InternetGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^InternetGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2InternetGatewayCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet">
            <summary>
            Describes your IPv6 address pools.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.PoolId">
            <summary>
            <para>
            <para>The IDs of the IPv6 address pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ipv6Pools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeIpv6PoolsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeIpv6PoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2Ipv6PoolCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet">
            <summary>
            Describes the specified key pairs or all of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>key-pair-id</code> - The ID of the key pair.</para></li><li><para><code>fingerprint</code> - The fingerprint of the key pair.</para></li><li><para><code>key-name</code> - The name of the key pair.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet.KeyName">
            <summary>
            <para>
            <para>The key pair names.</para><para>Default: Describes all your key pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet.KeyPairId">
            <summary>
            <para>
            <para>The IDs of the key pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPairs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeKeyPairsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeKeyPairsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2KeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LaunchTemplateDataCmdlet">
            <summary>
            Retrieves the configuration data of the specified instance. You can use this data
            to create a launch template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LaunchTemplateDataCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LaunchTemplateDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplateData'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetLaunchTemplateDataResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetLaunchTemplateDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LaunchTemplateDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet">
            <summary>
            Describes one or more local gateways. By default, all local gateways are described.
            Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.LocalGatewayId">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>local-gateway-id</code> - The ID of a local gateway.</para></li><li><para><code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</para></li><li><para><code>local-gateway-route-table-virtual-interface-group-association-id</code> - The
            ID of the association.</para></li><li><para><code>local-gateway-route-table-virtual-interface-group-id</code> - The ID of the
            virtual interface group.</para></li><li><para><code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</para></li><li><para><code>state</code> - The state of the association.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet">
            <summary>
            Describes one or more local gateway route tables. By default, all local gateway route
            tables are described. Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>local-gateway-id</code> - The ID of a local gateway.</para></li><li><para><code>local-gateway-route-table-id</code> - The ID of a local gateway route table.</para></li><li><para><code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</para></li><li><para><code>state</code> - The state of the local gateway route table.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.LocalGatewayRouteTableId">
            <summary>
            <para>
            <para>The IDs of the local gateway route tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayRouteTables'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewayRouteTablesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewayRouteTablesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet">
            <summary>
            Describes the associations between virtual interface groups and local gateway route
            tables.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>local-gateway-id</code> - The ID of a local gateway.</para></li><li><para><code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</para></li><li><para><code>local-gateway-route-table-virtual-interface-group-association-id</code> - The
            ID of the association.</para></li><li><para><code>local-gateway-route-table-virtual-interface-group-id</code> - The ID of the
            virtual interface group.</para></li><li><para><code>state</code> - The state of the association.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.LocalGatewayRouteTableVirtualInterfaceGroupAssociationId">
            <summary>
            <para>
            <para>The IDs of the associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayRouteTableVirtualInterfaceGroupAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVirtualInterfaceGroupAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet">
            <summary>
            Describes the specified associations between VPCs and local gateway route tables.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>local-gateway-id</code> - The ID of a local gateway.</para></li><li><para><code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</para></li><li><para><code>local-gateway-route-table-vpc-association-id</code> - The ID of the association.</para></li><li><para><code>state</code> - The state of the association.</para></li><li><para><code>vpc-id</code> - The ID of the VPC.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.LocalGatewayRouteTableVpcAssociationId">
            <summary>
            <para>
            <para>The IDs of the associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayRouteTableVpcAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewayRouteTableVpcAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayRouteTableVpcAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet">
            <summary>
            Describes the specified local gateway virtual interfaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.LocalGatewayVirtualInterfaceId">
            <summary>
            <para>
            <para>The IDs of the virtual interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayVirtualInterfaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet">
            <summary>
            Describes the specified local gateway virtual interface groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>local-gateway-id</code> - The ID of a local gateway.</para></li><li><para><code>local-gateway-virtual-interface-id</code> - The ID of the virtual interface.</para></li><li><para><code>local-gateway-virtual-interface-group-id</code> - The ID of the virtual interface
            group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.LocalGatewayVirtualInterfaceGroupId">
            <summary>
            <para>
            <para>The IDs of the virtual interface groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayVirtualInterfaceGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLocalGatewayVirtualInterfaceGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2LocalGatewayVirtualInterfaceGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet">
            <summary>
            Describes your Elastic IP addresses that are being moved to the EC2-VPC platform,
            or that are being restored to the EC2-Classic platform. This request does not return
            information about any other Elastic IP addresses in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code>
            | <code>RestoringToClassic</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.PublicIp">
            <summary>
            <para>
            <para>One or more Elastic IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code>
            is given a value outside of this range, an error is returned.</para><para>Default: If no value is provided, the default is 1000.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MovingAddressStatuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeMovingAddressesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeMovingAddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2MovingAddressCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet">
            <summary>
            Describes one or more of your NAT gateways.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>nat-gateway-id</code> - The ID of the NAT gateway.</para></li><li><para><code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</para></li><li><para><code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.NatGatewayId">
            <summary>
            <para>
            <para>One or more NAT gateway IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NatGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeNatGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeNatGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NatGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^NatGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NatGatewayCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>association.association-id</code> - The ID of an association ID for the ACL.</para></li><li><para><code>association.network-acl-id</code> - The ID of the network ACL involved in the
            association.</para></li><li><para><code>association.subnet-id</code> - The ID of the subnet involved in the association.</para></li><li><para><code>default</code> - Indicates whether the ACL is the default network ACL for the
            VPC.</para></li><li><para><code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</para></li><li><para><code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</para></li><li><para><code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</para></li><li><para><code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</para></li><li><para><code>entry.port-range.from</code> - The start of the port range specified in the
            entry. </para></li><li><para><code>entry.port-range.to</code> - The end of the port range specified in the entry.
            </para></li><li><para><code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code>
            | <code>udp</code> | <code>icmp</code> or a protocol number).</para></li><li><para><code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code>
            | <code>deny</code>).</para></li><li><para><code>entry.rule-number</code> - The number of an entry (in other words, rule) in
            the set of ACL entries.</para></li><li><para><code>network-acl-id</code> - The ID of the network ACL.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the network ACL.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC for the network ACL.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>One or more network ACL IDs.</para><para>Default: Describes all your network ACLs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkAcls'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeNetworkAclsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeNetworkAclsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkAclId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkAclId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkAclCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet">
            <summary>
            Describes one or more of your network interfaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>addresses.private-ip-address</code> - The private IPv4 addresses associated
            with the network interface.</para></li><li><para><code>addresses.primary</code> - Whether the private IPv4 address is the primary
            IP address associated with the network interface. </para></li><li><para><code>addresses.association.public-ip</code> - The association ID returned when the
            network interface was associated with the Elastic IP address (IPv4).</para></li><li><para><code>addresses.association.owner-id</code> - The owner ID of the addresses associated
            with the network interface.</para></li><li><para><code>association.association-id</code> - The association ID returned when the network
            interface was associated with an IPv4 address.</para></li><li><para><code>association.allocation-id</code> - The allocation ID returned when you allocated
            the Elastic IP address (IPv4) for your network interface.</para></li><li><para><code>association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4)
            associated with the network interface.</para></li><li><para><code>association.public-ip</code> - The address of the Elastic IP address (IPv4)
            bound to the network interface.</para></li><li><para><code>association.public-dns-name</code> - The public DNS name for the network interface
            (IPv4).</para></li><li><para><code>attachment.attachment-id</code> - The ID of the interface attachment.</para></li><li><para><code>attachment.attach-time</code> - The time that the network interface was attached
            to an instance.</para></li><li><para><code>attachment.delete-on-termination</code> - Indicates whether the attachment
            is deleted when an instance is terminated.</para></li><li><para><code>attachment.device-index</code> - The device index to which the network interface
            is attached.</para></li><li><para><code>attachment.instance-id</code> - The ID of the instance to which the network
            interface is attached.</para></li><li><para><code>attachment.instance-owner-id</code> - The owner ID of the instance to which
            the network interface is attached.</para></li><li><para><code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network
            interface is attached.</para></li><li><para><code>attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</para></li><li><para><code>availability-zone</code> - The Availability Zone of the network interface.</para></li><li><para><code>description</code> - The description of the network interface.</para></li><li><para><code>group-id</code> - The ID of a security group associated with the network interface.</para></li><li><para><code>group-name</code> - The name of a security group associated with the network
            interface.</para></li><li><para><code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with the network
            interface.</para></li><li><para><code>mac-address</code> - The MAC address of the network interface.</para></li><li><para><code>network-interface-id</code> - The ID of the network interface.</para></li><li><para><code>owner-id</code> - The AWS account ID of the network interface owner.</para></li><li><para><code>private-ip-address</code> - The private IPv4 address or addresses of the network
            interface.</para></li><li><para><code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</para></li><li><para><code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).</para></li><li><para><code>requester-managed</code> - Indicates whether the network interface is being
            managed by an AWS service (for example, AWS Management Console, Auto Scaling, and
            so on).</para></li><li><para><code>source-dest-check</code> - Indicates whether the network interface performs
            source/destination checking. A value of <code>true</code> means checking is enabled,
            and <code>false</code> means checking is disabled. The value must be <code>false</code>
            for the network interface to perform network address translation (NAT) in your VPC.
            </para></li><li><para><code>status</code> - The status of the network interface. If the network interface
            is not attached to an instance, the status is <code>available</code>; if a network
            interface is attached to an instance the status is <code>in-use</code>.</para></li><li><para><code>subnet-id</code> - The ID of the subnet for the network interface.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC for the network interface.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>One or more network interface IDs.</para><para>Default: Describes all your network interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results. You cannot
            specify this parameter and the network interface IDs parameter in the same request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkInterfaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeNetworkInterfacesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeNetworkInterfacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceAttributeCmdlet">
            <summary>
            Describes a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute of the network interface. This parameter is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceAttributeCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfaceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet">
            <summary>
            Describes the permissions for your network interfaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>network-interface-permission.network-interface-permission-id</code> - The ID
            of the permission.</para></li><li><para><code>network-interface-permission.network-interface-id</code> - The ID of the network
            interface.</para></li><li><para><code>network-interface-permission.aws-account-id</code> - The AWS account ID.</para></li><li><para><code>network-interface-permission.aws-service</code> - The AWS service.</para></li><li><para><code>network-interface-permission.permission</code> - The type of permission (<code>INSTANCE-ATTACH</code>
            | <code>EIP-ASSOCIATE</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.NetworkInterfacePermissionId">
            <summary>
            <para>
            <para>One or more network interface permission IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. If this
            parameter is not specified, up to 50 results are returned by default.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkInterfacePermissions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeNetworkInterfacePermissionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeNetworkInterfacePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2NetworkInterfacePermissionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet">
            <summary>
            Describes the specified placement groups or all of your placement groups. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>group-name</code> - The name of the placement group.</para></li><li><para><code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).</para></li><li><para><code>strategy</code> - The strategy of the placement group (<code>cluster</code>
            | <code>spread</code> | <code>partition</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources that have a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The IDs of the placement groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The names of the placement groups.</para><para>Default: Describes all your placement groups, or only those otherwise specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PlacementGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribePlacementGroupsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribePlacementGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PlacementGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet">
            <summary>
            Describes available AWS services in a prefix list format, which includes the prefix
            list name and prefix list ID of the service and the IP address range for the service.
            A prefix list ID is required for creating an outbound security group rule that allows
            traffic from a VPC to access an AWS service through a gateway VPC endpoint. Currently,
            the services that support this action are Amazon S3 and Amazon DynamoDB.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>prefix-list-id</code>: The ID of a prefix list.</para></li><li><para><code>prefix-list-name</code>: The name of a prefix list.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.PrefixListId">
            <summary>
            <para>
            <para>One or more prefix list IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PrefixLists'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribePrefixListsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribePrefixListsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrefixListId parameter.
            The -PassThru parameter is deprecated, use -Select '^PrefixListId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrefixListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet">
            <summary>
            Describes the ID format settings for the root user and all IAM roles and IAM users
            that have explicitly specified a longer ID (17-character ID) preference. 
            
             
            <para>
            By default, all IAM roles and IAM users default to the same ID settings as the root
            user, unless they explicitly override the settings. This request is useful for identifying
            those IAM users and IAM roles that have overridden the default ID settings.
            </para><para>
            The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code>
            | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code>
            | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code>
            | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code>
            | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code>
            | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code>
            | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code>
            | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code>
            | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code>
            | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.Resource">
            <summary>
            <para>
            <para>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code>
            | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code>
            | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code>
            | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code>
            | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code>
            | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
            <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code>
            | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code>
            | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code>
            | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned NextToken value. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Principals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribePrincipalIdFormatResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribePrincipalIdFormatResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Resource parameter.
            The -PassThru parameter is deprecated, use -Select '^Resource' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PrincipalIdFormatCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet">
            <summary>
            Describes the specified IPv4 address pools.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.PoolId">
            <summary>
            <para>
            <para>The IDs of the address pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PublicIpv4Pools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribePublicIpv4PoolsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribePublicIpv4PoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^PoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2PublicIpv4PoolCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet">
            <summary>
            Describes the Regions that are enabled for your account, or all Regions.
            
             
            <para>
            For a list of the Regions supported by Amazon EC2, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">
            Regions and Endpoints</a>.
            </para><para>
            For information about enabling and disabling Regions for your account, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html">Managing
            AWS Regions</a> in the <i>AWS General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet.AllRegion">
            <summary>
            <para>
            <para>Indicates whether to display all Regions, including Regions that are disabled for
            your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>endpoint</code> - The endpoint of the Region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</para></li><li><para><code>opt-in-status</code> - The opt-in status of the Region (<code>opt-in-not-required</code>
            | <code>opted-in</code> | <code>not-opted-in</code>).</para></li><li><para><code>region-name</code> - The name of the Region (for example, <code>us-east-1</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet.RegionName">
            <summary>
            <para>
            <para>The names of the Regions. You can specify any Regions, whether they are enabled and
            disabled for your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Regions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeRegionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeRegionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RegionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RegionName parameter.
            The -PassThru parameter is deprecated, use -Select '^RegionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.</para></li><li><para><code>duration</code> - The duration of the Reserved Instance (one year or three
            years), in seconds (<code>31536000</code> | <code>94608000</code>).</para></li><li><para><code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</para></li><li><para><code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).</para></li><li><para><code>instance-type</code> - The instance type that is covered by the reservation.</para></li><li><para><code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability
            Zone</code>).</para></li><li><para><code>product-description</code> - The Reserved Instance product platform description.
            Instances that include <code>(Amazon VPC)</code> in the product platform description
            will only be displayed to EC2-Classic account holders and are for use with Amazon
            VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code>
            | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red
            Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon
            VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL
            Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows
            with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code>
            | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</para></li><li><para><code>reserved-instances-id</code> - The ID of the Reserved Instance.</para></li><li><para><code>start</code> - The time at which the Reserved Instance purchase request was
            placed (for example, 2014-08-07T11:54:42.000Z).</para></li><li><para><code>state</code> - The state of the Reserved Instance (<code>payment-pending</code>
            | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.OfferingClass">
            <summary>
            <para>
            <para>Describes whether the Reserved Instance is Standard or Convertible.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.OfferingType">
            <summary>
            <para>
            <para>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01
            API version, you only have access to the <code>Medium Utilization</code> Reserved
            Instance offering type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.ReservedInstancesId">
            <summary>
            <para>
            <para>One or more Reserved Instance IDs.</para><para>Default: Describes all your Reserved Instances, or only those otherwise specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeReservedInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeReservedInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesExchangeQuoteCmdlet">
            <summary>
            Returns a quote and exchange information for exchanging one or more specified Convertible
            Reserved Instances for a new Convertible Reserved Instance. If the exchange cannot
            be performed, the reason is returned in the response. Use <a>AcceptReservedInstancesExchangeQuote</a>
            to perform the exchange.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesExchangeQuoteCmdlet.ReservedInstanceId">
            <summary>
            <para>
            <para>The IDs of the Convertible Reserved Instances to exchange.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesExchangeQuoteCmdlet.TargetConfiguration">
            <summary>
            <para>
            <para>The configuration of the target Convertible Reserved Instance to exchange for your
            current Convertible Reserved Instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesExchangeQuoteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesExchangeQuoteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para><para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para><para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>reserved-instances-id</code> - The ID of the Reserved Instances.</para></li><li><para><code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</para></li><li><para><code>status</code> - The status of the Reserved Instance listing (<code>pending</code>
            | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</para></li><li><para><code>status-message</code> - The reason for the status.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet.ReservedInstancesId">
            <summary>
            <para>
            <para>One or more Reserved Instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet.ReservedInstancesListingId">
            <summary>
            <para>
            <para>One or more Reserved Instance listing IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesListings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeReservedInstancesListingsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeReservedInstancesListingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesListingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesListingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesListingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>client-token</code> - The idempotency token for the modification request.</para></li><li><para><code>create-date</code> - The time when the modification request was created.</para></li><li><para><code>effective-date</code> - The time when the modification becomes effective.</para></li><li><para><code>modification-result.reserved-instances-id</code> - The ID for the Reserved
            Instances created as part of the modification request. This ID is only available when
            the status of the modification is <code>fulfilled</code>.</para></li><li><para><code>modification-result.target-configuration.availability-zone</code> - The Availability
            Zone for the new Reserved Instances.</para></li><li><para><code>modification-result.target-configuration.instance-count </code> - The number
            of new Reserved Instances.</para></li><li><para><code>modification-result.target-configuration.instance-type</code> - The instance
            type of the new Reserved Instances.</para></li><li><para><code>modification-result.target-configuration.platform</code> - The network platform
            of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</para></li><li><para><code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</para></li><li><para><code>reserved-instances-modification-id</code> - The ID of the modification request.</para></li><li><para><code>status</code> - The status of the Reserved Instances modification request (<code>processing</code>
            | <code>fulfilled</code> | <code>failed</code>).</para></li><li><para><code>status-message</code> - The reason for the status.</para></li><li><para><code>update-date</code> - The time when the modification request was last updated.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet.ReservedInstancesModificationId">
            <summary>
            <para>
            <para>IDs for the submitted modification request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesModifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesModificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which the Reserved Instance can be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.</para></li><li><para><code>duration</code> - The duration of the Reserved Instance (for example, one year
            or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</para></li><li><para><code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).</para></li><li><para><code>instance-type</code> - The instance type that is covered by the reservation.</para></li><li><para><code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance
            Marketplace offerings. When this filter is not used, which is the default behavior,
            all offerings from both AWS and the Reserved Instance Marketplace are listed.</para></li><li><para><code>product-description</code> - The Reserved Instance product platform description.
            Instances that include <code>(Amazon VPC)</code> in the product platform description
            will only be displayed to EC2-Classic account holders and are for use with Amazon
            VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE
            Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code>
            | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows
            (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows
            with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code>
            | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL
            Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>)
            </para></li><li><para><code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</para></li><li><para><code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code>
            or <code>Region</code>).</para></li><li><para><code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.IncludeMarketplace">
            <summary>
            <para>
            <para>Include Reserved Instance Marketplace offerings in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.InstanceTenancy">
            <summary>
            <para>
            <para>The tenancy of the instances covered by the reservation. A Reserved Instance with
            a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant
            hardware (i.e., Dedicated Instances).</para><para><b>Important:</b> The <code>host</code> value cannot be used with this parameter.
            Use the <code>default</code> or <code>dedicated</code> values only.</para><para>Default: <code>default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.InstanceType">
            <summary>
            <para>
            <para>The instance type that the reservation will cover (for example, <code>m1.small</code>).
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.MaxDuration">
            <summary>
            <para>
            <para>The maximum duration (in seconds) to filter when searching for offerings.</para><para>Default: 94608000 (3 years)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.MaxInstanceCount">
            <summary>
            <para>
            <para>The maximum number of instances to filter when searching for offerings.</para><para>Default: 20</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.MinDuration">
            <summary>
            <para>
            <para>The minimum duration (in seconds) to filter when searching for offerings.</para><para>Default: 2592000 (1 month)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.OfferingClass">
            <summary>
            <para>
            <para>The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.OfferingType">
            <summary>
            <para>
            <para>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01
            API version, you only have access to the <code>Medium Utilization</code> Reserved
            Instance offering type. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.ProductDescription">
            <summary>
            <para>
            <para>The Reserved Instance product platform description. Instances that include <code>(Amazon
            VPC)</code> in the description are for use with Amazon VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.ReservedInstancesOfferingId">
            <summary>
            <para>
            <para>One or more Reserved Instances offering IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. The maximum is 100.</para><para>Default: 100</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ReservedInstancesOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>association.route-table-association-id</code> - The ID of an association ID
            for the route table.</para></li><li><para><code>association.route-table-id</code> - The ID of the route table involved in the
            association.</para></li><li><para><code>association.subnet-id</code> - The ID of the subnet involved in the association.</para></li><li><para><code>association.main</code> - Indicates whether the route table is the main route
            table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not
            have an association ID are not returned in the response.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the route table.</para></li><li><para><code>route-table-id</code> - The ID of the route table.</para></li><li><para><code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route
            in the table.</para></li><li><para><code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in
            a route in the route table.</para></li><li><para><code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service
            specified in a route in the table.</para></li><li><para><code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet
            gateway specified in a route in the route table.</para></li><li><para><code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</para></li><li><para><code>route.instance-id</code> - The ID of an instance specified in a route in the
            table.</para></li><li><para><code>route.nat-gateway-id</code> - The ID of a NAT gateway.</para></li><li><para><code>route.transit-gateway-id</code> - The ID of a transit gateway.</para></li><li><para><code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code>
            indicates that the route was automatically created when the route table was created;
            <code>CreateRoute</code> indicates that the route was manually added to the route
            table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated
            by route propagation.</para></li><li><para><code>route.state</code> - The state of a route in the route table (<code>active</code>
            | <code>blackhole</code>). The blackhole state indicates that the route's target isn't
            available (for example, the specified gateway isn't attached to the VPC, the specified
            NAT instance has been terminated, and so on).</para></li><li><para><code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection
            specified in a route in the table.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>transit-gateway-id</code> - The ID of a transit gateway.</para></li><li><para><code>vpc-id</code> - The ID of the VPC for the route table.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.RouteTableId">
            <summary>
            <para>
            <para>One or more route table IDs.</para><para>Default: Describes all your route tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RouteTables'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeRouteTablesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeRouteTablesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2RouteTableCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet">
            <summary>
            Describes the specified Scheduled Instances or all your Scheduled Instances.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.SlotStartTimeRange_UtcEarliestTime">
            <summary>
            <para>
            <para>The earliest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</para></li><li><para><code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</para></li><li><para><code>network-platform</code> - The network platform (<code>EC2-Classic</code> or
            <code>EC2-VPC</code>).</para></li><li><para><code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.SlotStartTimeRange_UtcLatestTime">
            <summary>
            <para>
            <para>The latest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.ScheduledInstanceId">
            <summary>
            <para>
            <para>The Scheduled Instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.SlotStartTimeRange_EarliestTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EarliestTimeUtc instead. Setting either EarliestTime
            or EarliestTimeUtc results in both EarliestTime and EarliestTimeUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value
            of both. EarliestTime is provided for backwards compatibility only and assigning a
            non-Utc DateTime to it results in the wrong timestamp being passed to the service.</para><para>The earliest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.SlotStartTimeRange_LatestTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use LatestTimeUtc instead. Setting either LatestTime or
            LatestTimeUtc results in both LatestTime and LatestTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. LatestTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The latest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. This value can be between
            5 and 300. The default value is 100. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledInstanceSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeScheduledInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeScheduledInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet">
            <summary>
            Finds available schedules that meet the specified criteria.
            
             
            <para>
            You can search for an available schedule no more than 3 months in advance. You must
            meet the minimum required duration of 1,200 hours per year. For example, the minimum
            daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum
            monthly schedule is 100 hours.
            </para><para>
            After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a>
            to purchase Scheduled Instances with that schedule.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.FirstSlotStartTimeRange_UtcEarliestTime">
            <summary>
            <para>
            <para>The earliest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</para></li><li><para><code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</para></li><li><para><code>network-platform</code> - The network platform (<code>EC2-Classic</code> or
            <code>EC2-VPC</code>).</para></li><li><para><code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Recurrence_Frequency">
            <summary>
            <para>
            <para>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Recurrence_Interval">
            <summary>
            <para>
            <para>The interval quantity. The interval unit depends on the value of <code>Frequency</code>.
            For example, every 2 weeks or every 2 months.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.FirstSlotStartTimeRange_UtcLatestTime">
            <summary>
            <para>
            <para>The latest date and time, in UTC, for the Scheduled Instance to start. This value
            must be later than or equal to the earliest date and at most three months in the future.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.MaxSlotDurationInHour">
            <summary>
            <para>
            <para>The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code>
            and less than 1,720.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.MinSlotDurationInHour">
            <summary>
            <para>
            <para>The minimum available duration, in hours. The minimum required duration is 1,200 hours
            per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule
            is 24 hours, and the minimum monthly schedule is 100 hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Recurrence_OccurrenceDay">
            <summary>
            <para>
            <para>The days. For a monthly schedule, this is one or more days of the month (1-31). For
            a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).
            You can't specify this value with a daily schedule. If the occurrence is relative
            to the end of the month, you can specify only a single day.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Recurrence_OccurrenceRelativeToEnd">
            <summary>
            <para>
            <para>Indicates whether the occurrence is relative to the end of the specified week or month.
            You can't specify this value with a daily schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Recurrence_OccurrenceUnit">
            <summary>
            <para>
            <para>The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
            This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code>
            with a weekly schedule. You can't specify this value with a daily schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.FirstSlotStartTimeRange_EarliestTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EarliestTimeUtc instead. Setting either EarliestTime
            or EarliestTimeUtc results in both EarliestTime and EarliestTimeUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value
            of both. EarliestTime is provided for backwards compatibility only and assigning a
            non-Utc DateTime to it results in the wrong timestamp being passed to the service.</para><para>The earliest date and time, in UTC, for the Scheduled Instance to start.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.FirstSlotStartTimeRange_LatestTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use LatestTimeUtc instead. Setting either LatestTime or
            LatestTimeUtc results in both LatestTime and LatestTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. LatestTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The latest date and time, in UTC, for the Scheduled Instance to start. This value
            must be later than or equal to the earliest date and at most three months in the future.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. This value can be between
            5 and 300. The default value is 300. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledInstanceAvailabilitySet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2ScheduledInstanceAvailabilityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet">
            <summary>
            Describes the specified security groups or all of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.Filter">
            <summary>
            <para>
            <para>The filters. If using multiple filters for rules, the results include security groups
            for which any combination of rules - not necessarily a single rule - match all filters.</para><ul><li><para><code>description</code> - The description of the security group.</para></li><li><para><code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound security
            group rule.</para></li><li><para><code>egress.ip-permission.from-port</code> - For an outbound rule, the start of
            port range for the TCP and UDP protocols, or an ICMP type number.</para></li><li><para><code>egress.ip-permission.group-id</code> - The ID of a security group that has
            been referenced in an outbound security group rule.</para></li><li><para><code>egress.ip-permission.group-name</code> - The name of a security group that
            has been referenced in an outbound security group rule.</para></li><li><para><code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an outbound
            security group rule.</para></li><li><para><code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service
            to which a security group rule allows outbound access.</para></li><li><para><code>egress.ip-permission.protocol</code> - The IP protocol for an outbound security
            group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol
            number).</para></li><li><para><code>egress.ip-permission.to-port</code> - For an outbound rule, the end of port
            range for the TCP and UDP protocols, or an ICMP code.</para></li><li><para><code>egress.ip-permission.user-id</code> - The ID of an AWS account that has been
            referenced in an outbound security group rule.</para></li><li><para><code>group-id</code> - The ID of the security group. </para></li><li><para><code>group-name</code> - The name of the security group.</para></li><li><para><code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security group
            rule.</para></li><li><para><code>ip-permission.from-port</code> - For an inbound rule, the start of port range
            for the TCP and UDP protocols, or an ICMP type number.</para></li><li><para><code>ip-permission.group-id</code> - The ID of a security group that has been referenced
            in an inbound security group rule.</para></li><li><para><code>ip-permission.group-name</code> - The name of a security group that has been
            referenced in an inbound security group rule.</para></li><li><para><code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security
            group rule.</para></li><li><para><code>ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service from
            which a security group rule allows inbound access.</para></li><li><para><code>ip-permission.protocol</code> - The IP protocol for an inbound security group
            rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</para></li><li><para><code>ip-permission.to-port</code> - For an inbound rule, the end of port range for
            the TCP and UDP protocols, or an ICMP code.</para></li><li><para><code>ip-permission.user-id</code> - The ID of an AWS account that has been referenced
            in an inbound security group rule.</para></li><li><para><code>owner-id</code> - The AWS account ID of the owner of the security group.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC specified when the security group was created.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The IDs of the security groups. Required for security groups in a nondefault VPC.</para><para>Default: Describes all your security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>[EC2-Classic and default VPC only] The names of the security groups. You can specify
            either the security group name or the security group ID. For security groups in a
            nondefault VPC, use the <code>group-name</code> filter to describe security groups
            by name.</para><para>Default: Describes all your security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another request with the returned <code>NextToken</code> value. This
            value can be between 5 and 1000. If this parameter is not specified, then all results
            are returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupReferenceCmdlet">
            <summary>
            [VPC only] Describes the VPCs on the other side of a VPC peering connection that are
            referencing the security groups you've specified in this request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupReferenceCmdlet.GroupId">
            <summary>
            <para>
            <para>The IDs of the security groups in your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupReferenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityGroupReferenceSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSecurityGroupReferencesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSecurityGroupReferencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SecurityGroupReferenceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet">
            <summary>
            Describes the specified EBS snapshots available to you or all of the EBS snapshots
            available to you.
            
             
            <para>
            The snapshots available to you include public snapshots, private snapshots that you
            own, and private snapshots owned by other AWS accounts for which you have explicit
            create volume permissions.
            </para><para>
            The create volume permissions fall into the following categories:
            </para><ul><li><para><i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para></li><li><para><i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para></li><li><para><i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para></li></ul><para>
            The list of snapshots returned can be filtered by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para><para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para><para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para><para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para><para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para><para>
            To get the state of fast snapshot restores for a snapshot, use <a>DescribeFastSnapshotRestores</a>.
            </para><para>
            For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>description</code> - A description of the snapshot.</para></li><li><para><code>encrypted</code> - Indicates whether the snapshot is encrypted (<code>true</code>
            | <code>false</code>)</para></li><li><para><code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code>
            | <code>self</code> | <code>all</code> | <code>aws-marketplace</code> | <code>microsoft</code>)
            of snapshot owners. Not to be confused with the user-configured AWS account alias,
            which is set from the IAM console.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the snapshot.</para></li><li><para><code>progress</code> - The progress of the snapshot, as a percentage (for example,
            80%).</para></li><li><para><code>snapshot-id</code> - The snapshot ID.</para></li><li><para><code>start-time</code> - The time stamp when the snapshot was initiated.</para></li><li><para><code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code>
            | <code>error</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>volume-id</code> - The ID of the volume the snapshot is for.</para></li><li><para><code>volume-size</code> - The size of the volume, in GiB.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.OwnerId">
            <summary>
            <para>
            <para>Describes the snapshots owned by these owners.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.RestorableByUserId">
            <summary>
            <para>
            <para>The IDs of the AWS accounts that can create volumes from the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The snapshot IDs.</para><para>Default: Describes the snapshots for which you have create volume permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of snapshot results returned by <code>DescribeSnapshots</code>
            in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only
            returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code>
            value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a
            value larger than 1000, only 1000 results are returned. If this parameter is not used,
            then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter
            and the snapshot IDs parameter in the same request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code>
            request where <code>MaxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>NextToken</code> value. This value is <code>null</code> when there
            are no more results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSnapshotsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified snapshot. You can specify only
            one attribute at a time.
            
             
            <para>
            For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The snapshot attribute you would like to view.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotAttributeCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the EBS snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSnapshotAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSnapshotAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotDatafeedSubscriptionCmdlet">
            <summary>
            Describes the data feed for Spot Instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotDatafeedSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotDatafeedSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet">
            <summary>
            Describes the running instances for the specified Spot Fleet.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.SpotFleetRequestId">
            <summary>
            <para>
            <para>The ID of the Spot Fleet request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotFleetInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotFleetInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet">
            <summary>
            Describes your Spot Fleet requests.
            
             
            <para>
            Spot Fleet requests are deleted 48 hours after they are canceled and their instances
            are terminated.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.SpotFleetRequestId">
            <summary>
            <para>
            <para>The IDs of the Spot Fleet requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotFleetRequestConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotFleetRequestsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotFleetRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet">
            <summary>
            Describes the events for the specified Spot Fleet request during the specified time.
            
             
            <para>
            Spot Fleet events are delayed by up to 30 seconds before they can be described. This
            ensures that you can query by the last evaluated time and not miss a recorded event.
            Spot Fleet events are available for 48 hours.
            </para><br/><br/>In the AWS.Tools.EC2 module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.EventType">
            <summary>
            <para>
            <para>The type of events to describe. By default, all events are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.EC2 module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.SpotFleetRequestId">
            <summary>
            <para>
            <para>The ID of the Spot Fleet request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotFleetRequestHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet">
            <summary>
            Describes the specified Spot Instance requests.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot Instance
            by examining the response. If the status of the Spot Instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances">DescribeInstances</a>
            with a filter to look for instances where the instance lifecycle is <code>spot</code>.
            </para><para>
            We recommend that you set <code>MaxResults</code> to a value between 5 and 1000 to
            limit the number of results returned. This paginates the output, which makes the list
            more manageable and returns the results faster. If the list of results exceeds your
            <code>MaxResults</code> value, then that number of results is returned along with
            a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSpotInstanceRequests</code>
            request to retrieve the remaining results.
            </para><para>
            Spot Instance requests are deleted four hours after they are canceled and their instances
            are terminated.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>availability-zone-group</code> - The Availability Zone group.</para></li><li><para><code>create-time</code> - The time stamp when the Spot Instance request was created.</para></li><li><para><code>fault-code</code> - The fault code related to the request.</para></li><li><para><code>fault-message</code> - The fault message related to the request.</para></li><li><para><code>instance-id</code> - The ID of the instance that fulfilled the request.</para></li><li><para><code>launch-group</code> - The Spot Instance launch group.</para></li><li><para><code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether
            the EBS volume is deleted on instance termination.</para></li><li><para><code>launch.block-device-mapping.device-name</code> - The device name for the volume
            in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</para></li><li><para><code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot for
            the EBS volume.</para></li><li><para><code>launch.block-device-mapping.volume-size</code> - The size of the EBS volume,
            in GiB.</para></li><li><para><code>launch.block-device-mapping.volume-type</code> - The type of EBS volume: <code>gp2</code>
            for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code>
            for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code>
            for Magnetic.</para></li><li><para><code>launch.group-id</code> - The ID of the security group for the instance.</para></li><li><para><code>launch.group-name</code> - The name of the security group for the instance.</para></li><li><para><code>launch.image-id</code> - The ID of the AMI.</para></li><li><para><code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</para></li><li><para><code>launch.kernel-id</code> - The kernel ID.</para></li><li><para><code>launch.key-name</code> - The name of the key pair the instance launched with.</para></li><li><para><code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for
            the Spot Instance.</para></li><li><para><code>launch.ramdisk-id</code> - The RAM disk ID.</para></li><li><para><code>launched-availability-zone</code> - The Availability Zone in which the request
            is launched.</para></li><li><para><code>network-interface.addresses.primary</code> - Indicates whether the IP address
            is the primary private IP address.</para></li><li><para><code>network-interface.delete-on-termination</code> - Indicates whether the network
            interface is deleted when the instance is terminated.</para></li><li><para><code>network-interface.description</code> - A description of the network interface.</para></li><li><para><code>network-interface.device-index</code> - The index of the device for the network
            interface attachment on the instance.</para></li><li><para><code>network-interface.group-id</code> - The ID of the security group associated
            with the network interface.</para></li><li><para><code>network-interface.network-interface-id</code> - The ID of the network interface.</para></li><li><para><code>network-interface.private-ip-address</code> - The primary private IP address
            of the network interface.</para></li><li><para><code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</para></li><li><para><code>product-description</code> - The product description associated with the instance
            (<code>Linux/UNIX</code> | <code>Windows</code>).</para></li><li><para><code>spot-instance-request-id</code> - The Spot Instance request ID.</para></li><li><para><code>spot-price</code> - The maximum hourly price for any Spot Instance launched
            to fulfill the request.</para></li><li><para><code>state</code> - The state of the Spot Instance request (<code>open</code> |
            <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>).
            Spot request status information can help you track your Amazon EC2 Spot Instance requests.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot
            Request Status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para></li><li><para><code>status-code</code> - The short code describing the most recent evaluation of
            your Spot Instance request.</para></li><li><para><code>status-message</code> - The message explaining the status of the Spot Instance
            request.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).</para></li><li><para><code>valid-from</code> - The start date of the request.</para></li><li><para><code>valid-until</code> - The end date of the request.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.SpotInstanceRequestId">
            <summary>
            <para>
            <para>One or more Spot Instance request IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            5 and 1000. To retrieve the remaining results, make another call with the returned
            <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next set of results. This value is <code>null</code> when
            there are no more results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotInstanceRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotInstanceRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotInstanceRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotInstanceRequestCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet">
            <summary>
            Describes the Spot price history. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>Filters the results by the specified Availability Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The date and time, up to the current date, from which to stop retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone for which prices should be
            returned.</para></li><li><para><code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</para></li><li><para><code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code>
            | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code>
            | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</para></li><li><para><code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards;
            greater than or less than comparison is not supported).</para></li><li><para><code>timestamp</code> - The time stamp of the Spot price history, in UTC format
            (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You
            can use wildcards (* and ?). Greater than or less than comparison is not supported.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.InstanceType">
            <summary>
            <para>
            <para>Filters the results by the specified instance types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.ProductDescription">
            <summary>
            <para>
            <para>Filters the results by the specified basic product descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The date and time, up to the past 90 days, from which to start retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The date and time, up to the current date, from which to stop retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The date and time, up to the past 90 days, from which to start retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotPriceHistory'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSpotPriceHistoryResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSpotPriceHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SpotPriceHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet">
            <summary>
            [VPC only] Describes the stale security group rules for security groups in a specified
            VPC. Rules are stale when they reference a deleted security group in a peer VPC, or
            a security group in a peer VPC for which the VPC peering connection has been deleted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a prior
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StaleSecurityGroupSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2StaleSecurityGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>availability-zone</code> - The Availability Zone for the subnet. You can also
            use <code>availabilityZone</code> as the filter name.</para></li><li><para><code>availability-zone-id</code> - The ID of the Availability Zone for the subnet.
            You can also use <code>availabilityZoneId</code> as the filter name.</para></li><li><para><code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet
            that are available.</para></li><li><para><code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify
            must exactly match the subnet's CIDR block for information to be returned for the
            subnet. You can also use <code>cidr</code> or <code>cidrBlock</code> as the filter
            names.</para></li><li><para><code>default-for-az</code> - Indicates whether this is the default subnet for the
            Availability Zone. You can also use <code>defaultForAz</code> as the filter name.</para></li><li><para><code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated
            with the subnet.</para></li><li><para><code>ipv6-cidr-block-association.association-id</code> - An association ID for an
            IPv6 CIDR block associated with the subnet.</para></li><li><para><code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block
            associated with the subnet.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the subnet.</para></li><li><para><code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</para></li><li><para><code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</para></li><li><para><code>subnet-id</code> - The ID of the subnet.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC for the subnet.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.SubnetId">
            <summary>
            <para>
            <para>One or more subnet IDs.</para><para>Default: Describes all your subnets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Subnets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeSubnetsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeSubnetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2SubnetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet">
            <summary>
            Describes the specified tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>key</code> - The tag key.</para></li><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dedicated-host</code>
            | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> | <code>fpga-image</code>
            | <code>host-reservation</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code>
            | <code>key-pair</code> | <code>launch-template</code> | <code>natgateway</code> |
            <code>network-acl</code> | <code>network-interface</code> | <code>placement-group</code>
            | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code>
            | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code>
            | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code>
            | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of the tag. For example,
            specify "tag:Owner" for the filter name and "TeamA" for the filter value to find resources
            with the tag "Owner=TeamA".</para></li><li><para><code>value</code> - The tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. This value can be between
            5 and 1000. To retrieve the remaining results, make another call with the returned
            <code>NextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet">
            <summary>
            Describes one or more launch templates.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>create-time</code> - The time the launch template was created.</para></li><li><para><code>launch-template-name</code> - The name of the launch template.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>One or more launch template IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>One or more launch template names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 1 and 200.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLaunchTemplatesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLaunchTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet">
            <summary>
            Describes one or more versions of a specified launch template. You can describe all
            versions, individual versions, or a range of versions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>create-time</code> - The time the launch template version was created.</para></li><li><para><code>ebs-optimized</code> - A boolean that indicates whether the instance is optimized
            for Amazon EBS I/O.</para></li><li><para><code>iam-instance-profile</code> - The ARN of the IAM instance profile.</para></li><li><para><code>image-id</code> - The ID of the AMI.</para></li><li><para><code>instance-type</code> - The instance type.</para></li><li><para><code>is-default-version</code> - A boolean that indicates whether the launch template
            version is the default version.</para></li><li><para><code>kernel-id</code> - The kernel ID.</para></li><li><para><code>ram-disk-id</code> - The RAM disk ID.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. You must specify either the launch template ID or launch
            template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. You must specify either the launch template ID or
            launch template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.MaxVersion">
            <summary>
            <para>
            <para>The version number up to which to describe launch template versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.MinVersion">
            <summary>
            <para>
            <para>The version number after which to describe launch template versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.Version">
            <summary>
            <para>
            <para>One or more versions of the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 1 and 200.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplateVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeLaunchTemplateVersionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeLaunchTemplateVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TemplateVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet">
            <summary>
            Describes one or more Traffic Mirror filters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>description</code>: The Traffic Mirror filter description.</para></li><li><para><code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTrafficMirrorFiltersResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTrafficMirrorFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorFilterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet">
            <summary>
            Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions
            are described. Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>description</code>: The Traffic Mirror session description.</para></li><li><para><code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</para></li><li><para><code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</para></li><li><para><code>packet-length</code>: The assigned number of packets to mirror. </para></li><li><para><code>session-number</code>: The assigned session number. </para></li><li><para><code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</para></li><li><para><code>traffic-mirror-session-id</code>: The ID of the Traffic Mirror session.</para></li><li><para><code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</para></li><li><para><code>virtual-network-id</code>: The virtual network ID of the Traffic Mirror session.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.TrafficMirrorSessionId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTrafficMirrorSessionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTrafficMirrorSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorSessionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet">
            <summary>
            Information about one or more Traffic Mirror targets.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>description</code>: The Traffic Mirror target description.</para></li><li><para><code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</para></li><li><para><code>network-load-balancer-arn</code>: The Amazon Resource Name (ARN) of the Network
            Load Balancer that is associated with the session.</para></li><li><para><code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</para></li><li><para><code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.TrafficMirrorTargetId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror targets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTrafficMirrorTargetsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTrafficMirrorTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TrafficMirrorTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet">
            <summary>
            Describes one or more transit gateways. By default, all transit gateways are described.
            Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>options.propagation-default-route-table-id</code> - The ID of the default propagation
            route table.</para></li><li><para><code>options.amazon-side-asn</code> - The private ASN for the Amazon side of a BGP
            session.</para></li><li><para><code>options.association-default-route-table-id</code> - The ID of the default association
            route table.</para></li><li><para><code>options.auto-accept-shared-attachments</code> - Indicates whether there is
            automatic acceptance of attachment requests (<code>enable</code> | <code>disable</code>).</para></li><li><para><code>options.default-route-table-association</code> - Indicates whether resource
            attachments are automatically associated with the default association route table
            (<code>enable</code> | <code>disable</code>).</para></li><li><para><code>options.default-route-table-propagation</code> - Indicates whether resource
            attachments automatically propagate routes to the default propagation route table
            (<code>enable</code> | <code>disable</code>).</para></li><li><para><code>options.dns-support</code> - Indicates whether DNS support is enabled (<code>enable</code>
            | <code>disable</code>).</para></li><li><para><code>options.vpn-ecmp-support</code> - Indicates whether Equal Cost Multipath Protocol
            support is enabled (<code>enable</code> | <code>disable</code>).</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the transit gateway.</para></li><li><para><code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code>
            | <code>deleting</code> | <code>failed</code> | <code>modifying</code> | <code>pendingAcceptance</code>
            | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The IDs of the transit gateways.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet">
            <summary>
            Describes one or more attachments between resources and transit gateways. By default,
            all attachments are described. Alternatively, you can filter the results by attachment
            ID, attachment state, resource ID, or resource owner.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>association.state</code> - The state of the association (<code>associating</code>
            | <code>associated</code> | <code>disassociating</code>).</para></li><li><para><code>association.transit-gateway-route-table-id</code> - The ID of the route table
            for the transit gateway.</para></li><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-owner-id</code> - The ID of the AWS account that owns the resource.</para></li><li><para><code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</para></li><li><para><code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code>
            | <code>deleting</code> | <code>failed</code> | <code>modifying</code> | <code>pendingAcceptance</code>
            | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-attachment-id</code> - The ID of the attachment.</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li><li><para><code>transit-gateway-owner-id</code> - The ID of the AWS account that owns the transit
            gateway.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The IDs of the attachments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayAttachments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewayAttachmentsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewayAttachmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet">
            <summary>
            Lists the route tables to which the specified resource attachment propagates routes.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>transit-gateway-route-table-id</code> - The ID of the transit gateway route
            table.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayAttachmentPropagations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetTransitGatewayAttachmentPropagationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayAttachmentPropagationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet">
            <summary>
            Describes one or more transit gateway multicast domains.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>state</code> - The state of the transit gateway multicast domain. Valid values
            are <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>.</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li><li><para><code>transit-gateway-multicast-domain-id</code> - The ID of the transit gateway
            multicast domain.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayMulticastDomains'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewayMulticastDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet">
            <summary>
            Gets information about the associations for the transit gateway multicast domain.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-type</code> - The type of resource. The valid value is: <code>vpc</code>.</para></li><li><para><code>state</code> - The state of the subnet association. Valid values are <code>associated</code>
            | <code>associating</code> | <code>disassociated</code> | <code>disassociating</code>.</para></li><li><para><code>subnet-id</code> - The ID of the subnet.</para></li><li><para><code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MulticastDomainAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetTransitGatewayMulticastDomainAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayMulticastDomainAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet">
            <summary>
            Describes your transit gateway peering attachments.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>transit-gateway-attachment-id</code> - The ID of the transit gateway attachment.</para></li><li><para><code>local-owner-id</code> - The ID of your AWS account.</para></li><li><para><code>remote-owner-id</code> - The ID of the AWS account in the remote Region that
            owns the transit gateway.</para></li><li><para><code>state</code> - The state of the peering attachment (<code>available</code>
            | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>modifying</code>
            | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code>
            | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>One or more IDs of the transit gateway peering attachments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayPeeringAttachments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewayPeeringAttachmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayPeeringAttachmentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet">
            <summary>
            Describes one or more transit gateway route tables. By default, all transit gateway
            route tables are described. Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>default-association-route-table</code> - Indicates whether this is the default
            association route table for the transit gateway (<code>true</code> | <code>false</code>).</para></li><li><para><code>default-propagation-route-table</code> - Indicates whether this is the default
            propagation route table for the transit gateway (<code>true</code> | <code>false</code>).</para></li><li><para><code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code>
            | <code>deleting</code> | <code>failed</code> | <code>modifying</code> | <code>pendingAcceptance</code>
            | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li><li><para><code>transit-gateway-route-table-id</code> - The ID of the transit gateway route
            table.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The IDs of the transit gateway route tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayRouteTables'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewayRouteTablesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewayRouteTablesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet">
            <summary>
            Gets information about the associations for the specified transit gateway route table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</para></li><li><para><code>transit-gateway-attachment-id</code> - The ID of the attachment.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Associations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetTransitGatewayRouteTableAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTableAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet">
            <summary>
            Gets information about the route table propagations for the specified transit gateway
            route table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</para></li><li><para><code>transit-gateway-attachment-id</code> - The ID of the attachment.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayRouteTablePropagations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.GetTransitGatewayRouteTablePropagationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayRouteTablePropagationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Describes one or more VPC attachments. By default, all VPC attachments are described.
            Alternatively, you can filter the results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code>
            | <code>deleting</code> | <code>failed</code> | <code>modifying</code> | <code>pendingAcceptance</code>
            | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</para></li><li><para><code>transit-gateway-attachment-id</code> - The ID of the attachment.</para></li><li><para><code>transit-gateway-id</code> - The ID of the transit gateway.</para></li><li><para><code>vpc-id</code> - The ID of the VPC.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The IDs of the attachments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeTransitGatewayVpcAttachmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2TransitGatewayVpcAttachmentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet">
            <summary>
            Describes the specified EBS volumes or all of your EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para><para>
            For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>attachment.attach-time</code> - The time stamp when the attachment initiated.</para></li><li><para><code>attachment.delete-on-termination</code> - Whether the volume is deleted on
            instance termination.</para></li><li><para><code>attachment.device</code> - The device name specified in the block device mapping
            (for example, <code>/dev/sda1</code>).</para></li><li><para><code>attachment.instance-id</code> - The ID of the instance the volume is attached
            to.</para></li><li><para><code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code>
            | <code>detaching</code>).</para></li><li><para><code>availability-zone</code> - The Availability Zone in which the volume was created.</para></li><li><para><code>create-time</code> - The time stamp when the volume was created.</para></li><li><para><code>encrypted</code> - Indicates whether the volume is encrypted (<code>true</code>
            | <code>false</code>)</para></li><li><para><code>multi-attach-enabled</code> - Indicates whether the volume is enabled for Multi-Attach
            (<code>true</code> | <code>false</code>)</para></li><li><para><code>fast-restored</code> - Indicates whether the volume was created from a snapshot
            that is enabled for fast snapshot restore (<code>true</code> | <code>false</code>).</para></li><li><para><code>size</code> - The size of the volume, in GiB.</para></li><li><para><code>snapshot-id</code> - The snapshot from which the volume was created.</para></li><li><para><code>status</code> - The status of the volume (<code>creating</code> | <code>available</code>
            | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>volume-id</code> - The volume ID.</para></li><li><para><code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code>
            for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code>
            for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code>
            for Magnetic volumes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The volume IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated
            output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code>
            results in a single page along with a <code>NextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code>
            request with the returned <code>NextToken</code> value. This value can be between
            5 and 500; if <code>MaxResults</code> is given a value larger than 500, only 500 results
            are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns
            all results. You cannot specify this parameter and the volume IDs parameter in the
            same request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code>
            request where <code>MaxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>NextToken</code> value. This value is <code>null</code> when there
            are no more results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Volumes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVolumesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVolumesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified volume. You can specify only one
            attribute at a time.
            
             
            <para>
            For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute of the volume. This parameter is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeAttributeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVolumeAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVolumeAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet">
            <summary>
            Reports the current modification status of EBS volumes.
            
             
            <para>
            Current-generation EBS volumes support modification of attributes including type,
            size, and (for <code>io1</code> volumes) IOPS provisioning while either attached to
            or detached from an instance. Following an action from the API or the console to modify
            a volume, the status of the modification may be <code>modifying</code>, <code>optimizing</code>,
            <code>completed</code>, or <code>failed</code>. If a volume has never been modified,
            then certain elements of the returned <code>VolumeModification</code> objects are
            null. 
            </para><para>
             You can also use CloudWatch Events to check the status of a modification to an EBS
            volume. For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon
            CloudWatch Events User Guide</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring
            Volume Modifications"</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.Filter">
            <summary>
            <para>
            <para>The filters. Supported filters: <code>volume-id</code> | <code>modification-state</code>
            | <code>target-size</code> | <code>target-iops</code> | <code>target-volume-type</code>
            | <code>original-size</code> | <code>original-iops</code> | <code>original-volume-type</code>
            | <code>start-time</code> | <code>originalMultiAttachEnabled</code> | <code>targetMultiAttachEnabled</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.VolumeId">
            <summary>
            <para>
            <para>The IDs of the volumes for which in-progress modifications will be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results (up to a limit of 500) to be returned in a paginated
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned by a previous paginated request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VolumesModifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVolumesModificationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVolumesModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeModificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para><para><i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information about volume status, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para><i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para><para><i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para><para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.Filter">
            <summary>
            <para>
            <para>The filters.</para><ul><li><para><code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</para></li><li><para><code>action.description</code> - A description of the action.</para></li><li><para><code>action.event-id</code> - The event ID associated with the action.</para></li><li><para><code>availability-zone</code> - The Availability Zone of the instance.</para></li><li><para><code>event.description</code> - A description of the event.</para></li><li><para><code>event.event-id</code> - The event ID.</para></li><li><para><code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code>
            | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code>
            | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</para></li><li><para><code>event.not-after</code> - The latest end time for the event.</para></li><li><para><code>event.not-before</code> - The earliest start time for the event.</para></li><li><para><code>volume-status.details-name</code> - The cause for <code>volume-status.status</code>
            (<code>io-enabled</code> | <code>io-performance</code>).</para></li><li><para><code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code>
            (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
            <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</para></li><li><para><code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code>
            | <code>warning</code> | <code>insufficient-data</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.VolumeId">
            <summary>
            <para>
            <para>The IDs of the volumes.</para><para>Default: Describes all your volumes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of volume results returned by <code>DescribeVolumeStatus</code>
            in paginated output. When this parameter is used, the request only returns <code>MaxResults</code>
            results in a single page along with a <code>NextToken</code> response element. The
            remaining results of the initial request can be seen by sending another request with
            the returned <code>NextToken</code> value. This value can be between 5 and 1000; if
            <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned.
            If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all
            results. You cannot specify this parameter and the volume IDs parameter in the same
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code>
            request. When the results of the request exceed <code>MaxResults</code>, this value
            can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VolumeStatuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVolumeStatusResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVolumeStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VolumeStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet">
            <summary>
            Describes one or more of your VPCs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify
            must exactly match the VPC's CIDR block for information to be returned for the VPC.
            Must contain the slash followed by one or two digits (for example, <code>/28</code>).</para></li><li><para><code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with
            the VPC.</para></li><li><para><code>cidr-block-association.association-id</code> - The association ID for an IPv4
            CIDR block associated with the VPC.</para></li><li><para><code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated
            with the VPC.</para></li><li><para><code>dhcp-options-id</code> - The ID of a set of DHCP options.</para></li><li><para><code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated
            with the VPC.</para></li><li><para><code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool
            from which the IPv6 CIDR block is allocated.</para></li><li><para><code>ipv6-cidr-block-association.association-id</code> - The association ID for
            an IPv6 CIDR block associated with the VPC.</para></li><li><para><code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block
            associated with the VPC.</para></li><li><para><code>isDefault</code> - Indicates whether the VPC is the default VPC.</para></li><li><para><code>owner-id</code> - The ID of the AWS account that owns the VPC.</para></li><li><para><code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-id</code> - The ID of the VPC.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.VpcId">
            <summary>
            <para>
            <para>One or more VPC IDs.</para><para>Default: Describes all your VPCs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vpcs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcAttributeCmdlet">
            <summary>
            Describes the specified attribute of the specified VPC. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The VPC attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcAttributeCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkCmdlet">
            <summary>
            Describes the ClassicLink status of one or more VPCs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink
            (<code>true</code> | <code>false</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkCmdlet.VpcId">
            <summary>
            <para>
            <para>One or more VPCs for which you want to describe the ClassicLink status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vpcs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcClassicLinkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcClassicLinkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet">
            <summary>
            Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon Elastic Compute Cloud User Guide</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.VpcId">
            <summary>
            <para>
            <para>One or more VPC IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vpcs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcClassicLinkDnsSupportCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet">
            <summary>
            Describes one or more of your VPC endpoints.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>service-name</code> - The name of the service.</para></li><li><para><code>vpc-id</code> - The ID of the VPC in which the endpoint resides.</para></li><li><para><code>vpc-endpoint-id</code> - The ID of the endpoint.</para></li><li><para><code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code>
            | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>
            | <code>rejected</code> | <code>failed</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>One or more endpoint IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.</para><para>Constraint: If the value is greater than 1,000, we return only 1,000 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a prior
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcEndpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet">
            <summary>
            Describes available services to which you can create a VPC endpoint.<br/><br/>In the AWS.Tools.EC2 module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>service-name</code> - The name of the service.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.ServiceName">
            <summary>
            <para>
            <para>One or more service names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.</para><para>Constraint: If the value is greater than 1,000, we return only 1,000 items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a prior
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.EC2 module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcEndpointServicesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcEndpointServicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcEndpointServiceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet">
            <summary>
            Describes one or more of your VPC peering connections.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the accepter VPC.</para></li><li><para><code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the
            accepter VPC.</para></li><li><para><code>accepter-vpc-info.vpc-id</code> - The ID of the accepter VPC.</para></li><li><para><code>expiration-time</code> - The expiration date and time for the VPC peering connection.</para></li><li><para><code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the requester's
            VPC.</para></li><li><para><code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the
            requester VPC.</para></li><li><para><code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</para></li><li><para><code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code>
            | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code>
            | <code>deleting</code> | <code>deleted</code> | <code>rejected</code>).</para></li><li><para><code>status-message</code> - A message that provides more information about the
            status of the VPC peering connection, if applicable.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>One or more VPC peering connection IDs.</para><para>Default: Describes all your VPC peering connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringConnections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcPeeringConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcPeeringConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpcPeeringConnectionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnConnectionCmdlet">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnConnectionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>customer-gateway-configuration</code> - The configuration information for the
            customer gateway.</para></li><li><para><code>customer-gateway-id</code> - The ID of a customer gateway associated with the
            VPN connection.</para></li><li><para><code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).</para></li><li><para><code>option.static-routes-only</code> - Indicates whether the connection has static
            routes only. Used for devices that do not support Border Gateway Protocol (BGP).</para></li><li><para><code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds
            to the subnet used in a customer data center.</para></li><li><para><code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP
            device.</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>type</code> - The type of VPN connection. Currently the only supported type
            is <code>ipsec.1</code>.</para></li><li><para><code>vpn-connection-id</code> - The ID of the VPN connection.</para></li><li><para><code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with
            the VPN connection.</para></li><li><para><code>transit-gateway-id</code> - The ID of a transit gateway associated with the
            VPN connection.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnConnectionCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>One or more VPN connection IDs.</para><para>Default: Describes your VPN connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnConnections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpnConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpnConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnGatewayCmdlet">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnGatewayCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon
            side of the gateway.</para></li><li><para><code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code>
            | <code>detached</code>).</para></li><li><para><code>attachment.vpc-id</code> - The ID of an attached VPC.</para></li><li><para><code>availability-zone</code> - The Availability Zone for the virtual private gateway
            (if applicable).</para></li><li><para><code>state</code> - The state of the virtual private gateway (<code>pending</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</para></li><li><para><code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value as the filter value.
            For example, to find all resources that have a tag with the key <code>Owner</code>
            and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name
            and <code>TeamA</code> for the filter value.</para></li><li><para><code>tag-key</code> - The key of a tag assigned to the resource. Use this filter
            to find all resources assigned a tag with a specific key, regardless of the tag value.</para></li><li><para><code>type</code> - The type of virtual private gateway. Currently the only supported
            type is <code>ipsec.1</code>.</para></li><li><para><code>vpn-gateway-id</code> - The ID of the virtual private gateway.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnGatewayCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>One or more virtual private gateway IDs.</para><para>Default: Describes all your virtual private gateways.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DescribeVpnGatewaysResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DescribeVpnGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GetEC2VpnGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet">
            <summary>
            Adds an ingress authorization rule to a Client VPN endpoint. Ingress authorization
            rules act as firewall rules that grant access to networks. You must configure ingress
            authorization rules to enable clients to access resources in AWS or on-premises networks.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.AccessGroupId">
            <summary>
            <para>
            <para>The ID of the group to grant access to, for example, the Active Directory group or
            identity provider (IdP) group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.AuthorizeAllGroup">
            <summary>
            <para>
            <para>Indicates whether to grant access to all clients. Use <code>true</code> to grant all
            clients who successfully establish a VPN connection access to the network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.Description">
            <summary>
            <para>
            <para>A brief description of the authorization rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.TargetNetworkCidr">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, of the network for which access is being
            authorized.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AuthorizeClientVpnIngressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AuthorizeClientVpnIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2ClientVpnIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet">
            <summary>
            [VPC only] Adds the specified egress rules to a security group for use with a VPC.
            
             
            <para>
            An outbound rule permits instances to send traffic to the specified IPv4 or IPv6 CIDR
            address ranges, or to the instances associated with the specified destination security
            groups.
            </para><para>
            You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols,
            you must also specify the destination port or port range. For the ICMP protocol, you
            must also specify the ICMP type and code. You can use -1 for the type or code to mean
            all types or all codes.
            </para><para>
            Rule changes are propagated to affected instances as quickly as possible. However,
            a small delay might occur.
            </para><para>
            For more information about VPC security group limits, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon
            VPC Limits</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet.IpPermission">
            <summary>
            <para>
            <para>The sets of IP permissions. You can't specify a destination security group and a CIDR
            IP address range in the same set of permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupEgressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet">
            <summary>
            Adds the specified ingress rules to a security group.
            
             
            <para>
            An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6
            CIDR address ranges, or from the instances associated with the specified destination
            security groups.
            </para><para>
            You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must
            also specify the destination port or port range. For ICMP/ICMPv6, you must also specify
            the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.
            </para><para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para><para>
            For more information about VPC security group limits, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon
            VPC Limits</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group. You must specify either the security group ID or the
            security group name in the request. For security groups in a nondefault VPC, you must
            specify the security group ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.GroupName">
            <summary>
            <para>
            <para>[EC2-Classic, default VPC] The name of the security group. You must specify either
            the security group ID or the security group name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.IpPermission">
            <summary>
            <para>
            <para>The sets of IP permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.GrantEC2SecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet">
            <summary>
            Uploads a client certificate revocation list to the specified Client VPN endpoint.
            Uploading a client certificate revocation list overwrites the existing client certificate
            revocation list.
            
             
            <para>
            Uploading a client certificate revocation list resets existing client connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet.CertificateRevocationList">
            <summary>
            <para>
            <para>The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate
            a Client Certificate Revocation List</a> in the <i>AWS Client VPN Administrator Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint to which the client certificate revocation list
            applies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ImportClientVpnClientCertificateRevocationListResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ImportClientVpnClientCertificateRevocationListResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ClientVpnClientCertificateRevocationListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet">
            <summary>
            Import single or multi-volume disk images or EBS snapshots into an Amazon Machine
            Image (AMI). For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing
            a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Architecture">
            <summary>
            <para>
            <para>The architecture of the virtual machine.</para><para>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_Comment">
            <summary>
            <para>
            <para>A user-defined comment about the disk upload.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Description">
            <summary>
            <para>
            <para>A description string for the import image task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.DiskContainer">
            <summary>
            <para>
            <para>Information about the disk containers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Encrypted">
            <summary>
            <para>
            <para>Specifies whether the destination AMI of the imported image should be encrypted. The
            default CMK for EBS is used unless you specify a non-default AWS Key Management Service
            (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Hypervisor">
            <summary>
            <para>
            <para>The target hypervisor platform.</para><para>Valid values: <code>xen</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master
            key (CMK) to use when creating the encrypted AMI. This parameter is only required
            if you want to use a non-default CMK; if this parameter is not specified, the default
            CMK for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code>
            flag must also be set. </para><para>The CMK identifier may be provided in any of the following formats: </para><ul><li><para>Key ID</para></li><li><para>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code>
            namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</para></li><li><para>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the Region of the CMK, the AWS account ID of the CMK owner, the <code>key</code>
            namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</para></li><li><para>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace,
            followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code>
            namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.
            </para></li></ul><para>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call
            may appear to complete even though you provided an invalid identifier. This action
            will eventually report failure. </para><para>The specified CMK must exist in the Region that the AMI is being copied to.</para><para>Amazon EBS does not support asymmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.LicenseSpecification">
            <summary>
            <para>
            <para>The ARNs of the license configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.LicenseType">
            <summary>
            <para>
            <para>The license type to be used for the Amazon Machine Image (AMI) after importing.</para><para>By default, we detect the source-system operating system (OS) and apply the appropriate
            license. Specify <code>AWS</code> to replace the source-system license with an AWS
            license, if appropriate. Specify <code>BYOL</code> to retain the source-system license,
            if appropriate.</para><para>To use <code>BYOL</code>, you must have existing licenses with rights to use these
            licenses in a third party cloud, such as AWS. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a>
            in the VM Import/Export User Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Platform">
            <summary>
            <para>
            <para>The operating system of the virtual machine.</para><para>Valid values: <code>Windows</code> | <code>Linux</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.RoleName">
            <summary>
            <para>
            <para>The name of the role to use when not using the default role, 'vmimport'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_UtcUploadEnd">
            <summary>
            <para>
            <para>The time that the disk upload ends.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_UploadSize">
            <summary>
            <para>
            <para>The size of the uploaded disk image, in GiB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_UtcUploadStart">
            <summary>
            <para>
            <para>The time that the disk upload starts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientToken">
            <summary>
            <para>
            <para>The token to enable idempotency for VM import requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_UploadEnd">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use UploadEndUtc instead. Setting either UploadEnd or
            UploadEndUtc results in both UploadEnd and UploadEndUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. UploadEnd
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The time that the disk upload ends.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.ClientData_UploadStart">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use UploadStartUtc instead. Setting either UploadStart
            or UploadStartUtc results in both UploadStart and UploadStartUtc being assigned, the
            latest assignment to either one of the two property is reflected in the value of both.
            UploadStart is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para><para>The time that the disk upload starts.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ImportImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ImportImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet">
            <summary>
            Imports a disk into an EBS snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_Comment">
            <summary>
            <para>
            <para>A user-defined comment about the disk upload.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.Description">
            <summary>
            <para>
            <para>The description string for the import snapshot task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.DiskContainer_Description">
            <summary>
            <para>
            <para>The description of the disk image being imported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.Encrypted">
            <summary>
            <para>
            <para>Specifies whether the destination snapshot of the imported image should be encrypted.
            The default CMK for EBS is used unless you specify a non-default AWS Key Management
            Service (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.DiskContainer_Format">
            <summary>
            <para>
            <para>The format of the disk image being imported.</para><para>Valid values: <code>VHD</code> | <code>VMDK</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master
            key (CMK) to use when creating the encrypted snapshot. This parameter is only required
            if you want to use a non-default CMK; if this parameter is not specified, the default
            CMK for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code>
            flag must also be set. </para><para>The CMK identifier may be provided in any of the following formats: </para><ul><li><para>Key ID</para></li><li><para>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code>
            namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</para></li><li><para>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the Region of the CMK, the AWS account ID of the CMK owner, the <code>key</code>
            namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</para></li><li><para>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace,
            followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code>
            namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.
            </para></li></ul><para>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call
            may appear to complete even though you provided an invalid identifier. This action
            will eventually report failure. </para><para>The specified CMK must exist in the Region that the snapshot is being copied to.</para><para>Amazon EBS does not support asymmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.RoleName">
            <summary>
            <para>
            <para>The name of the role to use when not using the default role, 'vmimport'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.DiskContainer_S3Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket where the disk image is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.DiskContainer_S3Key">
            <summary>
            <para>
            <para>The file name of the disk image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_UtcUploadEnd">
            <summary>
            <para>
            <para>The time that the disk upload ends.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_UploadSize">
            <summary>
            <para>
            <para>The size of the uploaded disk image, in GiB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_UtcUploadStart">
            <summary>
            <para>
            <para>The time that the disk upload starts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.DiskContainer_Url">
            <summary>
            <para>
            <para>The URL to the Amazon S3-based disk image being imported. It can either be a https
            URL (https://..) or an Amazon S3 URL (s3://..).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientToken">
            <summary>
            <para>
            <para>Token to enable idempotency for VM import requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_UploadEnd">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use UploadEndUtc instead. Setting either UploadEnd or
            UploadEndUtc results in both UploadEnd and UploadEndUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. UploadEnd
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The time that the disk upload ends.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.ClientData_UploadStart">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use UploadStartUtc instead. Setting either UploadStart
            or UploadStartUtc results in both UploadStart and UploadStartUtc being assigned, the
            latest assignment to either one of the two property is reflected in the value of both.
            UploadStart is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para><para>The time that the disk upload starts.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ImportSnapshotResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ImportSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ImportEC2SnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.MoveEC2AddressToVpcCmdlet">
            <summary>
            Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform.
            The Elastic IP address must be allocated to your account for more than 24 hours, and
            it must not be associated with an instance. After the Elastic IP address is moved,
            it is no longer available for use in the EC2-Classic platform, unless you move it
            back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic
            IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic
            platform.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.MoveEC2AddressToVpcCmdlet.PublicIp">
            <summary>
            <para>
            <para>The Elastic IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.MoveEC2AddressToVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.MoveAddressToVpcResponse).
            Specifying the name of a property of type Amazon.EC2.Model.MoveAddressToVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.MoveEC2AddressToVpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.MoveEC2AddressToVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet">
            <summary>
            Allocates an Elastic IP address to your AWS account. After you allocate the Elastic
            IP address you can associate it with an instance or network interface. After you release
            an Elastic IP address, it is released to the IP address pool and can be allocated
            to a different AWS account.
            
             
            <para>
            You can allocate an Elastic IP address from an address pool owned by AWS or from an
            address pool created from a public IPv4 address range that you have brought to AWS
            for use with your AWS resources using bring your own IP addresses (BYOIP). For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring
            Your Own IP Addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            [EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You
            cannot recover an Elastic IP address that you released after it is allocated to another
            AWS account. You cannot recover an Elastic IP address for EC2-Classic. To attempt
            to recover an Elastic IP address that you released, specify it in this operation.
            </para><para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By
            default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5
            Elastic IP addresses for EC2-VPC per Region.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.Address">
            <summary>
            <para>
            <para>[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.CustomerOwnedIpv4Pool">
            <summary>
            <para>
            <para>The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select
            an address from the address pool. Alternatively, specify a specific address from the
            address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.Domain">
            <summary>
            <para>
            <para>Set to <code>vpc</code> to allocate the address for use with instances in a VPC.</para><para>Default: The address is for use with instances in EC2-Classic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.NetworkBorderGroup">
            <summary>
            <para>
            <para>The location from which the IP address is advertised. Use this parameter to limit
            the address to this location.</para><para>A network border group is a unique set of Availability Zones or Local Zones from where
            AWS advertises IP addresses and limits the addresses to the group. IP addresses cannot
            move between network border groups.</para><para>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html">DescribeAvailabilityZones</a>
            to view the network border groups.</para><note><para>You cannot use a network border group with EC2 Classic. If you attempt this operation
            on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error
            Codes</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.PublicIpv4Pool">
            <summary>
            <para>
            <para>The ID of an address pool that you own. Use this parameter to let Amazon EC2 select
            an address from the address pool. To specify a specific address from the address pool,
            use the <code>Address</code> parameter instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AllocateAddressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AllocateAddressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2AddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet">
            <summary>
            Creates a Client VPN endpoint. A Client VPN endpoint is the resource you create and
            configure to enable and manage client VPN sessions. It is the destination endpoint
            at which all client VPN sessions are terminated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.AuthenticationOption">
            <summary>
            <para>
            <para>Information about the authentication method to be used to authenticate clients.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ClientCidrBlock">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, from which to assign client IP addresses.
            The address range cannot overlap with the local CIDR of the VPC in which the associated
            subnet is located, or the routes that you add manually. The address range cannot be
            changed after the Client VPN endpoint has been created. The CIDR block should be /22
            or greater.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_CloudwatchLogGroup">
            <summary>
            <para>
            <para>The name of the CloudWatch Logs log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_CloudwatchLogStream">
            <summary>
            <para>
            <para>The name of the CloudWatch Logs log stream to which the connection data is published.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.Description">
            <summary>
            <para>
            <para>A brief description of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.DnsServer">
            <summary>
            <para>
            <para>Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint
            can have up to two DNS servers. If no DNS server is specified, the DNS address configured
            on the device is used for the DNS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ConnectionLogOptions_Enabled">
            <summary>
            <para>
            <para>Indicates whether connection logging is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>The IDs of one or more security groups to apply to the target network. You must also
            specify the ID of the VPC that contains the security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ServerCertificateArn">
            <summary>
            <para>
            <para>The ARN of the server certificate. For more information, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.SplitTunnel">
            <summary>
            <para>
            <para>Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.</para><para>By default, split-tunnel on a VPN endpoint is disabled.</para><para>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel
            AWS Client VPN Endpoint</a> in the <i>AWS Client VPN Administrator Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the Client VPN endpoint during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.TransportProtocol">
            <summary>
            <para>
            <para>The transport protocol to be used by the VPN session.</para><para>Default value: <code>udp</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC to associate with the Client VPN endpoint. If no security group
            IDs are specified in the request, the default security group for the VPC is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.VpnPort">
            <summary>
            <para>
            <para>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</para><para>Valid Values: <code>443</code> | <code>1194</code></para><para>Default Value: <code>443</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateClientVpnEndpointResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateClientVpnEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerCertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerCertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet">
            <summary>
            Adds a route to a network to a Client VPN endpoint. Each Client VPN endpoint has a
            route table that describes the available destination network routes. Each route in
            the route table specifies the path for traﬃc to speciﬁc resources or networks.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint to which to add the route.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.Description">
            <summary>
            <para>
            <para>A brief description of the route.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, of the route destination. For example:</para><ul><li><para>To add a route for Internet access, enter <code>0.0.0.0/0</code></para></li><li><para>To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range</para></li><li><para>To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's
            IPv4 CIDR range</para></li></ul><para>Route address ranges cannot overlap with the CIDR range specified for client allocation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.TargetVpcSubnetId">
            <summary>
            <para>
            <para>The ID of the subnet through which you want to route traffic. The specified subnet
            must be an existing target network of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateClientVpnRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateClientVpnRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ClientVpnRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet">
            <summary>
            Provides information to AWS about your VPN customer gateway device. The customer gateway
            is the appliance at your end of the VPN connection. (The device on the AWS side of
            the VPN connection is the virtual private gateway.) You must provide the Internet-routable
            IP address of the customer gateway's external interface. The IP address must be static
            and can be behind a device performing network address translation (NAT).
            
             
            <para>
            For devices that use Border Gateway Protocol (BGP), you can also provide the device's
            BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network.
            If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534
            range).
            </para><note><para>
            Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception
            of 7224, which is reserved in the <code>us-east-1</code> Region, and 9059, which is
            reserved in the <code>eu-west-1</code> Region.
            </para></note><para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para><important><para>
            To create more than one customer gateway with the same VPN type, IP address, and BGP
            ASN, specify a unique device name for each customer gateway. Identical requests return
            information about the existing customer gateway and do not create new customer gateways.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.BgpAsn">
            <summary>
            <para>
            <para>For devices that support BGP, the customer gateway's BGP ASN.</para><para>Default: 65000</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.CertificateArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the customer gateway certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.DeviceName">
            <summary>
            <para>
            <para>A name for the customer gateway device.</para><para>Length Constraints: Up to 255 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.PublicIp">
            <summary>
            <para>
            <para>The Internet-routable IP address for the customer gateway's outside interface. The
            address must be static.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.Type">
            <summary>
            <para>
            <para>The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomerGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateCustomerGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateCustomerGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Type parameter.
            The -PassThru parameter is deprecated, use -Select '^Type' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2CustomerGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultSubnetCmdlet">
            <summary>
            Creates a default subnet with a size <code>/20</code> IPv4 CIDR block in the specified
            Availability Zone in your default VPC. You can have only one default subnet per Availability
            Zone. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#create-default-subnet">Creating
            a Default Subnet</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultSubnetCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create the default subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultSubnetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Subnet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateDefaultSubnetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateDefaultSubnetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultSubnetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AvailabilityZone parameter.
            The -PassThru parameter is deprecated, use -Select '^AvailabilityZone' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultSubnetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultVpcCmdlet">
            <summary>
            Creates a default VPC with a size <code>/16</code> IPv4 CIDR block and a default subnet
            in each Availability Zone. For more information about the components of a default
            VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html">Default
            VPC and Default Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            You cannot specify the components of the default VPC yourself.
            
             
            <para>
            If you deleted your previous default VPC, you can create a default VPC. You cannot
            have more than one default VPC per Region.
            </para><para>
            If your account supports EC2-Classic, you cannot use this action to create a default
            VPC in a Region that supports EC2-Classic. If you want a default VPC in a Region that
            supports EC2-Classic, see "I really want a default VPC for my existing EC2 account.
            Is that possible?" in the <a href="http://aws.amazon.com/vpc/faqs/#Default_VPCs">Default
            VPCs FAQ</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vpc'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateDefaultVpcResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateDefaultVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DefaultVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2DhcpOptionCmdlet">
            <summary>
            Creates a set of DHCP options for your VPC. After creating the set, you must associate
            it with the VPC, causing all existing and new instances that you launch in the VPC
            to use this set of DHCP options. The following are the individual DHCP options you
            can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            
             <ul><li><para><code>domain-name-servers</code> - The IP addresses of up to four domain name servers,
            or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If
            specifying more than one domain name server, specify the IP addresses in a single
            parameter, separated by commas. To have your instance receive a custom DNS hostname
            as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code>
            to a custom DNS server.
            </para></li><li><para><code>domain-name</code> - If you're using AmazonProvidedDNS in <code>us-east-1</code>,
            specify <code>ec2.internal</code>. If you're using AmazonProvidedDNS in another Region,
            specify <code>region.compute.internal</code> (for example, <code>ap-northeast-1.compute.internal</code>).
            Otherwise, specify a domain name (for example, <code>MyCompany.com</code>). This value
            is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux operating
            systems accept multiple domain names separated by spaces. However, Windows and other
            Linux operating systems treat the value as a single domain, which results in unexpected
            behavior. If your DHCP options set is associated with a VPC that has instances with
            multiple operating systems, specify only one domain name.
            </para></li><li><para><code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP)
            servers.
            </para></li><li><para><code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.
            </para></li><li><para><code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend
            that you specify 2 (broadcast and multicast are not currently supported). For more
            information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            </para></li></ul><para>
            Your VPC automatically starts out with a set of DHCP options that includes only a
            DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and
            if your VPC has an internet gateway, make sure to set the <code>domain-name-servers</code>
            option either to <code>AmazonProvidedDNS</code> or to a domain name server of your
            choice. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DhcpOptionCmdlet.DhcpConfiguration">
            <summary>
            <para>
            <para>A DHCP configuration option.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DhcpOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DhcpOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateDhcpOptionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateDhcpOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DhcpOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DhcpConfiguration parameter.
            The -PassThru parameter is deprecated, use -Select '^DhcpConfiguration' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2DhcpOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet">
            <summary>
            [IPv6 only] Creates an egress-only internet gateway for your VPC. An egress-only internet
            gateway is used to enable outbound communication over IPv6 from instances in your
            VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6
            connection with your instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC for which to create the egress-only internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateEgressOnlyInternetGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateEgressOnlyInternetGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2EgressOnlyInternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet">
            <summary>
            Launches an EC2 Fleet.
            
             
            <para>
            You can create a single EC2 Fleet that includes multiple launch specifications that
            vary by instance type, AMI, Availability Zone, or subnet.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html">Launching
            an EC2 Fleet</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.OnDemandOptions_AllocationStrategy">
            <summary>
            <para>
            <para>The order of the launch template overrides to use in fulfilling On-Demand capacity.
            If you specify <code>lowest-price</code>, EC2 Fleet uses price to determine the order,
            launching the lowest price first. If you specify <code>prioritized</code>, EC2 Fleet
            uses the priority that you assigned to each launch template override, launching the
            highest priority first. If you do not specify a value, EC2 Fleet defaults to <code>lowest-price</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_AllocationStrategy">
            <summary>
            <para>
            <para>Indicates how to allocate the target Spot Instance capacity across the Spot Instance
            pools specified by the EC2 Fleet.</para><para>If the allocation strategy is <code>lowest-price</code>, EC2 Fleet launches instances
            from the Spot Instance pools with the lowest price. This is the default allocation
            strategy.</para><para>If the allocation strategy is <code>diversified</code>, EC2 Fleet launches instances
            from all of the Spot Instance pools that you specify.</para><para>If the allocation strategy is <code>capacity-optimized</code>, EC2 Fleet launches
            instances from Spot Instance pools with optimal capacity for the number of instances
            that are launching.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TargetCapacitySpecification_DefaultTargetCapacityType">
            <summary>
            <para>
            <para>The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or
            <code>On-Demand</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.ExcessCapacityTerminationPolicy">
            <summary>
            <para>
            <para>Indicates whether running instances should be terminated if the total target capacity
            of the EC2 Fleet is decreased below the current size of the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_InstanceInterruptionBehavior">
            <summary>
            <para>
            <para>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_InstancePoolsToUseCount">
            <summary>
            <para>
            <para>The number of Spot pools across which to allocate your target Spot capacity. Valid
            only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. EC2
            Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity
            across the number of Spot pools that you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.LaunchTemplateConfig">
            <summary>
            <para>
            <para>The configuration for the EC2 Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.OnDemandOptions_MaxTotalPrice">
            <summary>
            <para>
            <para>The maximum amount per hour for On-Demand Instances that you're willing to pay.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_MaxTotalPrice">
            <summary>
            <para>
            <para>The maximum amount per hour for Spot Instances that you're willing to pay.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.OnDemandOptions_MinTargetCapacity">
            <summary>
            <para>
            <para>The minimum target capacity for On-Demand Instances in the fleet. If the minimum target
            capacity is not reached, the fleet launches no instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_MinTargetCapacity">
            <summary>
            <para>
            <para>The minimum target capacity for Spot Instances in the fleet. If the minimum target
            capacity is not reached, the fleet launches no instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TargetCapacitySpecification_OnDemandTargetCapacity">
            <summary>
            <para>
            <para>The number of On-Demand units to request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.ReplaceUnhealthyInstance">
            <summary>
            <para>
            <para>Indicates whether EC2 Fleet should replace unhealthy instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.OnDemandOptions_SingleAvailabilityZone">
            <summary>
            <para>
            <para>Indicates that the fleet launches all On-Demand Instances into a single Availability
            Zone. Supported only for fleets of type <code>instant</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_SingleAvailabilityZone">
            <summary>
            <para>
            <para>Indicates that the fleet launches all Spot Instances into a single Availability Zone.
            Supported only for fleets of type <code>instant</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.OnDemandOptions_SingleInstanceType">
            <summary>
            <para>
            <para>Indicates that the fleet uses a single instance type to launch all On-Demand Instances
            in the fleet. Supported only for fleets of type <code>instant</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.SpotOptions_SingleInstanceType">
            <summary>
            <para>
            <para>Indicates that the fleet uses a single instance type to launch all Spot Instances
            in the fleet. Supported only for fleets of type <code>instant</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TargetCapacitySpecification_SpotTargetCapacity">
            <summary>
            <para>
            <para>The number of Spot units to request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The key-value pair for tagging the EC2 Fleet request on creation. The value for <code>ResourceType</code>
            must be <code>fleet</code>, otherwise the fleet request fails. To tag instances at
            launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch
            template</a>. For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging
            Your Resources</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TerminateInstancesWithExpiration">
            <summary>
            <para>
            <para>Indicates whether running instances should be terminated when the EC2 Fleet expires.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.TargetCapacitySpecification_TotalTargetCapacity">
            <summary>
            <para>
            <para>The number of units to request, filled using <code>DefaultTargetCapacityType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.Type">
            <summary>
            <para>
            <para>The type of the request. By default, the EC2 Fleet places an asynchronous request
            for your desired capacity, and maintains it by replenishing interrupted Spot Instances
            (<code>maintain</code>). A value of <code>instant</code> places a synchronous one-time
            request, and returns errors for any instances that could not be launched. A value
            of <code>request</code> places an asynchronous one-time request without maintaining
            capacity or submitting requests in alternative capacity pools if capacity is unavailable.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html#ec2-fleet-request-type">EC2
            Fleet Request Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.CapacityReservationOptions_UsageStrategy">
            <summary>
            <para>
            <para>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</para><para>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused
            Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity.
            If multiple instance pools have unused Capacity Reservations, the On-Demand allocation
            strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the
            number of unused Capacity Reservations is less than the On-Demand target capacity,
            the remaining On-Demand target capacity is launched according to the On-Demand allocation
            strategy (<code>lowest-price</code> or <code>prioritized</code>).</para><para>If you do not specify a value, the fleet fulfils the On-Demand capacity according
            to the chosen On-Demand allocation strategy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.UtcValidFrom">
            <summary>
            <para>
            <para>The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            The default is to start fulfilling the request immediately.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.UtcValidUntil">
            <summary>
            <para>
            <para>The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            At this point, no new EC2 Fleet requests are placed or able to fulfill the request.
            If no value is specified, the request remains until you cancel it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.ValidFrom">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or
            ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidFrom
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            The default is to start fulfilling the request immediately.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.ValidUntil">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or
            ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidUntil
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            At this point, no new EC2 Fleet requests are placed or able to fulfill the request.
            If no value is specified, the request remains until you cancel it.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateFleetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateFleetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchTemplateConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchTemplateConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet">
            <summary>
            Creates one or more flow logs to capture information about IP traffic for a specific
            network interface, subnet, or VPC. 
            
             
            <para>
            Flow log data for a monitored network interface is recorded as flow log records, which
            are log events consisting of fields that describe the traffic flow. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow
            Log Records</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><para>
            When publishing to CloudWatch Logs, flow log records are published to a log group,
            and each network interface has a unique log stream in the log group. When publishing
            to Amazon S3, flow log records for all of the monitored network interfaces are published
            to a single log file object that is stored in the specified bucket.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html">VPC
            Flow Logs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.DeliverLogsPermissionArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch
            Logs log group in your account.</para><para>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
            <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.LogDestination">
            <summary>
            <para>
            <para>Specifies the destination to which the flow log data is to be published. Flow log
            data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value
            specified for this parameter depends on the value specified for <code>LogDestinationType</code>.</para><para>If <code>LogDestinationType</code> is not specified or <code>cloud-watch-logs</code>,
            specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example,
            to publish to a log group called <code>my-logs</code>, specify <code>arn:aws:logs:us-east-1:123456789012:log-group:my-logs</code>.
            Alternatively, use <code>LogGroupName</code> instead.</para><para>If LogDestinationType is <code>s3</code>, specify the ARN of the Amazon S3 bucket.
            You can also specify a subfolder in the bucket. To specify a subfolder in the bucket,
            use the following ARN format: <code>bucket_ARN/subfolder_name/</code>. For example,
            to specify a subfolder named <code>my-logs</code> in a bucket named <code>my-bucket</code>,
            use the following ARN: <code>arn:aws:s3:::my-bucket/my-logs/</code>. You cannot use
            <code>AWSLogs</code> as a subfolder name. This is a reserved term.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.LogDestinationType">
            <summary>
            <para>
            <para>Specifies the type of destination to which the flow log data is to be published. Flow
            log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data
            to CloudWatch Logs, specify <code>cloud-watch-logs</code>. To publish flow log data
            to Amazon S3, specify <code>s3</code>.</para><para>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
            <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</para><para>Default: <code>cloud-watch-logs</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.LogFormat">
            <summary>
            <para>
            <para>The fields to include in the flow log record, in the order in which they should appear.
            For a list of available fields, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow
            Log Records</a>. If you omit this parameter, the flow log is created using the default
            format. If you specify this parameter, you must specify at least one field.</para><para>Specify the fields using the <code>${field-id}</code> format, separated by spaces.
            For the AWS CLI, use single quotation marks (' ') to surround the parameter value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes
            your flow logs.</para><para>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
            <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.MaxAggregationInterval">
            <summary>
            <para>
            <para>The maximum interval of time during which a flow of packets is captured and aggregated
            into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).</para><para>When a network interface is attached to a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based
            instance</a>, the aggregation interval is always 60 seconds or less, regardless of
            the value that you specify.</para><para>Default: 600</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the subnet, network interface, or VPC for which you want to create a flow
            log.</para><para>Constraints: Maximum of 1000 resources</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource for which to create the flow log. For example, if you specified
            a VPC ID for the <code>ResourceId</code> property, specify <code>VPC</code> for this
            property.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the flow logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.TrafficType">
            <summary>
            <para>
            <para>The type of traffic to log. You can log traffic that the resource accepts or rejects,
            or all traffic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateFlowLogsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateFlowLogsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FlowLogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet">
            <summary>
            Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).
            
             
            <para>
            The create operation is asynchronous. To verify that the AFI is ready for use, check
            the output logs.
            </para><para>
            An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely
            deploy an AFI on multiple FPGA-accelerated instances. For more information, see the
            <a href="https://github.com/aws/aws-fpga/">AWS FPGA Hardware Development Kit</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.InputStorageLocation_Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.LogsStorageLocation_Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.Description">
            <summary>
            <para>
            <para>A description for the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.InputStorageLocation_Key">
            <summary>
            <para>
            <para>The key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.LogsStorageLocation_Key">
            <summary>
            <para>
            <para>The key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.Name">
            <summary>
            <para>
            <para>A name for the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the FPGA image during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateFpgaImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateFpgaImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2FpgaImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet">
            <summary>
            Allocates a Dedicated Host to your account. At a minimum, specify the supported instance
            type or instance family, the Availability Zone in which to allocate the host, and
            the number of hosts to allocate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.AutoPlacement">
            <summary>
            <para>
            <para>Indicates whether the host accepts any untargeted instance launches that match its
            instance type configuration, or if it only accepts Host tenancy instance launches
            that specify its unique host ID. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding">
            Understanding Instance Placement and Host Affinity</a> in the <i>Amazon EC2 User Guide
            for Linux Instances</i>.</para><para>Default: <code>on</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to allocate the Dedicated Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.HostRecovery">
            <summary>
            <para>
            <para>Indicates whether to enable or disable host recovery for the Dedicated Host. Host
            recovery is disabled by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html">
            Host Recovery</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para>Default: <code>off</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.InstanceFamily">
            <summary>
            <para>
            <para>Specifies the instance family to be supported by the Dedicated Hosts. If you specify
            an instance family, the Dedicated Hosts support multiple instance types within that
            instance family.</para><para>If you want the Dedicated Hosts to support a specific instance type only, omit this
            parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b>
            and <b>InstanceType</b> in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.InstanceType">
            <summary>
            <para>
            <para>Specifies the instance type to be supported by the Dedicated Hosts. If you specify
            an instance type, the Dedicated Hosts support instances of the specified instance
            type only.</para><para>If you want the Dedicated Hosts to support multiple instance types in a specific instance
            family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot
            specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.Quantity">
            <summary>
            <para>
            <para>The number of Dedicated Hosts to allocate to your account with these parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the Dedicated Host during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AllocateHostsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AllocateHostsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceType parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet">
            <summary>
            Purchase a reservation with configurations that match those of your Dedicated Host.
            You must have active Dedicated Hosts in your account before you purchase a reservation.
            This action results in the specified reservation being purchased and charged to your
            account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.CurrencyCode">
            <summary>
            <para>
            <para>The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>,
            and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported
            currency is <code>USD</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.HostIdSet">
            <summary>
            <para>
            <para>The IDs of the Dedicated Hosts with which the reservation will be associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.LimitPrice">
            <summary>
            <para>
            <para>The specified limit is checked against the total upfront cost of the reservation (calculated
            as the offering's upfront cost multiplied by the host count). If the total upfront
            cost is greater than the specified price limit, the request fails. This is used to
            ensure that the purchase does not exceed the expected upfront cost of the purchase.
            At this time, the only supported currency is <code>USD</code>. For example, to indicate
            a limit price of USD 100, specify 100.00.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.OfferingId">
            <summary>
            <para>
            <para>The ID of the offering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.PurchaseHostReservationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.PurchaseHostReservationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^OfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2HostReservationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet">
            <summary>
            Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either
            running or stopped.
            
             
            <para>
            If you customized your instance with instance store volumes or EBS volumes in addition
            to the root device volume, the new AMI contains block device mapping information for
            those volumes. When you launch an instance from this new AMI, the instance automatically
            launches with those additional volumes.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating
            Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>The block device mappings. This parameter cannot be used to modify the encryption
            status of existing volumes or snapshots. To create an AMI with encrypted snapshots,
            use the <a>CopyImage</a> action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.Description">
            <summary>
            <para>
            <para>A description for the new image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.Name">
            <summary>
            <para>
            <para>A name for the new image.</para><para>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]),
            spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@),
            or underscores(_)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.NoReboot">
            <summary>
            <para>
            <para>By default, Amazon EC2 attempts to shut down and reboot the instance before creating
            the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance
            before creating the image. When this option is used, file system integrity on the
            created image can't be guaranteed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet">
            <summary>
            Bundles an Amazon instance store-backed Windows instance.
            
             
            <para>
            During bundling, only the root device volume (C:\) is bundled. Data on other instance
            store volumes is not preserved.
            </para><note><para>
            This action is not applicable for Linux/Unix instances or Windows instances that are
            backed by Amazon EBS.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.S3_AWSAccessKeyId">
            <summary>
            <para>
            <para>The access key ID of the owner of the bucket. Before you specify a value for your
            access key ID, review and follow the guidance in <a href="https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best
            Practices for Managing AWS Access Keys</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.S3_Bucket">
            <summary>
            <para>
            <para>The bucket in which to store the AMI. You can specify a bucket that you already own
            or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that
            belongs to someone else, Amazon EC2 returns an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance to bundle.</para><para>Type: String</para><para>Default: None</para><para>Required: Yes</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.S3_Prefix">
            <summary>
            <para>
            <para>The beginning of the file name of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.S3_UploadPolicy">
            <summary>
            <para>
            <para>An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon
            S3 on your behalf.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.S3_UploadPolicySignature">
            <summary>
            <para>
            <para>The signature of the JSON document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BundleTask'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.BundleInstanceResponse).
            Specifying the name of a property of type Amazon.EC2.Model.BundleInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceBundleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet">
            <summary>
            Exports a running or stopped instance to an S3 bucket.
            
             
            <para>
            For information about the supported operating systems, image formats, and known limitations
            for the types of instances you can export, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting
            an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.ExportToS3Task_ContainerFormat">
            <summary>
            <para>
            <para>The container format used to combine disk images with metadata (such as OVF). If absent,
            only the disk image is exported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.Description">
            <summary>
            <para>
            <para>A description for the conversion task or the resource being exported. The maximum
            length is 255 bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.ExportToS3Task_DiskImageFormat">
            <summary>
            <para>
            <para>The format for the exported image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.ExportToS3Task_S3Bucket">
            <summary>
            <para>
            <para>The S3 bucket for the destination image. The destination bucket must exist and grant
            WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.ExportToS3Task_S3Prefix">
            <summary>
            <para>
            <para>The image is written to a single object in the S3 bucket at the S3 key s3prefix +
            exportTaskId + '.' + diskImageFormat.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.TargetEnvironment">
            <summary>
            <para>
            <para>The target virtualization environment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportTask'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateInstanceExportTaskResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateInstanceExportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InstanceExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2InternetGatewayCmdlet">
            <summary>
            Creates an internet gateway for use with a VPC. After creating the internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and internet gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InternetGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateInternetGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateInternetGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2InternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet">
            <summary>
            Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public
            key and displays the private key for you to save to a file. The private key is returned
            as an unencrypted PEM encoded PKCS#1 private key. If a key with the specified name
            already exists, Amazon EC2 returns an error.
            
             
            <para>
            You can have up to five thousand key pairs per Region.
            </para><para>
            The key pair returned to you is available only in the Region in which you create it.
            If you prefer, you can create your own key pair using a third-party tool and upload
            it to any Region using <a>ImportKeyPair</a>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet.KeyName">
            <summary>
            <para>
            <para>A unique name for the key pair.</para><para>Constraints: Up to 255 ASCII characters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the new key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPair'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateKeyPairResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2KeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet">
            <summary>
            Creates a static route for the specified local gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR range used for destination matches. Routing decisions are based on the most
            specific match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.LocalGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the local gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.LocalGatewayVirtualInterfaceGroupId">
            <summary>
            <para>
            <para>The ID of the virtual interface group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Route'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateLocalGatewayRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateLocalGatewayRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LocalGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^LocalGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet">
            <summary>
            Associates the specified VPC with the specified local gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.LocalGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the local gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to assign to the local gateway route table VPC association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayRouteTableVpcAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateLocalGatewayRouteTableVpcAssociationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateLocalGatewayRouteTableVpcAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LocalGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^LocalGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2LocalGatewayRouteTableVpcAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet">
            <summary>
            Creates a NAT gateway in the specified public subnet. This action creates a network
            interface in the specified subnet with a private IP address from the IP address range
            of the subnet. Internet-bound traffic from a private subnet can be routed to the NAT
            gateway, therefore enabling instances in the private subnet to connect to the internet.
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">NAT
            Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.AllocationId">
            <summary>
            <para>
            <para>The allocation ID of an Elastic IP address to associate with the NAT gateway. If the
            Elastic IP address is associated with another resource, you must first disassociate
            it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.SubnetId">
            <summary>
            <para>
            <para>The subnet in which to create the NAT gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to assign to the NAT gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para><para>Constraint: Maximum 64 ASCII characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateNatGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateNatGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NatGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclCmdlet">
            <summary>
            Creates a network ACL in a VPC. Network ACLs provide an optional layer of security
            (in addition to security groups) for the instances in your VPC.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkAcl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateNetworkAclResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateNetworkAclResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet">
            <summary>
            Creates an entry (a rule) in a network ACL with the specified rule number. Each network
            ACL has a set of numbered ingress rules and a separate set of numbered egress rules.
            When determining whether a packet should be allowed in or out of a subnet associated
            with the ACL, we process the entries in the ACL according to the rule numbers, in
            ascending order. Each network ACL has a set of ingress rules and a separate set of
            egress rules.
            
             
            <para>
            We recommend that you leave room between the rule numbers (for example, 100, 110,
            120, ...), and not number them one right after the other (for example, 101, 102, 103,
            ...). This makes it easier to add a rule between existing ones without having to renumber
            the rules.
            </para><para>
            After you add an entry, you can't modify it; you must either replace it, or create
            an entry and delete the old one.
            </para><para>
            For more information about network ACLs, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.CidrBlock">
            <summary>
            <para>
            <para>The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.IcmpTypeCode_Code">
            <summary>
            <para>
            <para>The ICMP code. A value of -1 means all codes for the specified ICMP type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.Egress">
            <summary>
            <para>
            <para>Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.PortRange_From">
            <summary>
            <para>
            <para>The first port in the range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:db8:1234:1a00::/64</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>The ID of the network ACL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol number. A value of "-1" means all protocols. If you specify "-1" or a
            protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports
            is allowed, regardless of any ports or ICMP types or codes that you specify. If you
            specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP
            types and codes allowed, regardless of any that you specify. If you specify protocol
            "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.RuleAction">
            <summary>
            <para>
            <para>Indicates whether to allow or deny the traffic that matches the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.RuleNumber">
            <summary>
            <para>
            <para>The rule number for the entry (for example, 100). ACL entries are processed in ascending
            order by rule number.</para><para>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved
            for internal use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.PortRange_To">
            <summary>
            <para>
            <para>The last port in the range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.IcmpTypeCode_Type">
            <summary>
            <para>
            <para>The ICMP type. A value of -1 means all types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateNetworkAclEntryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkAclId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkAclId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkAclEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet">
            <summary>
            Creates a network interface in the specified subnet.
            
             
            <para>
            For more information about network interfaces, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
            Network Interfaces</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Description">
            <summary>
            <para>
            <para>A description for the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Group">
            <summary>
            <para>
            <para>The IDs of one or more security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.InterfaceType">
            <summary>
            <para>
            <para>Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA),
            specify <code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">
            Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Ipv6AddressCount">
            <summary>
            <para>
            <para>The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically
            selects the IPv6 addresses from the subnet range. You can't use this option if specifying
            specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code>
            attribute set to <code>true</code>, you can specify <code>0</code> to override this
            setting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Ipv6Address">
            <summary>
            <para>
            <para>One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.
            You can't use this option if you're specifying a number of IPv6 addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.PrivateIpAddress">
            <summary>
            <para>
            <para>The primary private IPv4 address of the network interface. If you don't specify an
            IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If
            you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code>
            as primary (only one IP address can be designated as primary).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.PrivateIpAddressSet">
            <summary>
            <para>
            <para>One or more private IPv4 addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.SecondaryPrivateIpAddressCount">
            <summary>
            <para>
            <para>The number of secondary private IPv4 addresses to assign to a network interface. When
            you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses
            within the subnet's IPv4 CIDR range. You can't specify this option and specify more
            than one private IP address using <code>privateIpAddresses</code>.</para><para>The number of IP addresses you can assign to a network interface varies by instance
            type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP
            Addresses Per ENI Per Instance Type</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet to associate with the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkInterface'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateNetworkInterfaceResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateNetworkInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet">
            <summary>
            Grants an AWS-authorized account permission to attach the specified network interface
            to an instance in their account.
            
             
            <para>
            You can grant permission to a single AWS account only, and only one account at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.AwsService">
            <summary>
            <para>
            <para>The AWS service. Currently not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.Permission">
            <summary>
            <para>
            <para>The type of permission to grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InterfacePermission'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateNetworkInterfacePermissionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateNetworkInterfacePermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2NetworkInterfacePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet">
            <summary>
            Creates a placement group in which to launch instances. The strategy of the placement
            group determines how the instances are organized within the group. 
            
             
            <para>
            A <code>cluster</code> placement group is a logical grouping of instances within a
            single Availability Zone that benefit from low network latency, high network throughput.
            A <code>spread</code> placement group places instances on distinct hardware. A <code>partition</code>
            placement group places groups of instances in different partitions, where instances
            in one partition do not share the same hardware with instances in another partition.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>A name for the placement group. Must be unique within the scope of your account for
            the Region.</para><para>Constraints: Up to 255 ASCII characters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.PartitionCount">
            <summary>
            <para>
            <para>The number of partitions. Valid only when <b>Strategy</b> is set to <code>partition</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.Strategy">
            <summary>
            <para>
            <para>The placement strategy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the new placement group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreatePlacementGroupResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreatePlacementGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2PlacementGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet">
            <summary>
            Purchases a Reserved Instance for use with your account. With Reserved Instances,
            you pay a lower hourly rate compared to On-Demand instance pricing.
            
             
            <para>
            Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings
            that match your specifications. After you've purchased a Reserved Instance, you can
            check for your new Reserved Instance with <a>DescribeReservedInstances</a>.
            </para><para>
            To queue a purchase for a future date and time, specify a purchase time. If you do
            not specify a purchase time, the default is the current time.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.LimitPrice_Amount">
            <summary>
            <para>
            <para>Used for Reserved Instance Marketplace offerings. Specifies the limit price on the
            total order (instanceCount * price).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.LimitPrice_CurrencyCode">
            <summary>
            <para>
            <para>The currency in which the <code>limitPrice</code> amount is specified. At this time,
            the only supported currency is <code>USD</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The number of Reserved Instances to purchase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.PurchaseTime">
            <summary>
            <para>
            <para>The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.ReservedInstancesOfferingId">
            <summary>
            <para>
            <para>The ID of the Reserved Instance offering to purchase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse).
            Specifying the name of a property of type Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet">
            <summary>
            Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved
            Instance Marketplace. You can submit one Standard Reserved Instance listing at a time.
            To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a>
            operation.
            
             <note><para>
            Only Standard Reserved Instances can be sold in the Reserved Instance Marketplace.
            Convertible Reserved Instances cannot be sold.
            </para></note><para>
            The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved
            Instance capacity that they no longer need with buyers who want to purchase additional
            capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace
            work like any other Reserved Instances.
            </para><para>
            To sell your Standard Reserved Instances, you must first register as a seller in the
            Reserved Instance Marketplace. After completing the registration process, you can
            create a Reserved Instance Marketplace listing of some or all of your Standard Reserved
            Instances, and specify the upfront price to receive for them. Your Standard Reserved
            Instance listings then become available for purchase. To view the details of your
            Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a>
            operation.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The number of instances that are a part of a Reserved Instance account to be listed
            in the Reserved Instance Marketplace. This number should be less than or equal to
            the instance count associated with the Reserved Instance ID specified in this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.PriceSchedule">
            <summary>
            <para>
            <para>A list specifying the price of the Standard Reserved Instance for each month remaining
            in the Reserved Instance term.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.ReservedInstancesId">
            <summary>
            <para>
            <para>The ID of the active Standard Reserved Instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier you provide to ensure idempotency of your listings.
            This helps avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesListings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateReservedInstancesListingResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateReservedInstancesListingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ReservedInstancesListingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet">
            <summary>
            Creates a route in a route table within a VPC.
            
             
            <para>
            You must specify one of the following targets: internet gateway or virtual private
            gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only
            internet gateway, or transit gateway.
            </para><para>
            When determining how to route traffic, we use the route with the most specific match.
            For example, traffic is destined for the IPv4 address <code>192.0.2.3</code>, and
            the route table includes the following two IPv4 routes:
            </para><ul><li><para><code>192.0.2.0/24</code> (goes to some target A)
            </para></li><li><para><code>192.0.2.0/28</code> (goes to some target B)
            </para></li></ul><para>
            Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the
            second route in the list covers a smaller number of IP addresses and is therefore
            more specific, so we use that route to determine where to target the traffic.
            </para><para>
            For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The IPv4 CIDR address block used for the destination match. Routing decisions are
            based on the most specific match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.DestinationIpv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 CIDR block used for the destination match. Routing decisions are based on
            the most specific match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.EgressOnlyInternetGatewayId">
            <summary>
            <para>
            <para>[IPv6 traffic only] The ID of an egress-only internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of an internet gateway or virtual private gateway attached to your VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of a NAT instance in your VPC. The operation fails if you specify an instance
            ID unless exactly one network interface is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.LocalGatewayId">
            <summary>
            <para>
            <para>The ID of the local gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.NatGatewayId">
            <summary>
            <para>
            <para>[IPv4 traffic only] The ID of a NAT gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of a network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table for the route.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of a transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of a VPC peering connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteTableCmdlet">
            <summary>
            Creates a route table for the specified VPC. After you create a route table, you can
            add routes and associate the table with a subnet.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteTableCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RouteTable'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2RouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet">
            <summary>
            Launches the specified Scheduled Instances.
            
             
            <para>
            Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier
            using <a>PurchaseScheduledInstances</a>.
            </para><para>
            You must launch a Scheduled Instance during its scheduled time period. You can't stop
            or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate
            a Scheduled Instance before the current scheduled time period ends, you can launch
            it again after a few minutes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.IamInstanceProfile_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.Placement_AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_BlockDeviceMapping">
            <summary>
            <para>
            <para>The block device mapping entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_EbsOptimized">
            <summary>
            <para>
            <para>Indicates whether the instances are optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS-optimized instance.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.Monitoring_Enabled">
            <summary>
            <para>
            <para>Indicates whether monitoring is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.Placement_GroupName">
            <summary>
            <para>
            <para>The name of the placement group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_ImageId">
            <summary>
            <para>
            <para>The ID of the Amazon Machine Image (AMI).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The number of instances.</para><para>Default: 1</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_InstanceType">
            <summary>
            <para>
            <para>The instance type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_KernelId">
            <summary>
            <para>
            <para>The ID of the kernel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_KeyName">
            <summary>
            <para>
            <para>The name of the key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.IamInstanceProfile_Name">
            <summary>
            <para>
            <para>The name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_NetworkInterface">
            <summary>
            <para>
            <para>The network interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.ScheduledInstanceId">
            <summary>
            <para>
            <para>The Scheduled Instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_SecurityGroupId">
            <summary>
            <para>
            <para>The IDs of the security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet in which to launch the instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.LaunchSpecification_UserData">
            <summary>
            <para>
            <para>The base64-encoded MIME user data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that ensures the idempotency of the request. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceIdSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RunScheduledInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RunScheduledInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledInstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledInstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet">
            <summary>
            Purchases the Scheduled Instances with the specified schedule.
            
             
            <para>
            Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour
            for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a>
            to check for available schedules and obtain a purchase token. After you purchase a
            Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled
            time period.
            </para><para>
            After you purchase a Scheduled Instance, you can't cancel, modify, or resell your
            purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet.PurchaseRequest">
            <summary>
            <para>
            <para>The purchase requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that ensures the idempotency of the request. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledInstanceSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.PurchaseScheduledInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.PurchaseScheduledInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PurchaseRequest parameter.
            The -PassThru parameter is deprecated, use -Select '^PurchaseRequest' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2ScheduledInstancePurchaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet">
            <summary>
            Creates a security group.
            
             
            <para>
            A security group acts as a virtual firewall for your instance to control inbound and
            outbound traffic. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><para>
            When you create a security group, you specify a friendly name of your choice. You
            can have a security group for use in EC2-Classic with the same name as a security
            group for use in a VPC. However, you can't have two security groups for use in EC2-Classic
            with the same name or two security groups for use in a VPC with the same name.
            </para><para>
            You have a default security group for use in EC2-Classic and a default security group
            for use in your VPC. If you don't specify a security group when you launch an instance,
            the instance is launched into the appropriate default security group. A default security
            group includes a default rule that grants instances unrestricted network access to
            each other.
            </para><para>
            You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>,
            <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.
            </para><para>
            For more information about VPC security group limits, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon
            VPC Limits</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the security group. This is informational only.</para><para>Constraints: Up to 255 characters in length</para><para>Constraints for EC2-Classic: ASCII characters</para><para>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the security group.</para><para>Constraints: Up to 255 characters in length. Cannot start with <code>sg-</code>.</para><para>Constraints for EC2-Classic: ASCII characters</para><para>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.VpcId">
            <summary>
            <para>
            <para>[EC2-VPC] The ID of the VPC. Required for EC2-VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateSecurityGroupResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateSecurityGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet">
            <summary>
            Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots
            for backups, to make copies of EBS volumes, and to save data before shutting down
            an instance.
            
             
            <para>
            When a snapshot is created, any AWS Marketplace product codes that are associated
            with the source volume are propagated to the snapshot.
            </para><para>
            You can take a snapshot of an attached volume that is in use. However, snapshots only
            capture data that has been written to your EBS volume at the time the snapshot command
            is issued; this may exclude any data that has been cached by any applications or the
            operating system. If you can pause any file systems on the volume long enough to take
            a snapshot, your snapshot should be complete. However, if you cannot pause all file
            writes to the volume, you should unmount the volume from within the instance, issue
            the snapshot command, and then remount the volume to ensure a consistent and complete
            snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.
            </para><para>
            To create a snapshot for EBS volumes that serve as root devices, you should stop the
            instance before taking the snapshot.
            </para><para>
            Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes
            that are created from encrypted snapshots are also automatically encrypted. Your encrypted
            volumes and any associated snapshots always remain protected.
            </para><para>
            You can tag your snapshots during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon
            Elastic Block Store</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.Description">
            <summary>
            <para>
            <para>A description for the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the snapshot during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the EBS volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateSnapshotResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet">
            <summary>
            Creates crash-consistent snapshots of multiple EBS volumes and stores the data in
            S3. Volumes are chosen by specifying an instance. Any attached volumes will produce
            one snapshot each that is crash-consistent across the instance. Boot volumes can be
            excluded by changing the parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.CopyTagsFromSource">
            <summary>
            <para>
            <para>Copies the tags from the specified volume to corresponding snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.Description">
            <summary>
            <para>
            <para> A description propagated to every snapshot specified by the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.InstanceSpecification_ExcludeBootVolume">
            <summary>
            <para>
            <para>Excludes the root volume from being snapshotted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.InstanceSpecification_InstanceId">
            <summary>
            <para>
            <para>The instance to specify which volumes should be snapshotted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.TagSpecification">
            <summary>
            <para>
            <para>Tags to apply to every snapshot specified by the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateSnapshotsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceSpecification_InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceSpecification_InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SnapshotBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet">
            <summary>
            Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs.
            You can create one data feed per AWS account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet.Bucket">
            <summary>
            <para>
            <para>The Amazon S3 bucket in which to store the Spot Instance data feed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet.Prefix">
            <summary>
            <para>
            <para>A prefix for the data feed file names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotDatafeedSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Bucket parameter.
            The -PassThru parameter is deprecated, use -Select '^Bucket' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SpotDatafeedSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet">
            <summary>
            Creates a subnet in an existing VPC.
            
             
            <para>
            When you create each subnet, you provide the VPC ID and IPv4 CIDR block for the subnet.
            After you create a subnet, you can't change its CIDR block. The size of the subnet's
            IPv4 CIDR block can be the same as a VPC's IPv4 CIDR block, or a subset of a VPC's
            IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks
            must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask
            (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).
            </para><para>
            If you've associated an IPv6 CIDR block with your VPC, you can create a subnet with
            an IPv6 CIDR block that uses a /64 prefix length. 
            </para><important><para>
            AWS reserves both the first four and the last IPv4 address in each subnet's CIDR block.
            They're not available for use.
            </para></important><para>
            If you add more than one subnet to a VPC, they're set up in a star topology with a
            logical router in the middle.
            </para><para>
            If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address
            doesn't change if you stop and restart the instance (unlike a similar instance launched
            outside a VPC, which gets a new IP address when restarted). It's therefore possible
            to have a subnet with no running instances (they're all stopped), but no remaining
            IP addresses available.
            </para><para>
            For more information about subnets, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone or Local Zone for the subnet.</para><para>Default: AWS selects one for you. If you create more than one subnet in your VPC,
            we do not necessarily select a different zone for each subnet.</para><para>To create a subnet in a Local Zone, set this value to the Local Zone ID, for example
            <code>us-west-2-lax-1a</code>. For information about the Regions that support Local
            Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">Available
            Regions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para>To create a subnet in an Outpost, set this value to the Availability Zone for the
            Outpost and specify the Outpost ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.AvailabilityZoneId">
            <summary>
            <para>
            <para>The AZ ID or the Local Zone ID of the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.CidrBlock">
            <summary>
            <para>
            <para>The IPv4 network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 network range for the subnet, in CIDR notation. The subnet size must use
            a /64 prefix length.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.OutpostArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you
            must also specify the Availability Zone of the Outpost subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Subnet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateSubnetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateSubnetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2SubnetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet">
            <summary>
            Adds or overwrites only the specified tags for the specified Amazon EC2 resource or
            resources. When you specify an existing tag key, the value is overwritten with the
            new value. Each resource can have a maximum of 50 tags. Each tag consists of a key
            and optional value. Tag keys must be unique per resource.
            
             
            <para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more
            information about creating IAM policies that control users' access to resources based
            on tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported
            Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic
            Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet.Resource">
            <summary>
            <para>
            <para>The IDs of the resources, separated by spaces.</para><para>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller
            batches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. The <code>value</code> parameter is required, but if you don't want the
            tag to have a value, specify the parameter with no value, and we set the value to
            an empty string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet.PassThru">
            <summary>
            Returns the collection of Tag objects that were created
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet">
            <summary>
            Creates a Traffic Mirror filter.
            
             
            <para>
            A Traffic Mirror filter is a set of rules that defines the traffic to mirror.
            </para><para>
            By default, no traffic is mirrored. To mirror traffic, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.htm">CreateTrafficMirrorFilterRule</a>
            to add Traffic Mirror rules to the filter. The rules you add define what traffic gets
            mirrored. You can also use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html">ModifyTrafficMirrorFilterNetworkServices</a>
            to mirror supported network services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet.Description">
            <summary>
            <para>
            <para>The description of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to assign to a Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilter'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTrafficMirrorFilterResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTrafficMirrorFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet">
            <summary>
            Creates a Traffic Mirror filter rule. 
            
             
            <para>
            A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.
            </para><para>
            You need the Traffic Mirror filter ID when you create the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.Description">
            <summary>
            <para>
            <para>The description of the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The destination CIDR block to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.DestinationPortRange_FromPort">
            <summary>
            <para>
            <para>The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.SourcePortRange_FromPort">
            <summary>
            <para>
            <para>The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol, for example UDP, to assign to the Traffic Mirror rule.</para><para>For information about the protocol value, see <a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
            Numbers</a> on the Internet Assigned Numbers Authority (IANA) website.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.RuleAction">
            <summary>
            <para>
            <para>The action to take (<code>accept</code> | <code>reject</code>) on the filtered traffic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.RuleNumber">
            <summary>
            <para>
            <para>The number of the Traffic Mirror rule. This number must be unique for each Traffic
            Mirror rule in a given direction. The rules are processed in ascending order by rule
            number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.SourceCidrBlock">
            <summary>
            <para>
            <para>The source CIDR block to assign to the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.DestinationPortRange_ToPort">
            <summary>
            <para>
            <para>The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.SourcePortRange_ToPort">
            <summary>
            <para>
            <para>The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.TrafficDirection">
            <summary>
            <para>
            <para>The type of traffic (<code>ingress</code> | <code>egress</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the filter that this rule is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilterRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTrafficMirrorFilterRuleResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTrafficMirrorFilterRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorFilterRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet">
            <summary>
            Creates a Traffic Mirror session.
            
             
            <para>
            A Traffic Mirror session actively copies packets from a Traffic Mirror source to a
            Traffic Mirror target. Create a filter, and then assign it to the session to define
            a subset of the traffic to mirror, for example all TCP traffic.
            </para><para>
            The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can
            be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway.
            
            </para><para>
            By default, no traffic is mirrored. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.htm">CreateTrafficMirrorFilter</a>
            to create filter rules that specify the traffic to mirror.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.Description">
            <summary>
            <para>
            <para>The description of the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the source network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.PacketLength">
            <summary>
            <para>
            <para>The number of bytes in each packet to mirror. These are bytes after the VXLAN header.
            Do not specify this parameter when you want to mirror the entire packet. To mirror
            a subset of the packet, set this to the length (in bytes) that you want to mirror.
            For example, if you set this value to 100, then the first 100 bytes that meet the
            filter criteria are copied to the target.</para><para>If you do not want to mirror the entire packet, use the <code>PacketLength</code>
            parameter to specify the number of bytes in each packet to mirror.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.SessionNumber">
            <summary>
            <para>
            <para>The session number determines the order in which sessions are evaluated when an interface
            is used by multiple sessions. The first session with a matching filter is the one
            that mirrors the packets.</para><para>Valid values are 1-32766.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to assign to a Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.TrafficMirrorTargetId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.VirtualNetworkId">
            <summary>
            <para>
            <para>The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN
            protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do
            not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at
            random.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTrafficMirrorSessionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTrafficMirrorSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet">
            <summary>
            Creates a target for your Traffic Mirror session.
            
             
            <para>
            A Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror
            source and the Traffic Mirror target (monitoring appliances) can be in the same VPC,
            or in different VPCs connected via VPC peering or a transit gateway.
            </para><para>
            A Traffic Mirror target can be a network interface, or a Network Load Balancer.
            </para><para>
            To use the target in a Traffic Mirror session, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.htm">CreateTrafficMirrorSession</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.Description">
            <summary>
            <para>
            <para>The description of the Traffic Mirror target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The network interface ID that is associated with the target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.NetworkLoadBalancerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with
            the target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to assign to the Traffic Mirror target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorTarget'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTrafficMirrorTargetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTrafficMirrorTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TrafficMirrorTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet">
            <summary>
            Creates a transit gateway.
            
             
            <para>
            You can use a transit gateway to interconnect your virtual private clouds (VPC) and
            on-premises networks. After the transit gateway enters the <code>available</code>
            state, you can attach your VPCs and VPN connections to the transit gateway.
            </para><para>
            To attach your VPCs, use <a>CreateTransitGatewayVpcAttachment</a>.
            </para><para>
            To attach a VPN connection, use <a>CreateCustomerGateway</a> to create a customer
            gateway and specify the ID of the customer gateway and the ID of the transit gateway
            in a call to <a>CreateVpnConnection</a>.
            </para><para>
            When you create a transit gateway, we create a default transit gateway route table
            and use it as the default association route table and the default propagation route
            table. You can use <a>CreateTransitGatewayRouteTable</a> to create additional transit
            gateway route tables. If you disable automatic route propagation, we do not create
            a default transit gateway route table. You can use <a>EnableTransitGatewayRouteTablePropagation</a>
            to propagate routes from a resource attachment to a transit gateway route table. If
            you disable automatic associations, you can use <a>AssociateTransitGatewayRouteTable</a>
            to associate a resource attachment with a transit gateway route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_AmazonSideAsn">
            <summary>
            <para>
            <para>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The
            range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_AutoAcceptSharedAttachment">
            <summary>
            <para>
            <para>Enable or disable automatic acceptance of attachment requests. The default is <code>disable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_DefaultRouteTableAssociation">
            <summary>
            <para>
            <para>Enable or disable automatic association with the default association route table.
            The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_DefaultRouteTablePropagation">
            <summary>
            <para>
            <para>Enable or disable automatic propagation of routes to the default propagation route
            table. The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Description">
            <summary>
            <para>
            <para>A description of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_DnsSupport">
            <summary>
            <para>
            <para>Enable or disable DNS support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_MulticastSupport">
            <summary>
            <para>
            <para>Indicates whether multicast is enabled on the transit gateway</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Options_VpnEcmpSupport">
            <summary>
            <para>
            <para>Enable or disable Equal Cost Multipath Protocol support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet">
            <summary>
            Creates a multicast domain using the specified transit gateway.
            
             
            <para>
            The transit gateway must be in the available state before you create a domain. Use
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html">DescribeTransitGateways</a>
            to see the state of transit gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags for the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayMulticastDomain'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayMulticastDomainResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayMulticastDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayMulticastDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet">
            <summary>
            Requests a transit gateway peering attachment between the specified transit gateway
            (requester) and a peer transit gateway (accepter). The transit gateways must be in
            different Regions. The peer transit gateway can be in your account or a different
            AWS account. 
            
             
            <para>
            After you create the peering attachment, the owner of the accepter transit gateway
            must accept the attachment request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.PeerAccountId">
            <summary>
            <para>
            <para>The AWS account ID of the owner of the peer transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.PeerRegion">
            <summary>
            <para>
            <para>The Region where the peer transit gateway is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.PeerTransitGatewayId">
            <summary>
            <para>
            <para>The ID of the peer transit gateway with which to create the peering attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the transit gateway peering attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayPeeringAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayPeeringAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayPeeringAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayPeeringAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet">
            <summary>
            Creates a static route for the specified transit gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.Blackhole">
            <summary>
            <para>
            <para>Indicates whether to drop traffic that matches this route.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR range used for destination matches. Routing decisions are based on the most
            specific match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Route'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet">
            <summary>
            Creates a route table for the specified transit gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayRouteTable'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayRouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Attaches the specified VPC to the specified transit gateway.
            
             
            <para>
            If you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is
            already attached, the new VPC CIDR range is not propagated to the default propagation
            route table.
            </para><para>
            To send VPC traffic to an attached transit gateway, add a route to the VPC route table
            using <a>CreateRoute</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.Options_DnsSupport">
            <summary>
            <para>
            <para>Enable or disable DNS support. The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.Options_Ipv6Support">
            <summary>
            <para>
            <para>Enable or disable IPv6 support. The default is <code>enable</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.SubnetId">
            <summary>
            <para>
            <para>The IDs of one or more subnets. You can specify only one subnet per Availability Zone.
            You must specify at least one subnet, but we recommend that you specify two subnets
            for better availability. The transit gateway uses one IP address from each specified
            subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the VPC attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateTransitGatewayVpcAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateTransitGatewayVpcAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2TransitGatewayVpcAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet">
            <summary>
            Creates an EBS volume that can be attached to an instance in the same Availability
            Zone. The volume is created in the regional endpoint that you send the HTTP request
            to. For more information see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
            and Endpoints</a>.
            
             
            <para>
            You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS
            Marketplace product codes from the snapshot are propagated to the volume.
            </para><para>
            You can create encrypted volumes. Encrypted volumes must be attached to instances
            that support Amazon EBS encryption. Volumes that are created from encrypted snapshots
            are also automatically encrypted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            You can tag your volumes during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.Encrypted">
            <summary>
            <para>
            <para>Specifies whether the volume should be encrypted. The effect of setting the encryption
            state to <code>true</code> depends on the volume origin (new or from a snapshot),
            starting encryption state, ownership, and whether encryption by default is enabled.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">Encryption
            by Default</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para>Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS
            encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported
            Instance Types</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.Iops">
            <summary>
            <para>
            <para>The number of I/O operations per second (IOPS) to provision for the volume, with a
            maximum ratio of 50 IOPS/GiB. Range is 100 to 64,000 IOPS for volumes in most Regions.
            Maximum IOPS of 64,000 is guaranteed only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based
            instances</a>. Other instance families guarantee performance up to 32,000 IOPS. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
            EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><para>This parameter is valid only for Provisioned IOPS SSD (io1) volumes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed
            CMK for EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must
            be <code>true</code>.</para><para>You can specify the CMK using any of the following:</para><ul><li><para>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</para></li><li><para>Key alias. For example, alias/ExampleAlias.</para></li><li><para>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</para></li><li><para>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</para></li></ul><para>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias,
            or ARN that is not valid, the action can appear to complete, but eventually fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.MultiAttachEnabled">
            <summary>
            <para>
            <para>Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you
            can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based
            instances</a> in the same Availability Zone. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html">
            Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.OutpostArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Outpost.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.Size">
            <summary>
            <para>
            <para>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume
            size.</para><para>Constraints: 1-16,384 for <code>gp2</code>, 4-16,384 for <code>io1</code>, 500-16,384
            for <code>st1</code>, 500-16,384 for <code>sc1</code>, and 1-1,024 for <code>standard</code>.
            If you specify a snapshot, the volume size must be equal to or larger than the snapshot
            size.</para><para>Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The snapshot from which to create the volume. You must specify either a snapshot ID
            or a volume size.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the volume during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.VolumeType">
            <summary>
            <para>
            <para>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code>
            for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>
            for Cold HDD, or <code>standard</code> for Magnetic volumes.</para><para>Default: <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Volume'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVolumeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVolumeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VolumeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet">
            <summary>
            Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create
            uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536
            IPv4 addresses). For more information about how large to make your VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can optionally request an IPv6 CIDR block for the VPC. You can request an Amazon-provided
            IPv6 CIDR block from Amazon's pool of IPv6 addresses, or an IPv6 CIDR block from an
            IPv6 address pool that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>).
            </para><para>
            By default, each instance you launch in the VPC has the default DHCP options, which
            include only a default DNS server that we provide (AmazonProvidedDNS). For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para><para>
            You can specify the instance tenancy value for the VPC when you create it. You can't
            change this value for the VPC after you create it. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.AmazonProvidedIpv6CidrBlock">
            <summary>
            <para>
            <para>Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC.
            You cannot specify the range of IP addresses, or the size of the CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.CidrBlock">
            <summary>
            <para>
            <para>The IPv4 network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.InstanceTenancy">
            <summary>
            <para>
            <para>The tenancy options for instances launched into the VPC. For <code>default</code>,
            instances are launched with shared tenancy by default. You can launch instances with
            any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched
            as dedicated tenancy instances by default. You can only launch instances with a tenancy
            of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. </para><para><b>Important:</b> The <code>host</code> value cannot be used with this parameter.
            Use the <code>default</code> or <code>dedicated</code> values only.</para><para>Default: <code>default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code>
            in the request.</para><para>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.Ipv6CidrBlockNetworkBorderGroup">
            <summary>
            <para>
            <para>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter
            to limit the address to this location.</para><para> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use
            this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.Ipv6Pool">
            <summary>
            <para>
            <para>The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vpc'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpcResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CidrBlock parameter.
            The -PassThru parameter is deprecated, use -Select '^CidrBlock' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet">
            <summary>
            Creates a VPC endpoint for a specified service. An endpoint enables you to create
            a private connection between your VPC and the service. The service may be provided
            by AWS, an AWS Marketplace Partner, or another AWS account. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html">VPC
            Endpoints</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            A <code>gateway</code> endpoint serves as a target for a route in your route table
            for traffic destined for the AWS service. You can specify an endpoint policy to attach
            to the endpoint, which will control access to the service from your VPC. You can also
            specify the VPC route tables that use the endpoint.
            </para><para>
            An <code>interface</code> endpoint is a network interface in your subnet that serves
            as an endpoint for communicating with the specified service. You can specify the subnets
            in which to create an endpoint, and the security groups to associate with the endpoint
            network interface.
            </para><para>
            Use <a>DescribeVpcEndpointServices</a> to get a list of supported services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>A policy to attach to the endpoint that controls access to the service. The policy
            must be in valid JSON format. If this parameter is not specified, we attach a default
            policy that allows full access to the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.PrivateDnsEnabled">
            <summary>
            <para>
            <para>(Interface endpoint) Indicates whether to associate a private hosted zone with the
            specified VPC. The private hosted zone contains a record set for the default public
            DNS name for the service for the Region (for example, <code>kinesis.us-east-1.amazonaws.com</code>),
            which resolves to the private IP addresses of the endpoint network interfaces in the
            VPC. This enables you to make requests to the default public DNS name for the service
            instead of the public DNS names that are automatically generated by the VPC endpoint
            service.</para><para>To use a private hosted zone, you must set the following VPC attributes to <code>true</code>:
            <code>enableDnsHostnames</code> and <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a>
            to set the VPC attributes.</para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.RouteTableId">
            <summary>
            <para>
            <para>(Gateway endpoint) One or more route table IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>(Interface endpoint) The ID of one or more security groups to associate with the endpoint
            network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.ServiceName">
            <summary>
            <para>
            <para>The service name. To get a list of available services, use the <a>DescribeVpcEndpointServices</a>
            request, or get the name from the service provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.SubnetId">
            <summary>
            <para>
            <para>(Interface endpoint) The ID of one or more subnets in which to create an endpoint
            network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to associate with the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.VpcEndpointType">
            <summary>
            <para>
            <para>The type of endpoint.</para><para>Default: Gateway</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC in which the endpoint will be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpcEndpointResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpcEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet">
            <summary>
            Creates a connection notification for a specified VPC endpoint or VPC endpoint service.
            A connection notification notifies you of specific endpoint events. You must create
            an SNS topic to receive notifications. For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Create
            a Topic</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.
            
             
            <para>
            You can create a connection notification for interface endpoints only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.ConnectionEvent">
            <summary>
            <para>
            <para>One or more endpoint events for which to receive notifications. Valid values are <code>Accept</code>,
            <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.ConnectionNotificationArn">
            <summary>
            <para>
            <para>The ARN of the SNS topic for the notifications.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>The ID of the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpcEndpointConnectionNotificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpcEndpointConnectionNotificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionNotificationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionNotificationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointConnectionNotificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet">
            <summary>
            Creates a VPC endpoint service configuration to which service consumers (AWS accounts,
            IAM users, and IAM roles) can connect. Service consumers can create an interface VPC
            endpoint to connect to your service.
            
             
            <para>
            To create an endpoint service configuration, you must first create a Network Load
            Balancer for your service. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-service.html">VPC
            Endpoint Services</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. 
            </para><para>
            If you set the private DNS name, you must prove that you own the private DNS domain
            name. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-dns-validation.html">VPC
            Endpoint Service Private DNS Name Verification</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.AcceptanceRequired">
            <summary>
            <para>
            <para>Indicates whether requests from service consumers to create an endpoint to your service
            must be accepted. To accept a request, use <a>AcceptVpcEndpointConnections</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.NetworkLoadBalancerArn">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.PrivateDnsName">
            <summary>
            <para>
            <para>The private DNS name to assign to the VPC endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.TagSpecification">
            <summary>
            <para>
            <para>The tags to associate with the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpcEndpointServiceConfigurationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpcEndpointServiceConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkLoadBalancerArn parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkLoadBalancerArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcEndpointServiceConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet">
            <summary>
            Requests a VPC peering connection between two VPCs: a requester VPC that you own and
            an accepter VPC with which to create the connection. The accepter VPC can belong to
            another AWS account and can be in a different Region to the requester VPC. The requester
            VPC and accepter VPC cannot have overlapping CIDR blocks.
            
             <note><para>
            Limitations and rules apply to a VPC peering connection. For more information, see
            the <a href="https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations">limitations</a>
            section in the <i>VPC Peering Guide</i>.
            </para></note><para>
            The owner of the accepter VPC must accept the peering request to activate the peering
            connection. The VPC peering connection request expires after 7 days, after which it
            cannot be accepted or rejected.
            </para><para>
            If you create a VPC peering connection request between VPCs with overlapping CIDR
            blocks, the VPC peering connection has a status of <code>failed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.PeerOwnerId">
            <summary>
            <para>
            <para>The AWS account ID of the owner of the accepter VPC.</para><para>Default: Your AWS account ID</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.PeerRegion">
            <summary>
            <para>
            <para>The Region code for the accepter VPC, if the accepter VPC is located in a Region other
            than the Region in which you make the request.</para><para>Default: The Region in which you make the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.PeerVpcId">
            <summary>
            <para>
            <para>The ID of the VPC with which you are creating the VPC peering connection. You must
            specify this parameter in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the requester VPC. You must specify this parameter in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpcPeeringConnectionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpcPeeringConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet">
            <summary>
            Creates a VPN connection between an existing virtual private gateway and a VPN customer
            gateway. The supported connection type is <code>ipsec.1</code>.
            
             
            <para>
            The response includes information that you need to give to your network administrator
            to configure your customer gateway.
            </para><important><para>
            We strongly recommend that you use HTTPS when calling this operation because the response
            contains sensitive cryptographic information for configuring your customer gateway.
            </para></important><para>
            If you decide to shut down your VPN connection for any reason and later create a new
            VPN connection, you must reconfigure your customer gateway with the new information
            returned from this call.
            </para><para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.CustomerGatewayId">
            <summary>
            <para>
            <para>The ID of the customer gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Options_EnableAcceleration">
            <summary>
            <para>
            <para>Indicate whether to enable acceleration for the VPN connection.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Options_StaticRoutesOnly">
            <summary>
            <para>
            <para>Indicate whether the VPN connection uses static routes only. If you are creating a
            VPN connection for a device that does not support BGP, you must specify <code>true</code>.
            Use <a>CreateVpnConnectionRoute</a> to create a static route.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway. If you specify a transit gateway, you cannot specify
            a virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Options_TunnelOption">
            <summary>
            <para>
            <para>The tunnel options for the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Type">
            <summary>
            <para>
            <para>The type of VPN connection (<code>ipsec.1</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway. If you specify a virtual private gateway, you
            cannot specify a transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnConnection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpnConnectionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpnConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Type parameter.
            The -PassThru parameter is deprecated, use -Select '^Type' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet">
            <summary>
            Creates a static route associated with a VPN connection between an existing virtual
            private gateway and a VPN customer gateway. The static route allows traffic to be
            routed from the virtual private gateway to the VPN customer gateway.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR block associated with the local subnet of the customer network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpnConnectionRouteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnConnectionRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet">
            <summary>
            Creates a virtual private gateway. A virtual private gateway is the endpoint on the
            VPC side of your VPN connection. You can create a virtual private gateway before creating
            the VPC itself.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">AWS
            Site-to-Site VPN</a> in the <i>AWS Site-to-Site VPN User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.AmazonSideAsn">
            <summary>
            <para>
            <para>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If
            you're using a 16-bit ASN, it must be in the 64512 to 65534 range. If you're using
            a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.</para><para>Default: 64512</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone for the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.Type">
            <summary>
            <para>
            <para>The type of VPN connection this virtual private gateway supports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpnGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CreateVpnGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CreateVpnGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Type parameter.
            The -PassThru parameter is deprecated, use -Select '^Type' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.NewEC2VpnGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet">
            <summary>
            Associates an Elastic IP address with an instance or a network interface. Before you
            can use an Elastic IP address, you must allocate it to your account.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already
            associated with a different instance, it is disassociated from that instance and associated
            with the specified instance. If you associate an Elastic IP address with an instance
            that has an existing Elastic IP address, the existing address is disassociated from
            the instance, but remains allocated to your account.
            </para><para>
            [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic
            IP address is associated with the primary IP address. If the Elastic IP address is
            already associated with a different instance or a network interface, you get an error
            unless you allow reassociation. You cannot associate an Elastic IP address with an
            instance or network interface that has an existing Elastic IP address.
            </para><para>
            You cannot associate an Elastic IP address with an interface in a different network
            border group.
            </para><important><para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error, and you may be charged for each time the Elastic IP address
            is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i>
            section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.AllocationId">
            <summary>
            <para>
            <para>[EC2-VPC] The allocation ID. This is required for EC2-VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.AllowReassociation">
            <summary>
            <para>
            <para>[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP
            address that is already associated with an instance or network interface to be reassociated
            with the specified instance or network interface. Otherwise, the operation fails.
            In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can
            specify false to ensure the operation fails if the Elastic IP address is already associated
            with another resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify
            either the instance ID or the network interface ID, but not both. The operation fails
            if you specify an instance ID unless exactly one network interface is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>[EC2-VPC] The ID of the network interface. If the instance has more than one network
            interface, you must specify a network interface ID.</para><para>For EC2-VPC, you can specify either the instance ID or the network interface ID, but
            not both. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.PrivateIpAddress">
            <summary>
            <para>
            <para>[EC2-VPC] The primary or secondary private IP address to associate with the Elastic
            IP address. If no private IP address is specified, the Elastic IP address is associated
            with the primary private IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.PublicIp">
            <summary>
            <para>
            <para>The Elastic IP address to associate with the instance. This is required for EC2-Classic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateAddressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateAddressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2AddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet">
            <summary>
            Provisions an IPv4 or IPv6 address range for use with your AWS resources through bring
            your own IP addresses (BYOIP) and creates a corresponding address pool. After the
            address range is provisioned, it is ready to be advertised using <a>AdvertiseByoipCidr</a>.
            
             
            <para>
            AWS verifies that you own the address range and are authorized to advertise it. You
            must ensure that the address range is registered to you and that you created an RPKI
            ROA to authorize Amazon ASNs 16509 and 14618 to advertise the address range. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring
            Your Own IP Addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            Provisioning an address range is an asynchronous operation, so the call returns immediately,
            but the address range is not ready to use until its status changes from <code>pending-provision</code>
            to <code>provisioned</code>. To monitor the status of an address range, use <a>DescribeByoipCidrs</a>.
            To allocate an Elastic IP address from your IPv4 address pool, use <a>AllocateAddress</a>
            with either the specific address from the address pool or the ID of the address pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.Cidr">
            <summary>
            <para>
            <para>The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix
            that you can specify is /24. The most specific IPv6 prefix you can specify is /56.
            The address range cannot overlap with another address range that you've brought to
            this or another Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.Description">
            <summary>
            <para>
            <para>A description for the address range and the address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.CidrAuthorizationContext_Message">
            <summary>
            <para>
            <para>The plain-text authorization message for the prefix and account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.PoolTagSpecification">
            <summary>
            <para>
            <para>The tags to apply to the address pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.PubliclyAdvertisable">
            <summary>
            <para>
            <para>(IPv6 only) Indicate whether the address range will be publicly advertised to the
            internet.</para><para>Default: true</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.CidrAuthorizationContext_Signature">
            <summary>
            <para>
            <para>The signed authorization message for the prefix and account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ByoipCidr'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ProvisionByoipCidrResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ProvisionByoipCidrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Cidr parameter.
            The -PassThru parameter is deprecated, use -Select '^Cidr' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ByoipCidrCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet">
            <summary>
            Associates a target network with a Client VPN endpoint. A target network is a subnet
            in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint.
            You can associate only one subnet in each Availability Zone. We recommend that you
            associate at least two subnets to provide Availability Zone redundancy.
            
             
            <para>
            If you specified a VPC when you created the Client VPN endpoint or if you have previous
            subnet associations, the specified subnet must be in the same VPC. To specify a subnet
            that's in a different VPC, you must first modify the Client VPN endpoint (<a>ModifyClientVpnEndpoint</a>)
            and change the VPC that's associated with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet to associate with the Client VPN endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateClientVpnTargetNetworkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateClientVpnTargetNetworkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ClientVpnTargetNetworkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet">
            <summary>
            Associates a set of DHCP options (that you've previously created) with the specified
            VPC, or associates no DHCP options with the VPC.
            
             
            <para>
            After you associate the options with the VPC, any existing instances and all new instances
            that you launch in that VPC use the options. You don't need to restart or relaunch
            the instances. They automatically pick up the changes within a few hours, depending
            on how frequently the instance renews its DHCP lease. You can explicitly renew the
            lease using the operating system on the instance.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet.DhcpOptionsId">
            <summary>
            <para>
            <para>The ID of the DHCP options set, or <code>default</code> to associate no DHCP options
            with the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateDhcpOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2DhcpOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet">
            <summary>
            Associates an IAM instance profile with a running or stopped instance. You cannot
            associate more than one IAM instance profile with an instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.IamInstanceProfile_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.IamInstanceProfile_Name">
            <summary>
            <para>
            <para>The name of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IamInstanceProfileAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateIamInstanceProfileResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateIamInstanceProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2IamInstanceProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet">
            <summary>
            Registers an AMI. When you're creating an AMI, this is the final step you must complete
            before you can launch an instance from the AMI. For more information about creating
            AMIs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating
            Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <note><para>
            For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI
            in a single request, so you don't have to register the AMI yourself.
            </para></note><para>
            You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI
            from a snapshot of a root device volume. You specify the snapshot using the block
            device mapping. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-launch-snapshot.html">Launching
            a Linux Instance from a Backup</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            You can't register an image where a secondary (non-root) snapshot has AWS Marketplace
            product codes.
            </para><para>
            Windows and some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and
            SUSE Linux Enterprise Server (SLES), use the EC2 billing product code associated with
            an AMI to verify the subscription status for package updates. To create a new AMI
            for operating systems that require a billing product code, instead of registering
            the AMI, do the following to preserve the billing product code association:
            </para><ol><li><para>
            Launch an instance from an existing AMI with that billing product code.
            </para></li><li><para>
            Customize the instance.
            </para></li><li><para>
            Create an AMI from the instance using <a>CreateImage</a>.
            </para></li></ol><para>
            If you purchase a Reserved Instance to apply to an On-Demand Instance that was launched
            from an AMI with a billing product code, make sure that the Reserved Instance has
            the matching billing product code. If you purchase a Reserved Instance without the
            matching billing product code, the Reserved Instance will not be applied to the On-Demand
            Instance. For information about how to obtain the platform details and billing information
            of an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html">Obtaining
            Billing Information</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            If needed, you can deregister an AMI at any time. Any modifications you make to an
            AMI backed by an instance store volume invalidates its registration. If you make changes
            to an image, deregister the previous image and register the new image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.Architecture">
            <summary>
            <para>
            <para>The architecture of the AMI.</para><para>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed
            AMIs, the architecture specified in the manifest file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.BillingProduct">
            <summary>
            <para>
            <para>The billing product codes. Your account must be authorized to specify billing product
            codes. Otherwise, you can use the AWS Marketplace to bill for the use of an AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>The block device mapping entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.Description">
            <summary>
            <para>
            <para>A description for your AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.EnaSupport">
            <summary>
            <para>
            <para>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any
            instances that you launch from the AMI.</para><para>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can
            make instances launched from the AMI unreachable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.ImageLocation">
            <summary>
            <para>
            <para>The full path to your AMI manifest in Amazon S3 storage. The specified bucket must
            have the <code>aws-exec-read</code> canned access control list (ACL) to ensure that
            it can be accessed by Amazon EC2. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">Canned
            ACLs</a> in the <i>Amazon S3 Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.KernelId">
            <summary>
            <para>
            <para>The ID of the kernel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.Name">
            <summary>
            <para>
            <para>A name for your AMI.</para><para>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]),
            spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@),
            or underscores(_)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.RootDeviceName">
            <summary>
            <para>
            <para>The device name of the root device volume (for example, <code>/dev/sda1</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.SriovNetSupport">
            <summary>
            <para>
            <para>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual
            Function interface for the AMI and any instances that you launch from the AMI.</para><para>There is no way to disable <code>sriovNetSupport</code> at this time.</para><para>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can
            make instances launched from the AMI unreachable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.VirtualizationType">
            <summary>
            <para>
            <para>The type of virtualization (<code>hvm</code> | <code>paravirtual</code>).</para><para>Default: <code>paravirtual</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RegisterImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RegisterImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageLocation parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageLocation' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet">
            <summary>
            Registers a set of tag keys to include in scheduled event notifications for your resources.
            
            
             
            <para>
            To remove tags, use .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet.InstanceTagAttribute_IncludeAllTagsOfInstance">
            <summary>
            <para>
            <para>Indicates whether to register all tag keys in the current Region. Specify <code>true</code>
            to register all tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet.InstanceTagAttribute_InstanceTagKey">
            <summary>
            <para>
            <para>The tag keys to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceTagAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RegisterInstanceEventNotificationAttributesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RegisterInstanceEventNotificationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceTagAttribute_IncludeAllTagsOfInstance parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceTagAttribute_IncludeAllTagsOfInstance' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2InstanceEventNotificationAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet">
            <summary>
            Assigns one or more IPv6 addresses to the specified network interface. You can specify
            one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses
            to be automatically assigned from within the subnet's IPv6 CIDR block range. You can
            assign as many IPv6 addresses to a network interface as you can assign private IPv4
            addresses, and the limit varies per instance type. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP
            Addresses Per Network Interface Per Instance Type</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.
            
             
            <para>
            You must specify either the IPv6 addresses or the IPv6 address count in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.Ipv6AddressCount">
            <summary>
            <para>
            <para>The number of IPv6 addresses to assign to the network interface. Amazon EC2 automatically
            selects the IPv6 addresses from the subnet range. You can't use this option if specifying
            specific IPv6 addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.Ipv6Address">
            <summary>
            <para>
            <para>One or more specific IPv6 addresses to be assigned to the network interface. You can't
            use this option if you're specifying a number of IPv6 addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssignIpv6AddressesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssignIpv6AddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2Ipv6AddressListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet">
            <summary>
            Assigns one or more secondary private IP addresses to the specified network interface.
            
             
            <para>
            You can specify one or more specific secondary IP addresses, or you can specify the
            number of secondary IP addresses to be automatically assigned within the subnet's
            CIDR block range. The number of secondary IP addresses that you can assign to an instance
            varies by instance type. For information about instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information
            about Elastic IP addresses, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            When you move a secondary private IP address to another network interface, any Elastic
            IP address that is associated with the IP address is also moved.
            </para><para>
            Remapping an IP address is an asynchronous operation. When you move an IP address
            from one network interface to another, check <code>network/interfaces/macs/mac/local-ipv4s</code>
            in the instance metadata to confirm that the remapping is complete.
            </para><para>
            You must specify either the IP addresses or the IP address count in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.AllowReassignment">
            <summary>
            <para>
            <para>Indicates whether to allow an IP address that is already assigned to another network
            interface or instance to be reassigned to the specified network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.PrivateIpAddress">
            <summary>
            <para>
            <para>One or more IP addresses to be assigned as a secondary private IP address to the network
            interface. You can't specify this parameter when also specifying a number of secondary
            IP addresses.</para><para>If you don't specify an IP address, Amazon EC2 automatically selects an IP address
            within the subnet range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.SecondaryPrivateIpAddressCount">
            <summary>
            <para>
            <para>The number of secondary IP addresses to assign to the network interface. You can't
            specify this parameter when also specifying private IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssignedPrivateIpAddresses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssignPrivateIpAddressesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssignPrivateIpAddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2PrivateIpAddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet">
            <summary>
            Associates a subnet in your VPC or an internet gateway or virtual private gateway
            attached to your VPC with a route table in your VPC. This association causes traffic
            from the subnet or gateway to be routed according to the routes in the route table.
            The action returns an association ID, which you need in order to disassociate the
            route table later. A route table can be associated with multiple subnets.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of the internet gateway or virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2RouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet">
            <summary>
            Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR
            block with your subnet. An IPv6 CIDR block must have a prefix length of /64.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of your subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateSubnetCidrBlockResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateSubnetCidrBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2SubnetCidrBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet">
            <summary>
            Associates the specified subnets and transit gateway attachments with the specified
            transit gateway multicast domain.
            
             
            <para>
            The transit gateway attachment must be in the available state before you can add a
            resource. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html">DescribeTransitGatewayAttachments</a>
            to see the state of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.SubnetId">
            <summary>
            <para>
            <para>The IDs of the subnets to associate with the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the transit gateway attachment to associate with the transit gateway multicast
            domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Associations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateTransitGatewayMulticastDomainResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateTransitGatewayMulticastDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet">
            <summary>
            Registers members (network interfaces) with the transit gateway multicast group. A
            member is a network interface associated with a supported EC2 instance that receives
            multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast
            Consideration</a> in <i>Amazon VPC Transit Gateways</i>.
            
             
            <para>
            After you add the members, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a>
            to verify that the members were added to the transit gateway multicast group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.GroupIpAddress">
            <summary>
            <para>
            <para>The IP address assigned to the transit gateway multicast group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The group members' network interface IDs to register with the transit gateway multicast
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RegisteredMulticastGroupMembers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupMembersResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet">
            <summary>
            Registers sources (network interfaces) with the specified transit gateway multicast
            group.
            
             
            <para>
            A multicast source is a network interface attached to a supported instance that sends
            multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast
            Considerations</a> in <i>Amazon VPC Transit Gateways</i>.
            </para><para>
            After you add the source, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a>
            to verify that the source was added to the multicast group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.GroupIpAddress">
            <summary>
            <para>
            <para>The IP address assigned to the transit gateway multicast group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The group sources' network interface IDs to register with the transit gateway multicast
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RegisteredMulticastGroupSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupSourcesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RegisterTransitGatewayMulticastGroupSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayMulticastGroupSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet">
            <summary>
            Associates the specified attachment with the specified transit gateway route table.
            You can associate only one route table with an attachment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Association'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateTransitGatewayRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateTransitGatewayRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2TransitGatewayRouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet">
            <summary>
            Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block,
            an Amazon-provided IPv6 CIDR block, or an IPv6 CIDR block from an IPv6 address pool
            that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>).
            The IPv6 CIDR block size is fixed at /56.
            
             
            <para>
            You must specify one of the following in the request: an IPv4 CIDR block, an IPv6
            pool, or an Amazon-provided IPv6 CIDR block.
            </para><para>
            For more information about associating CIDR blocks with your VPC and applicable restrictions,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing">VPC
            and Subnet Sizing</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.AmazonProvidedIpv6CidrBlock">
            <summary>
            <para>
            <para>Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC.
            You cannot specify the range of IPv6 addresses, or the size of the CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.CidrBlock">
            <summary>
            <para>
            <para>An IPv4 CIDR block to associate with the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>An IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code>
            in the request.</para><para>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.Ipv6CidrBlockNetworkBorderGroup">
            <summary>
            <para>
            <para>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter
            to limit the CiDR block to this location.</para><para> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use
            this parameter.</para><para> You can have one IPv6 CIDR block association per network border group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.Ipv6Pool">
            <summary>
            <para>
            <para>The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AssociateVpcCidrBlockResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AssociateVpcCidrBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RegisterEC2VpcCidrBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet">
            <summary>
            Releases the specified Elastic IP address.
            
             
            <para>
            [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates
            it from any instance that it's associated with. To disassociate an Elastic IP address
            without releasing it, use <a>DisassociateAddress</a>.
            </para><para>
            [Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic
            IP address before you can release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
            </para><para>
            After releasing an Elastic IP address, it is released to the IP address pool. Be sure
            to update your DNS records and any servers or devices that communicate with the address.
            If you attempt to release an Elastic IP address that you already released, you'll
            get an <code>AuthFailure</code> error if the address is already allocated to another
            AWS account.
            </para><para>
            [EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able
            to recover it. For more information, see <a>AllocateAddress</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.AllocationId">
            <summary>
            <para>
            <para>[EC2-VPC] The allocation ID. Required for EC2-VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.NetworkBorderGroup">
            <summary>
            <para>
            <para>The location that the IP address is released from.</para><para>If you provide an incorrect network border group, you will receive an <code>InvalidAddress.NotFound</code>
            error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error
            Codes</a>.</para><note><para>You cannot use a network border group with EC2 Classic. If you attempt this operation
            on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error
            Codes</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.PublicIp">
            <summary>
            <para>
            <para>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReleaseAddressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2AddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CapacityReservationCmdlet">
            <summary>
            Cancels the specified Capacity Reservation, releases the reserved capacity, and changes
            the Capacity Reservation's state to <code>cancelled</code>.
            
             
            <para>
            Instances running in the reserved capacity continue running until you stop them. Stopped
            instances that target the Capacity Reservation can no longer launch. Modify these
            instances to either target a different Capacity Reservation, launch On-Demand Instance
            capacity, or run in any open Capacity Reservation that has matching attributes and
            sufficient capacity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CapacityReservationCmdlet.CapacityReservationId">
            <summary>
            <para>
            <para>The ID of the Capacity Reservation to be cancelled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CapacityReservationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelCapacityReservationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelCapacityReservationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CapacityReservationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CapacityReservationId parameter.
            The -PassThru parameter is deprecated, use -Select '^CapacityReservationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CapacityReservationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnEndpointCmdlet">
            <summary>
            Deletes the specified Client VPN endpoint. You must disassociate all target networks
            before you can delete a Client VPN endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnEndpointCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteClientVpnEndpointResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteClientVpnEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet">
            <summary>
            Deletes a route from a Client VPN endpoint. You can only delete routes that you manually
            added using the <b>CreateClientVpnRoute</b> action. You cannot delete routes that
            were automatically added when associating a subnet. To remove routes that have been
            automatically added, disassociate the target subnet from the Client VPN endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint from which the route is to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, of the route to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.TargetVpcSubnetId">
            <summary>
            <para>
            <para>The ID of the target subnet used by the route.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteClientVpnRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteClientVpnRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2ClientVpnRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CustomerGatewayCmdlet">
            <summary>
            Deletes the specified customer gateway. You must delete the VPN connection before
            you can delete the customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CustomerGatewayCmdlet.CustomerGatewayId">
            <summary>
            <para>
            <para>The ID of the customer gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CustomerGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteCustomerGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CustomerGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomerGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomerGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2CustomerGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2DhcpOptionCmdlet">
            <summary>
            Deletes the specified set of DHCP options. You must disassociate the set of DHCP options
            before you can delete it. You can disassociate the set of DHCP options by associating
            either a new set of options or the default set of options with the VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2DhcpOptionCmdlet.DhcpOptionsId">
            <summary>
            <para>
            <para>The ID of the DHCP options set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2DhcpOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteDhcpOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2DhcpOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DhcpOptionsId parameter.
            The -PassThru parameter is deprecated, use -Select '^DhcpOptionsId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2DhcpOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EgressOnlyInternetGatewayCmdlet">
            <summary>
            Deletes an egress-only internet gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EgressOnlyInternetGatewayCmdlet.EgressOnlyInternetGatewayId">
            <summary>
            <para>
            <para>The ID of the egress-only internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EgressOnlyInternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnCode'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteEgressOnlyInternetGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteEgressOnlyInternetGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EgressOnlyInternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointConnectionNotificationCmdlet">
            <summary>
            Deletes one or more VPC endpoint connection notifications.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointConnectionNotificationCmdlet.ConnectionNotificationId">
            <summary>
            <para>
            <para>One or more notification IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointConnectionNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpcEndpointConnectionNotificationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteVpcEndpointConnectionNotificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointConnectionNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionNotificationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionNotificationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointConnectionNotificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointServiceConfigurationCmdlet">
            <summary>
            Deletes one or more VPC endpoint service configurations in your account. Before you
            delete the endpoint service configuration, you must reject any <code>Available</code>
            or <code>PendingAcceptance</code> interface endpoint connections that are attached
            to the service.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointServiceConfigurationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The IDs of one or more services.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointServiceConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpcEndpointServiceConfigurationsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteVpcEndpointServiceConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointServiceConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2EndpointServiceConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet">
            <summary>
            Deletes the specified EC2 Fleet.
            
             
            <para>
            After you delete an EC2 Fleet, it launches no new instances. You must specify whether
            an EC2 Fleet should also terminate its instances. If you terminate the instances,
            the EC2 Fleet enters the <code>deleted_terminating</code> state. Otherwise, the EC2
            Fleet enters the <code>deleted_running</code> state, and the instances continue to
            run until they are interrupted or you terminate them manually. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet.FleetId">
            <summary>
            <para>
            <para>The IDs of the EC2 Fleets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet.TerminateInstance">
            <summary>
            <para>
            <para>Indicates whether to terminate instances for an EC2 Fleet if it is deleted successfully.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteFleetsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteFleetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FlowLogCmdlet">
            <summary>
            Deletes one or more flow logs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FlowLogCmdlet.FlowLogId">
            <summary>
            <para>
            <para>One or more flow log IDs.</para><para>Constraint: Maximum of 1000 flow log IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FlowLogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteFlowLogsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteFlowLogsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FlowLogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FlowLogId parameter.
            The -PassThru parameter is deprecated, use -Select '^FlowLogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FlowLogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FpgaImageCmdlet">
            <summary>
            Deletes the specified Amazon FPGA Image (AFI).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FpgaImageCmdlet.FpgaImageId">
            <summary>
            <para>
            <para>The ID of the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FpgaImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteFpgaImageResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteFpgaImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FpgaImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FpgaImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^FpgaImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2FpgaImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2HostCmdlet">
            <summary>
            When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand
            billing is stopped and the host goes into <code>released</code> state. The host ID
            of Dedicated Hosts that have been released can no longer be specified in another request,
            for example, to modify the host. You must stop or terminate all instances on a host
            before it can be released.
            
             
            <para>
            When Dedicated Hosts are released, it may take some time for them to stop counting
            toward your limit and you may receive capacity errors when trying to allocate new
            Dedicated Hosts. Wait a few minutes and then try again.
            </para><para>
            Released hosts still appear in a <a>DescribeHosts</a> response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2HostCmdlet.HostId">
            <summary>
            <para>
            <para>The IDs of the Dedicated Hosts to release.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2HostCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReleaseHostsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ReleaseHostsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2HostCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2HostCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InstanceCmdlet">
            <summary>
            Shuts down the specified instances. This operation is idempotent; if you terminate
            an instance more than once, each call succeeds. 
            
             
            <para>
            If you specify multiple instances and the request fails (for example, because of a
            single incorrect instance ID), none of the instances are terminated.
            </para><para>
            Terminated instances remain visible after termination (for approximately one hour).
            </para><para>
            By default, Amazon EC2 deletes all EBS volumes that were attached when the instance
            launched. Volumes attached after instance launch continue running.
            </para><para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, any attached EBS
            volumes with the <code>DeleteOnTermination</code> block device mapping parameter set
            to <code>true</code> are automatically deleted. For more information about the differences
            between stopping and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting
            Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances.</para><para>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller
            batches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TerminatingInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.TerminateInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.TerminateInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InternetGatewayCmdlet">
            <summary>
            Deletes the specified internet gateway. You must detach the internet gateway from
            the VPC before you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InternetGatewayCmdlet.InternetGatewayId">
            <summary>
            <para>
            <para>The ID of the internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InternetGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteInternetGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InternetGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InternetGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^InternetGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2InternetGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet">
            <summary>
            Deletes the specified key pair, by removing the public key from Amazon EC2.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet.KeyName">
            <summary>
            <para>
            <para>The name of the key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet.KeyPairId">
            <summary>
            <para>
            <para>The ID of the key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteKeyPairResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2KeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LaunchTemplateCmdlet">
            <summary>
            Deletes a launch template. Deleting a launch template deletes all of its versions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LaunchTemplateCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. You must specify either the launch template ID or launch
            template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LaunchTemplateCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. You must specify either the launch template ID or
            launch template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LaunchTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteLaunchTemplateResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteLaunchTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LaunchTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet">
            <summary>
            Deletes the specified route from the specified local gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR range for the route. This must match the CIDR for the route exactly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet.LocalGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the local gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Route'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteLocalGatewayRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteLocalGatewayRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LocalGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^LocalGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteTableVpcAssociationCmdlet">
            <summary>
            Deletes the specified association between a VPC and local gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteTableVpcAssociationCmdlet.LocalGatewayRouteTableVpcAssociationId">
            <summary>
            <para>
            <para>The ID of the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteTableVpcAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LocalGatewayRouteTableVpcAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteLocalGatewayRouteTableVpcAssociationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteLocalGatewayRouteTableVpcAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteTableVpcAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LocalGatewayRouteTableVpcAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^LocalGatewayRouteTableVpcAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2LocalGatewayRouteTableVpcAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NatGatewayCmdlet">
            <summary>
            Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic
            IP address, but does not release the address from your account. Deleting a NAT gateway
            does not delete any NAT gateway routes in your route tables.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NatGatewayCmdlet.NatGatewayId">
            <summary>
            <para>
            <para>The ID of the NAT gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NatGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NatGatewayId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteNatGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteNatGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NatGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NatGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^NatGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NatGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclCmdlet">
            <summary>
            Deletes the specified network ACL. You can't delete the ACL if it's associated with
            any subnets. You can't delete the default network ACL.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>The ID of the network ACL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteNetworkAclResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkAclId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkAclId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet">
            <summary>
            Deletes the specified ingress or egress entry (rule) from the specified network ACL.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.Egress">
            <summary>
            <para>
            <para>Indicates whether the rule is an egress rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>The ID of the network ACL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.RuleNumber">
            <summary>
            <para>
            <para>The rule number of the entry to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteNetworkAclEntryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkAclId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkAclId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkAclEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfaceCmdlet">
            <summary>
            Deletes the specified network interface. You must detach the network interface before
            you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfaceCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteNetworkInterfaceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet">
            <summary>
            Deletes a permission for a network interface. By default, you cannot delete the permission
            if the account for which you're removing the permission has attached the network interface
            to an instance. However, you can force delete the permission, regardless of any attachment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet.IgnoreAttachedStatus">
            <summary>
            <para>
            <para>Specify <code>true</code> to remove the permission even if the network interface is
            attached to an instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet.NetworkInterfacePermissionId">
            <summary>
            <para>
            <para>The ID of the network interface permission.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteNetworkInterfacePermissionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteNetworkInterfacePermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfacePermissionId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfacePermissionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2NetworkInterfacePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2PlacementGroupCmdlet">
            <summary>
            Deletes the specified placement group. You must terminate all instances in the placement
            group before you can delete the placement group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2PlacementGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the placement group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2PlacementGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeletePlacementGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2PlacementGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2PlacementGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2QueuedReservedInstanceCmdlet">
            <summary>
            Deletes the queued purchases for the specified Reserved Instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2QueuedReservedInstanceCmdlet.ReservedInstancesId">
            <summary>
            <para>
            <para>The IDs of the Reserved Instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2QueuedReservedInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteQueuedReservedInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteQueuedReservedInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2QueuedReservedInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2QueuedReservedInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet">
            <summary>
            Deletes the specified route from the specified route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The IPv4 CIDR range for the route. The value you specify must match the CIDR for the
            route exactly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.DestinationIpv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 CIDR range for the route. The value you specify must match the CIDR for the
            route exactly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteRouteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteTableCmdlet">
            <summary>
            Deletes the specified route table. You must disassociate the route table from any
            subnets before you can delete it. You can't delete the main route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteTableCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteRouteTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2RouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet">
            <summary>
            Deletes a security group.
            
             
            <para>
            If you attempt to delete a security group that is associated with an instance, or
            is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code>
            in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group. Required for a nondefault VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>[EC2-Classic, default VPC] The name of the security group. You can specify either
            the security group name or the security group ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteSecurityGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SnapshotCmdlet">
            <summary>
            Deletes the specified snapshot.
            
             
            <para>
            When you make periodic snapshots of a volume, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the volume.
            </para><para>
            You cannot delete a snapshot of the root device of an EBS volume used by a registered
            AMI. You must first de-register the AMI before you can delete the snapshot.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the EBS snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteSnapshotResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SpotDatafeedSubscriptionCmdlet">
            <summary>
            Deletes the data feed for Spot Instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SpotDatafeedSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SpotDatafeedSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SubnetCmdlet">
            <summary>
            Deletes the specified subnet. You must terminate all running instances in the subnet
            before you can delete the subnet.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SubnetCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SubnetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteSubnetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SubnetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubnetId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubnetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2SubnetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet">
            <summary>
            Deletes the specified set of tags from the specified set of resources.
            
             
            <para>
            To list the current tags, use <a>DescribeTags</a>. For more information about tags,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet.Resource">
            <summary>
            <para>
            <para>The IDs of the resources, separated by spaces.</para><para>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller
            batches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to delete. Specify a tag key and an optional tag value to delete specific
            tags. If you specify a tag key without a tag value, we delete any tag with this key
            regardless of its value. If you specify a tag key with an empty string as the tag
            value, we delete the tag only if its value is an empty string.</para><para>If you omit this parameter, we delete all user-defined tags for the specified resources.
            We do not delete AWS-generated tags (tags that have the <code>aws:</code> prefix).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet.PassThru">
            <summary>
            Returns the collection of Tag objects that were deleted
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet">
            <summary>
            Deletes one or more versions of a launch template. You cannot delete the default version
            of a launch template; you must first assign a different version as the default. If
            the default version is the only version for the launch template, you must delete the
            entire launch template using <a>DeleteLaunchTemplate</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet.LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. You must specify either the launch template ID or launch
            template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet.LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. You must specify either the launch template ID or
            launch template name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet.Version">
            <summary>
            <para>
            <para>The version numbers of one or more launch template versions to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteLaunchTemplateVersionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteLaunchTemplateVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TemplateVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterCmdlet">
            <summary>
            Deletes the specified Traffic Mirror filter.
            
             
            <para>
            You cannot delete a Traffic Mirror filter that is in use by a Traffic Mirror session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterCmdlet.TrafficMirrorFilterId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilterId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTrafficMirrorFilterResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTrafficMirrorFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterRuleCmdlet">
            <summary>
            Deletes the specified Traffic Mirror rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterRuleCmdlet.TrafficMirrorFilterRuleId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorFilterRuleId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTrafficMirrorFilterRuleResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTrafficMirrorFilterRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorFilterRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorFilterRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorFilterRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorSessionCmdlet">
            <summary>
            Deletes the specified Traffic Mirror session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorSessionCmdlet.TrafficMirrorSessionId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorSessionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTrafficMirrorSessionResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTrafficMirrorSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorTargetCmdlet">
            <summary>
            Deletes the specified Traffic Mirror target.
            
             
            <para>
            You cannot delete a Traffic Mirror target that is in use by a Traffic Mirror session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorTargetCmdlet.TrafficMirrorTargetId">
            <summary>
            <para>
            <para>The ID of the Traffic Mirror target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficMirrorTargetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTrafficMirrorTargetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTrafficMirrorTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficMirrorTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficMirrorTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TrafficMirrorTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayCmdlet">
            <summary>
            Deletes the specified transit gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of the transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayMulticastDomainCmdlet">
            <summary>
            Deletes the specified transit gateway multicast domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayMulticastDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayMulticastDomain'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayMulticastDomainResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayMulticastDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayMulticastDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayMulticastDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayPeeringAttachmentCmdlet">
            <summary>
            Deletes a transit gateway peering attachment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayPeeringAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the transit gateway peering attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayPeeringAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayPeeringAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayPeeringAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayPeeringAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayPeeringAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayPeeringAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet">
            <summary>
            Deletes the specified route from the specified transit gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR range for the route. This must match the CIDR for the route exactly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Route'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteTableCmdlet">
            <summary>
            Deletes the specified transit gateway route table. You must disassociate the route
            table from any transit gateway route tables before you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteTableCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayRouteTable'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayRouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayVpcAttachmentCmdlet">
            <summary>
            Deletes the specified VPC attachment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayVpcAttachmentCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayVpcAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransitGatewayVpcAttachment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteTransitGatewayVpcAttachmentResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteTransitGatewayVpcAttachmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayVpcAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2TransitGatewayVpcAttachmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VolumeCmdlet">
            <summary>
            Deletes the specified EBS volume. The volume must be in the <code>available</code>
            state (not attached to an instance).
            
             
            <para>
            The volume can remain in the <code>deleting</code> state for several minutes.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VolumeCmdlet.VolumeId">
            <summary>
            <para>
            <para>The ID of the volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VolumeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVolumeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VolumeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeId parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VolumeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcCmdlet">
            <summary>
            Deletes the specified VPC. You must detach or delete all gateways and resources that
            are associated with the VPC before you can delete it. For example, you must terminate
            all instances running in the VPC, delete all security groups associated with the VPC
            (except the default one), delete all route tables associated with the VPC (except
            the default one), and so on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcCmdlet.VpcId">
            <summary>
            <para>
            <para>The ID of the VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpcResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcEndpointCmdlet">
            <summary>
            Deletes one or more specified VPC endpoints. Deleting a gateway endpoint also deletes
            the endpoint routes in the route tables that were associated with the endpoint. Deleting
            an interface endpoint deletes the endpoint network interfaces.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcEndpointCmdlet.VpcEndpointId">
            <summary>
            <para>
            <para>One or more VPC endpoint IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Unsuccessful'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpcEndpointsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeleteVpcEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcPeeringConnectionCmdlet">
            <summary>
            Deletes a VPC peering connection. Either the owner of the requester VPC or the owner
            of the accepter VPC can delete the VPC peering connection if it's in the <code>active</code>
            state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code>
            state. You cannot delete a VPC peering connection that's in the <code>failed</code>
            state.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcPeeringConnectionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of the VPC peering connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpcPeeringConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpcPeeringConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpcPeeringConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionCmdlet">
            <summary>
            Deletes the specified VPN connection.
            
             
            <para>
            If you're deleting the VPC and its associated components, we recommend that you detach
            the virtual private gateway from the VPC and delete the VPC before deleting the VPN
            connection. If you believe that the tunnel credentials for your VPN connection have
            been compromised, you can delete the VPN connection and create a new one that has
            new keys, without needing to delete the VPC or virtual private gateway. If you create
            a new VPN connection, you must reconfigure the customer gateway device using the new
            configuration information returned with the new VPN connection ID.
            </para><para>
            For certificate-based authentication, delete all AWS Certificate Manager (ACM) private
            certificates used for the AWS-side tunnel endpoints for the VPN connection before
            deleting the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpnConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet">
            <summary>
            Deletes the specified static route associated with a VPN connection between an existing
            virtual private gateway and a VPN customer gateway. The static route allows traffic
            to be routed from the virtual private gateway to the VPN customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR block associated with the local subnet of the customer network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet.VpnConnectionId">
            <summary>
            <para>
            <para>The ID of the VPN connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpnConnectionRouteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnConnectionRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnGatewayCmdlet">
            <summary>
            Deletes the specified virtual private gateway. You must first detach the virtual private
            gateway from the VPC. Note that you don't need to delete the virtual private gateway
            if you plan to delete and recreate the VPN connection between your VPC and your network.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnGatewayCmdlet.VpnGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeleteVpnGatewayResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpnGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^VpnGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RemoveEC2VpnGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet">
            <summary>
            Creates a Spot Fleet request.
            
             
            <para>
            The Spot Fleet request specifies the total target capacity and the On-Demand target
            capacity. Amazon EC2 calculates the difference between the total capacity and On-Demand
            capacity, and launches the difference as Spot capacity.
            </para><para>
            You can submit a single request that includes multiple launch specifications that
            vary by instance type, AMI, Availability Zone, or subnet.
            </para><para>
            By default, the Spot Fleet requests Spot Instances in the Spot Instance pool where
            the price per unit is the lowest. Each launch specification can include its own instance
            weighting that reflects the value of the instance type to your application workload.
            </para><para>
            Alternatively, you can specify that the Spot Fleet distribute the target capacity
            across the Spot pools included in its launch specifications. By ensuring that the
            Spot Instances in your Spot Fleet are in different Spot pools, you can improve the
            availability of your fleet.
            </para><para>
            You can specify tags for the Spot Fleet request and instances launched by the fleet.
            You cannot tag other resource types in a Spot Fleet request because only the <code>spot-fleet-request</code>
            and <code>instance</code> resource types are supported.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot
            Fleet Requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_AllocationStrategy">
            <summary>
            <para>
            <para>Indicates how to allocate the target Spot Instance capacity across the Spot Instance
            pools specified by the Spot Fleet request.</para><para>If the allocation strategy is <code>lowestPrice</code>, Spot Fleet launches instances
            from the Spot Instance pools with the lowest price. This is the default allocation
            strategy.</para><para>If the allocation strategy is <code>diversified</code>, Spot Fleet launches instances
            from all the Spot Instance pools that you specify.</para><para>If the allocation strategy is <code>capacityOptimized</code>, Spot Fleet launches
            instances from Spot Instance pools with optimal capacity for the number of instances
            that are launching.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.ClassicLoadBalancersConfig_ClassicLoadBalancer">
            <summary>
            <para>
            <para>One or more Classic Load Balancers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            your listings. This helps to avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_ExcessCapacityTerminationPolicy">
            <summary>
            <para>
            <para>Indicates whether running Spot Instances should be terminated if you decrease the
            target capacity of the Spot Fleet request below the current size of the Spot Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_FulfilledCapacity">
            <summary>
            <para>
            <para>The number of units fulfilled by this request compared to the set target capacity.
            You cannot set this value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_IamFleetRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that grants the Spot Fleet the permission to request, launch, terminate, and tag instances
            on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites">Spot
            Fleet Prerequisites</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>. Spot
            Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request
            using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests">CancelSpotFleetRequests</a>
            or when the Spot Fleet request expires, if you set <code>TerminateInstancesWithExpiration</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_InstanceInterruptionBehavior">
            <summary>
            <para>
            <para>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_InstancePoolsToUseCount">
            <summary>
            <para>
            <para>The number of Spot pools across which to allocate your target Spot capacity. Valid
            only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. Spot
            Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity
            across the number of Spot pools that you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_LaunchSpecification">
            <summary>
            <para>
            <para>The launch specifications for the Spot Fleet request. If you specify <code>LaunchSpecifications</code>,
            you can't specify <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity
            in your request, you must use <code>LaunchTemplateConfigs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_LaunchTemplateConfig">
            <summary>
            <para>
            <para>The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>,
            you can't specify <code>LaunchSpecifications</code>. If you include On-Demand capacity
            in your request, you must use <code>LaunchTemplateConfigs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_OnDemandAllocationStrategy">
            <summary>
            <para>
            <para>The order of the launch template overrides to use in fulfilling On-Demand capacity.
            If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order,
            launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet
            uses the priority that you assign to each Spot Fleet launch template override, launching
            the highest priority first. If you do not specify a value, Spot Fleet defaults to
            <code>lowestPrice</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_OnDemandFulfilledCapacity">
            <summary>
            <para>
            <para>The number of On-Demand units fulfilled by this request compared to the set target
            On-Demand capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_OnDemandMaxTotalPrice">
            <summary>
            <para>
            <para>The maximum amount per hour for On-Demand Instances that you're willing to pay. You
            can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code>
            parameter, or both parameters to ensure that your fleet cost does not exceed your
            budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances
            in your request, Spot Fleet will launch instances until it reaches the maximum amount
            you're willing to pay. When the maximum amount you're willing to pay is reached, the
            fleet stops launching instances even if it hasn’t met the target capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_OnDemandTargetCapacity">
            <summary>
            <para>
            <para>The number of On-Demand units to request. You can choose to set the target capacity
            in terms of instances or a performance characteristic that is important to your application
            workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>,
            you can specify a target capacity of 0 and add capacity later.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_ReplaceUnhealthyInstance">
            <summary>
            <para>
            <para>Indicates whether Spot Fleet should replace unhealthy instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_SpotMaxTotalPrice">
            <summary>
            <para>
            <para>The maximum amount per hour for Spot Instances that you're willing to pay. You can
            use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code>
            parameter, or both parameters to ensure that your fleet cost does not exceed your
            budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances
            in your request, Spot Fleet will launch instances until it reaches the maximum amount
            you're willing to pay. When the maximum amount you're willing to pay is reached, the
            fleet stops launching instances even if it hasn’t met the target capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_SpotPrice">
            <summary>
            <para>
            <para>The maximum price per unit hour that you are willing to pay for a Spot Instance. The
            default is the On-Demand price.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_TagSpecification">
            <summary>
            <para>
            <para>The key-value pair for tagging the Spot Fleet request on creation. The value for <code>ResourceType</code>
            must be <code>spot-fleet-request</code>, otherwise the Spot Fleet request fails. To
            tag instances at launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch
            template</a> (valid only if you use <code>LaunchTemplateConfigs</code>) or in the
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html"><code>SpotFleetTagSpecification</code></a> (valid only if you use <code>LaunchSpecifications</code>).
            For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging
            Your Resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_TargetCapacity">
            <summary>
            <para>
            <para>The number of units to request for the Spot Fleet. You can choose to set the target
            capacity in terms of instances or a performance characteristic that is important to
            your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>,
            you can specify a target capacity of 0 and add capacity later.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.TargetGroupsConfig_TargetGroup">
            <summary>
            <para>
            <para>One or more target groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_TerminateInstancesWithExpiration">
            <summary>
            <para>
            <para>Indicates whether running Spot Instances are terminated when the Spot Fleet request
            expires.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_Type">
            <summary>
            <para>
            <para>The type of request. Indicates whether the Spot Fleet only requests the target capacity
            or also attempts to maintain it. When this value is <code>request</code>, the Spot
            Fleet only places the required requests. It does not attempt to replenish Spot Instances
            if capacity is diminished, nor does it submit requests in alternative Spot pools if
            capacity is not available. When this value is <code>maintain</code>, the Spot Fleet
            maintains the target capacity. The Spot Fleet places the required requests to meet
            capacity and automatically replenishes any interrupted instances. Default: <code>maintain</code>.
            <code>instant</code> is listed but is not used by Spot Fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_UtcValidFrom">
            <summary>
            <para>
            <para>The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            By default, Amazon EC2 starts fulfilling the request immediately.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_UtcValidUntil">
            <summary>
            <para>
            <para>The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            After the end date and time, no new Spot Instance requests are placed or able to fulfill
            the request. If no value is specified, the Spot Fleet request remains until you cancel
            it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_ValidFrom">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or
            ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidFrom
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            By default, Amazon EC2 starts fulfilling the request immediately.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.SpotFleetRequestConfig_ValidUntil">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or
            ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidUntil
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            After the end date and time, no new Spot Instance requests are placed or able to fulfill
            the request. If no value is specified, the Spot Fleet request remains until you cancel
            it.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RequestSpotFleetResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RequestSpotFleetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestConfig_SpotPrice parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestConfig_SpotPrice' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotFleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet">
            <summary>
            Creates a Spot Instance request.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_AddressingType">
            <summary>
            <para>
            <para>Deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_AllSecurityGroup">
            <summary>
            <para>
            <para>One or more security groups. When requesting instances in a VPC, you must specify
            the IDs of the security groups. When requesting instances in EC2-Classic, you can
            specify the names or the IDs of the security groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.IamInstanceProfile_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Placement_AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone.</para><para>[Spot Fleet only] To specify multiple Availability Zones, separate them using commas;
            for example, "us-west-2a, us-west-2b".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.AvailabilityZoneGroup">
            <summary>
            <para>
            <para>The user-specified name for a logical grouping of requests.</para><para>When you specify an Availability Zone group in a Spot Instance request, all Spot Instances
            in the request are launched in the same Availability Zone. Instance proximity is maintained
            with this parameter, but the choice of Availability Zone is not. The group applies
            only to requests for Spot Instances of the same instance type. Any additional Spot
            Instance requests that are specified with the same Availability Zone group name are
            launched in that same Availability Zone, as long as at least one instance from the
            group is still active.</para><para>If there is no active instance running in the Availability Zone group that you specify
            for a new Spot Instance request (all instances are terminated, the request is expired,
            or the maximum price you specified falls below current Spot price), then Amazon EC2
            launches the instance in any Availability Zone where the constraint can be met. Consequently,
            the subsequent set of Spot Instances could be placed in a different zone from the
            original request, even if you specified the same Availability Zone group.</para><para>Default: Instances are launched in any available Availability Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_BlockDeviceMapping">
            <summary>
            <para>
            <para>One or more block device mapping entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.BlockDurationMinute">
            <summary>
            <para>
            <para>The required duration for the Spot Instances (also known as Spot blocks), in minutes.
            This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</para><para>The duration period starts as soon as your Spot Instance receives its instance ID.
            At the end of the duration period, Amazon EC2 marks the Spot Instance for termination
            and provides a Spot Instance termination notice, which gives the instance a two-minute
            warning before it terminates.</para><para>You can't specify an Availability Zone group or a launch group if you specify a duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_EbsOptimized">
            <summary>
            <para>
            <para>Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Placement_GroupName">
            <summary>
            <para>
            <para>The name of the placement group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_ImageId">
            <summary>
            <para>
            <para>The ID of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.InstanceCount">
            <summary>
            <para>
            <para>The maximum number of Spot Instances to launch.</para><para>Default: 1</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.InstanceInterruptionBehavior">
            <summary>
            <para>
            <para>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_InstanceType">
            <summary>
            <para>
            <para>The instance type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_KernelId">
            <summary>
            <para>
            <para>The ID of the kernel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_KeyName">
            <summary>
            <para>
            <para>The name of the key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchGroup">
            <summary>
            <para>
            <para>The instance launch group. Launch groups are Spot Instances that launch together and
            terminate together.</para><para>Default: Instances are launched and terminated individually</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_MonitoringEnabled">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.IamInstanceProfile_Name">
            <summary>
            <para>
            <para>The name of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_NetworkInterface">
            <summary>
            <para>
            <para>One or more network interfaces. If you specify a network interface, you must specify
            subnet IDs and security group IDs using the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_SecurityGroup">
            <summary>
            <para>
            <para>One or more security group names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.SpotPrice">
            <summary>
            <para>
            <para>The maximum price per hour that you are willing to pay for a Spot Instance. The default
            is the On-Demand price.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet in which to launch the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Placement_Tenancy">
            <summary>
            <para>
            <para>The tenancy of the instance (if the instance is running in a VPC). An instance with
            a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code>
            tenancy is not supported for Spot Instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Type">
            <summary>
            <para>
            <para>The Spot Instance request type.</para><para>Default: <code>one-time</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.LaunchSpecification_UserData">
            <summary>
            <para>
            <para>The Base64-encoded user data for the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.UtcValidFrom">
            <summary>
            <para>
            <para>The start date of the request. If this is a one-time request, the request becomes
            active at this date and time and remains active until all instances launch, the request
            expires, or the request is canceled. If the request is persistent, the request becomes
            active at this date and time and remains active until it expires or is canceled.</para><para>The specified start date and time cannot be equal to the current date and time. You
            must specify a start date and time that occurs after the current date and time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.UtcValidUntil">
            <summary>
            <para>
            <para>The end date of the request. If this is a one-time request, the request remains active
            until all instances launch, the request is canceled, or this date is reached. If the
            request is persistent, it remains active until it is canceled or this date is reached.
            The default end date is 7 days from the current date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.ValidFrom">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidFromUtc instead. Setting either ValidFrom or
            ValidFromUtc results in both ValidFrom and ValidFromUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidFrom
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The start date of the request. If this is a one-time request, the request becomes
            active at this date and time and remains active until all instances launch, the request
            expires, or the request is canceled. If the request is persistent, the request becomes
            active at this date and time and remains active until it expires or is canceled.</para><para>The specified start date and time cannot be equal to the current date and time. You
            must specify a start date and time that occurs after the current date and time.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.ValidUntil">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ValidUntilUtc instead. Setting either ValidUntil or
            ValidUntilUtc results in both ValidUntil and ValidUntilUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. ValidUntil
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The end date of the request. If this is a one-time request, the request remains active
            until all instances launch, the request is canceled, or this date is reached. If the
            request is persistent, it remains active until it is canceled or this date is reached.
            The default end date is 7 days from the current date.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SpotInstanceRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RequestSpotInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RequestSpotInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotPrice parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotPrice' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RequestEC2SpotInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2EbsDefaultKmsKeyIdCmdlet">
            <summary>
            Resets the default customer master key (CMK) for EBS encryption for your account in
            this Region to the AWS managed CMK for EBS.
            
             
            <para>
            After resetting the default CMK to the AWS managed CMK, you can continue to encrypt
            by a customer managed CMK by specifying it when you create the volume. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2EbsDefaultKmsKeyIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KmsKeyId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetEbsDefaultKmsKeyIdResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ResetEbsDefaultKmsKeyIdResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2EbsDefaultKmsKeyIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet">
            <summary>
            Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default
            value. You can only reset the load permission attribute.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet.FpgaImageId">
            <summary>
            <para>
            <para>The ID of the AFI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetFpgaImageAttributeResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ResetFpgaImageAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Attribute parameter.
            The -PassThru parameter is deprecated, use -Select '^Attribute' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2FpgaImageAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet">
            <summary>
            Resets an attribute of an AMI to its default value.
            
             <note><para>
            The productCodes attribute can't be reset.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute to reset (currently you can only reset the launch permission attribute).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetImageAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2ImageAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet">
            <summary>
            Resets an attribute of an instance to its default value. To reset the <code>kernel</code>
            or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>,
            the instance can be either running or stopped.
            
             
            <para>
            The <code>sourceDestCheck</code> attribute controls whether source/destination checking
            is enabled. The default value is <code>true</code>, which means checking is enabled.
            This value must be <code>false</code> for a NAT instance to perform NAT. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute to reset.</para><important><para>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code>
            | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetInstanceAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2InstanceAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet">
            <summary>
            Resets a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet.SourceDestCheck">
            <summary>
            <para>
            <para>The source/destination checking attribute. Resets the value to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2NetworkInterfaceAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet">
            <summary>
            Resets permission settings for the specified snapshot.
            
             
            <para>
            For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The attribute to reset. Currently, only the attribute for permission to create volumes
            can be reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ResetSnapshotAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.ResetEC2SnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RestartEC2InstanceCmdlet">
            <summary>
            Requests a reboot of the specified instances. This operation is asynchronous; it only
            queues a request to reboot the specified instances. The operation succeeds if the
            instances are valid and belong to you. Requests to reboot terminated instances are
            ignored.
            
             
            <para>
            If an instance does not cleanly shut down within four minutes, Amazon EC2 performs
            a hard reboot.
            </para><para>
            For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting
            Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestartEC2InstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestartEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RebootInstancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestartEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestartEC2InstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RestoreEC2AddressToClassicCmdlet">
            <summary>
            Restores an Elastic IP address that was previously moved to the EC2-VPC platform back
            to the EC2-Classic platform. You cannot move an Elastic IP address that was originally
            allocated for use in EC2-VPC. The Elastic IP address must not be associated with an
            instance or network interface.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestoreEC2AddressToClassicCmdlet.PublicIp">
            <summary>
            <para>
            <para>The Elastic IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestoreEC2AddressToClassicCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RestoreAddressToClassicResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RestoreAddressToClassicResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestoreEC2AddressToClassicCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RestoreEC2AddressToClassicCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet">
            <summary>
            Removes an ingress authorization rule from a Client VPN endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.AccessGroupId">
            <summary>
            <para>
            <para>The ID of the Active Directory group for which to revoke access. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint with which the authorization rule is associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.RevokeAllGroup">
            <summary>
            <para>
            <para>Indicates whether access should be revoked for all clients.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.TargetNetworkCidr">
            <summary>
            <para>
            <para>The IPv4 address range, in CIDR notation, of the network for which access is being
            removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RevokeClientVpnIngressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.RevokeClientVpnIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2ClientVpnIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet">
            <summary>
            [VPC only] Removes the specified egress rules from a security group for EC2-VPC. This
            action doesn't apply to security groups for use in EC2-Classic. To remove a rule,
            the values that you specify (for example, ports) must match the existing rule's values
            exactly.
            
             
            <para>
            Each rule consists of the protocol and the IPv4 or IPv6 CIDR range or source security
            group. For the TCP and UDP protocols, you must also specify the destination port or
            range of ports. For the ICMP protocol, you must also specify the ICMP type and code.
            If the security group rule has a description, you do not have to specify the description
            to revoke the rule.
            </para><para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet.IpPermission">
            <summary>
            <para>
            <para>The sets of IP permissions. You can't specify a destination security group and a CIDR
            IP address range in the same set of permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RevokeSecurityGroupEgressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupEgressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet">
            <summary>
            Removes the specified ingress rules from a security group. To remove a rule, the values
            that you specify (for example, ports) must match the existing rule's values exactly.
            
             <note><para>
            [EC2-Classic only] If the values you specify do not match the existing rule's values,
            no error is returned. Use <a>DescribeSecurityGroups</a> to verify that the rule has
            been removed.
            </para></note><para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code. If the
            security group rule has a description, you do not have to specify the description
            to revoke the rule.
            </para><para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group. You must specify either the security group ID or the
            security group name in the request. For security groups in a nondefault VPC, you must
            specify the security group ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.GroupName">
            <summary>
            <para>
            <para>[EC2-Classic, default VPC] The name of the security group. You must specify either
            the security group ID or the security group name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.IpPermission">
            <summary>
            <para>
            <para>The sets of IP permissions. You can't specify a source security group and a CIDR IP
            address range in the same set of permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.RevokeSecurityGroupIngressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.RevokeEC2SecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet">
            <summary>
            Searches for routes in the specified local gateway route table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.LocalGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the local gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Routes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.SearchLocalGatewayRoutesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.SearchLocalGatewayRoutesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LocalGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^LocalGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2LocalGatewayRouteCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet">
            <summary>
            Searches one or more transit gateway multicast groups and returns the group membership
            information.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>group-ip-address</code> - The IP address of the transit gateway multicast group.</para></li><li><para><code>is-group-member</code> - The resource is a group member. Valid values are <code>true</code>
            | <code>false</code>.</para></li><li><para><code>is-group-source</code> - The resource is a group source. Valid values are <code>true</code>
            | <code>false</code>.</para></li><li><para><code>member-type</code> - The member type. Valid values are <code>igmp</code> |
            <code>static</code>.</para></li><li><para><code>resource-id</code> - The ID of the resource.</para></li><li><para><code>resource-type</code> - The type of resource. Valid values are <code>vpc</code>
            | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>tgw-peering</code>.</para></li><li><para><code>source-type</code> - The source type. Valid values are <code>igmp</code> |
            <code>static</code>.</para></li><li><para><code>state</code> - The state of the subnet association. Valid values are <code>associated</code>
            | <code>associated</code> | <code>disassociated</code> | <code>disassociating</code>.</para></li><li><para><code>subnet-id</code> - The ID of the subnet.</para></li><li><para><code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MulticastGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.SearchTransitGatewayMulticastGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayMulticastGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet">
            <summary>
            Searches for routes in the specified transit gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. The possible values are:</para><ul><li><para><code>attachment.transit-gateway-attachment-id</code>- The id of the transit gateway
            attachment.</para></li><li><para><code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</para></li><li><para><code>attachment.resource-type</code> - The attachment resource type (<code>vpc</code>
            | <code>vpn</code>).</para></li><li><para><code>route-search.exact-match</code> - The exact match of the specified filter.</para></li><li><para><code>route-search.longest-prefix-match</code> - The longest prefix that matches
            the route.</para></li><li><para><code>route-search.subnet-of-match</code> - The routes with a subnet that match the
            specified CIDR filter.</para></li><li><para><code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass
            the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your
            route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns
            10.0.1.0/29.</para></li><li><para><code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</para></li><li><para><code>type</code> - The type of route (<code>propagated</code> | <code>static</code>).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of routes to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.SearchTransitGatewayRoutesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.SearchTransitGatewayRoutesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SearchEC2TransitGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SendEC2DiagnosticInterruptCmdlet">
            <summary>
            Sends a diagnostic interrupt to the specified Amazon EC2 instance to trigger a <i>kernel
            panic</i> (on Linux instances), or a <i>blue screen</i>/<i>stop error</i> (on Windows
            instances). For instances based on Intel and AMD processors, the interrupt is received
            as a <i>non-maskable interrupt</i> (NMI).
            
             
            <para>
            In general, the operating system crashes and reboots when a kernel panic or stop error
            is triggered. The operating system can also be configured to perform diagnostic tasks,
            such as generating a memory dump file, loading a secondary kernel, or obtaining a
            call trace.
            </para><para>
            Before sending a diagnostic interrupt to your instance, ensure that its operating
            system is configured to perform the required diagnostic tasks.
            </para><para>
            For more information about configuring your operating system to generate a crash dump
            when a kernel panic or stop error occurs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/diagnostic-interrupt.html">Send
            a Diagnostic Interrupt</a> (Linux instances) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/diagnostic-interrupt.html">Send
            a Diagnostic Interrupt</a> (Windows instances).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2DiagnosticInterruptCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2DiagnosticInterruptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.SendDiagnosticInterruptResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2DiagnosticInterruptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2DiagnosticInterruptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet">
            <summary>
            Submits feedback about the status of an instance. The instance must be in the <code>running</code>
            state. If your experience with the instance differs from the instance status returned
            by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience
            with the instance. Amazon EC2 collects this information to improve the accuracy of
            status checks.
            
             
            <para>
            Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.Description">
            <summary>
            <para>
            <para>Descriptive text about the health state of your instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The time at which the reported instance health state ended.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.Instance">
            <summary>
            <para>
            <para>The instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.ReasonCode">
            <summary>
            <para>
            <para>The reason codes that describe the health state of your instance.</para><ul><li><para><code>instance-stuck-in-state</code>: My instance is stuck in a state.</para></li><li><para><code>unresponsive</code>: My instance is unresponsive.</para></li><li><para><code>not-accepting-credentials</code>: My instance is not accepting my credentials.</para></li><li><para><code>password-not-available</code>: A password is not available for my instance.</para></li><li><para><code>performance-network</code>: My instance is experiencing performance problems
            that I believe are network related.</para></li><li><para><code>performance-instance-store</code>: My instance is experiencing performance
            problems that I believe are related to the instance stores.</para></li><li><para><code>performance-ebs-volume</code>: My instance is experiencing performance problems
            that I believe are related to an EBS volume.</para></li><li><para><code>performance-other</code>: My instance is experiencing performance problems.</para></li><li><para><code>other</code>: [explain using the description parameter]</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The time at which the reported instance health state began.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.Status">
            <summary>
            <para>
            <para>The status of all instances listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The time at which the reported instance health state ended.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The time at which the reported instance health state began.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReportInstanceStatusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Instance parameter.
            The -PassThru parameter is deprecated, use -Select '^Instance' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SendEC2InstanceStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet">
            <summary>
            Replaces an IAM instance profile for the specified running instance. You can use this
            action to change the IAM instance profile that's associated with an instance without
            having to disassociate the existing IAM instance profile first.
            
             
            <para>
            Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.IamInstanceProfile_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the existing IAM instance profile association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.IamInstanceProfile_Name">
            <summary>
            <para>
            <para>The name of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IamInstanceProfileAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceIamInstanceProfileAssociationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ReplaceIamInstanceProfileAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2IamInstanceProfileAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet">
            <summary>
            Changes which network ACL a subnet is associated with. By default when you create
            a subnet, it's automatically associated with the default network ACL. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            This is an idempotent operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the current association between the original network ACL and the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>The ID of the new network ACL to associate with the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NewAssociationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet">
            <summary>
            Replaces an entry (rule) in a network ACL. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.CidrBlock">
            <summary>
            <para>
            <para>The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.IcmpTypeCode_Code">
            <summary>
            <para>
            <para>The ICMP code. A value of -1 means all codes for the specified ICMP type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.Egress">
            <summary>
            <para>
            <para>Indicates whether to replace the egress rule.</para><para>Default: If no value is specified, we replace the ingress rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.PortRange_From">
            <summary>
            <para>
            <para>The first port in the range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.Ipv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:bd8:1234:1a00::/64</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.NetworkAclId">
            <summary>
            <para>
            <para>The ID of the ACL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol number. A value of "-1" means all protocols. If you specify "-1" or a
            protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports
            is allowed, regardless of any ports or ICMP types or codes that you specify. If you
            specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP
            types and codes allowed, regardless of any that you specify. If you specify protocol
            "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.RuleAction">
            <summary>
            <para>
            <para>Indicates whether to allow or deny the traffic that matches the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.RuleNumber">
            <summary>
            <para>
            <para>The rule number of the entry to replace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.PortRange_To">
            <summary>
            <para>
            <para>The last port in the range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.IcmpTypeCode_Type">
            <summary>
            <para>
            <para>The ICMP type. A value of -1 means all types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceNetworkAclEntryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkAclId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkAclId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2NetworkAclEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet">
            <summary>
            Replaces an existing route within a route table in a VPC. You must provide only one
            of the following: internet gateway, virtual private gateway, NAT instance, NAT gateway,
            VPC peering connection, network interface, egress-only internet gateway, or transit
            gateway.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The IPv4 CIDR address block used for the destination match. The value that you provide
            must match the CIDR of an existing route in the table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.DestinationIpv6CidrBlock">
            <summary>
            <para>
            <para>The IPv6 CIDR address block used for the destination match. The value that you provide
            must match the CIDR of an existing route in the table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.EgressOnlyInternetGatewayId">
            <summary>
            <para>
            <para>[IPv6 traffic only] The ID of an egress-only internet gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of an internet gateway or virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of a NAT instance in your VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.LocalGatewayId">
            <summary>
            <para>
            <para>The ID of the local gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.LocalTarget">
            <summary>
            <para>
            <para>Specifies whether to reset the local route to its default target (<code>local</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.NatGatewayId">
            <summary>
            <para>
            <para>[IPv4 traffic only] The ID of a NAT gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of a network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.TransitGatewayId">
            <summary>
            <para>
            <para>The ID of a transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>The ID of a VPC peering connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceRouteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^RouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet">
            <summary>
            Changes the route table associated with a given subnet, internet gateway, or virtual
            private gateway in a VPC. After the operation completes, the subnet or gateway uses
            the routes in the new route table. For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can also use this operation to change which table is the main route table in the
            VPC. Specify the main route table's association ID and the route table ID of the new
            main route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet.RouteTableId">
            <summary>
            <para>
            <para>The ID of the new route table to associate with the subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NewAssociationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceRouteTableAssociationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ReplaceRouteTableAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2RouteTableAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet">
            <summary>
            Replaces the specified route in the specified transit gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.Blackhole">
            <summary>
            <para>
            <para>Indicates whether traffic matching this route is to be dropped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.DestinationCidrBlock">
            <summary>
            <para>
            <para>The CIDR range used for the destination match. Routing decisions are based on the
            most specific match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Route'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.ReplaceTransitGatewayRouteResponse).
            Specifying the name of a property of type Amazon.EC2.Model.ReplaceTransitGatewayRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayRouteTableId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayRouteTableId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.SetEC2TransitGatewayRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StartEC2ByoipCidrAdvertisementCmdlet">
            <summary>
            Advertises an IPv4 or IPv6 address range that is provisioned for use with your AWS
            resources through bring your own IP addresses (BYOIP).
            
             
            <para>
            You can perform this operation at most once every 10 seconds, even if you specify
            different address ranges each time.
            </para><para>
            We recommend that you stop advertising the BYOIP CIDR from other locations when you
            advertise it from AWS. To minimize down time, you can configure your AWS resources
            to use an address from a BYOIP CIDR before it is advertised, and then simultaneously
            stop advertising it from the current location and start advertising it through AWS.
            </para><para>
            It can take a few minutes before traffic to the specified addresses starts routing
            to AWS because of BGP propagation delays.
            </para><para>
            To stop advertising the BYOIP CIDR, use <a>WithdrawByoipCidr</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2ByoipCidrAdvertisementCmdlet.Cidr">
            <summary>
            <para>
            <para>The address range, in CIDR notation. This must be the exact range that you provisioned.
            You can't advertise only a portion of the provisioned range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2ByoipCidrAdvertisementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ByoipCidr'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.AdvertiseByoipCidrResponse).
            Specifying the name of a property of type Amazon.EC2.Model.AdvertiseByoipCidrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2ByoipCidrAdvertisementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Cidr parameter.
            The -PassThru parameter is deprecated, use -Select '^Cidr' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2ByoipCidrAdvertisementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet">
            <summary>
            Starts an Amazon EBS-backed instance that you've previously stopped.
            
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for instance usage. However, your root partition Amazon EBS volume
            remains and continues to persist your data, and you are charged for Amazon EBS volume
            usage. You can restart your instance at any time. Every time you start your Windows
            instance, Amazon EC2 charges you for a full instance hour. If you stop and restart
            your Windows instance, a new instance hour begins and Amazon EC2 charges you for another
            full instance hour even if you are still within the same 60-minute period when it
            was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute
            minimum for instance usage, and thereafter charges per second for instance usage.
            </para><para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para><para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet.AdditionalInfo">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StartingInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.StartInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.StartInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceMonitoringCmdlet">
            <summary>
            Enables detailed monitoring for a running instance. Otherwise, basic monitoring is
            enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            To disable detailed monitoring, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceMonitoringCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceMonitoringCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceMonitorings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.MonitorInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.MonitorInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceMonitoringCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2InstanceMonitoringCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StartEC2VpcEndpointServicePrivateDnsVerificationCmdlet">
            <summary>
            Initiates the verification process to prove that the service provider owns the private
            DNS name domain for the endpoint service.
            
             
            <para>
            The service provider must successfully perform the verification before the consumer
            can use the name to access the service.
            </para><para>
            Before the service provider runs this command, they must add a record to the DNS server.
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/ndpoint-services-dns-validation.html#add-dns-txt-record">Adding
            a TXT Record to Your Domain's DNS Server </a> in the <i>Amazon VPC User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2VpcEndpointServicePrivateDnsVerificationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the endpoint service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2VpcEndpointServicePrivateDnsVerificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.StartVpcEndpointServicePrivateDnsVerificationResponse).
            Specifying the name of a property of type Amazon.EC2.Model.StartVpcEndpointServicePrivateDnsVerificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2VpcEndpointServicePrivateDnsVerificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StartEC2VpcEndpointServicePrivateDnsVerificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2BundleTaskCmdlet">
            <summary>
            Cancels a bundling operation for an instance store-backed Windows instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2BundleTaskCmdlet.BundleId">
            <summary>
            <para>
            <para>The ID of the bundle task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2BundleTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BundleTask'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelBundleTaskResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelBundleTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2BundleTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BundleId parameter.
            The -PassThru parameter is deprecated, use -Select '^BundleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2BundleTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2ByoipCidrAdvertisementCmdlet">
            <summary>
            Stops advertising an address range that is provisioned as an address pool.
            
             
            <para>
            You can perform this operation at most once every 10 seconds, even if you specify
            different address ranges each time.
            </para><para>
            It can take a few minutes before traffic to the specified addresses stops routing
            to AWS because of BGP propagation delays.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ByoipCidrAdvertisementCmdlet.Cidr">
            <summary>
            <para>
            <para>The address range, in CIDR notation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ByoipCidrAdvertisementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ByoipCidr'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.WithdrawByoipCidrResponse).
            Specifying the name of a property of type Amazon.EC2.Model.WithdrawByoipCidrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ByoipCidrAdvertisementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Cidr parameter.
            The -PassThru parameter is deprecated, use -Select '^Cidr' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ByoipCidrAdvertisementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet">
            <summary>
            Terminates active Client VPN endpoint connections. This action can be used to terminate
            a specific client connection, or up to five connections established by a specific
            user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint to which the client is connected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the client connection to be terminated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.Username">
            <summary>
            <para>
            <para>The name of the user who initiated the connection. Use this option to terminate all
            active connections for the specified user. This option can only be used if the user
            has established up to five connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.TerminateClientVpnConnectionsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.TerminateClientVpnConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientVpnEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientVpnEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ClientVpnConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2ExportTaskCmdlet">
            <summary>
            Cancels an active export task. The request removes all artifacts of the export, including
            any partially-created Amazon S3 objects. If the export task is complete or is in the
            process of transferring the final disk image, the command fails and returns an error.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ExportTaskCmdlet.ExportTaskId">
            <summary>
            <para>
            <para>The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelExportTaskResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet">
            <summary>
            Cancels an in-process import virtual machine or import snapshot task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet.CancelReason">
            <summary>
            <para>
            <para>The reason for canceling the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet.ImportTaskId">
            <summary>
            <para>
            <para>The ID of the import image or import snapshot task to be canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelImportTaskResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelImportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ImportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceMonitoringCmdlet">
            <summary>
            Disables detailed monitoring for a running instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceMonitoringCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceMonitoringCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceMonitorings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.UnmonitorInstancesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.UnmonitorInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceMonitoringCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2InstanceMonitoringCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2ReservedInstancesListingCmdlet">
            <summary>
            Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ReservedInstancesListingCmdlet.ReservedInstancesListingId">
            <summary>
            <para>
            <para>The ID of the Reserved Instance listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ReservedInstancesListingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedInstancesListings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelReservedInstancesListingResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelReservedInstancesListingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ReservedInstancesListingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedInstancesListingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedInstancesListingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2ReservedInstancesListingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet">
            <summary>
            Cancels the specified Spot Fleet requests.
            
             
            <para>
            After you cancel a Spot Fleet request, the Spot Fleet launches no new Spot Instances.
            You must specify whether the Spot Fleet should also terminate its Spot Instances.
            If you terminate the instances, the Spot Fleet request enters the <code>cancelled_terminating</code>
            state. Otherwise, the Spot Fleet request enters the <code>cancelled_running</code>
            state and the instances continue to run until they are interrupted or you terminate
            them manually.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet.SpotFleetRequestId">
            <summary>
            <para>
            <para>The IDs of the Spot Fleet requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet.TerminateInstance">
            <summary>
            <para>
            <para>Indicates whether to terminate instances for a Spot Fleet request if it is canceled
            successfully.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelSpotFleetRequestsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelSpotFleetRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotFleetRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotFleetRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotFleetRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotInstanceRequestCmdlet">
            <summary>
            Cancels one or more Spot Instance requests.
            
             <important><para>
            Canceling a Spot Instance request does not terminate running Spot Instances associated
            with the request.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotInstanceRequestCmdlet.SpotInstanceRequestId">
            <summary>
            <para>
            <para>One or more Spot Instance request IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotInstanceRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CancelledSpotInstanceRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.CancelSpotInstanceRequestsResponse).
            Specifying the name of a property of type Amazon.EC2.Model.CancelSpotInstanceRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotInstanceRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SpotInstanceRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^SpotInstanceRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.StopEC2SpotInstanceRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet">
            <summary>
            Disassociates an Elastic IP address from the instance or network interface it's associated
            with.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para><para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet.AssociationId">
            <summary>
            <para>
            <para>[EC2-VPC] The association ID. Required for EC2-VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet.PublicIp">
            <summary>
            <para>
            <para>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateAddressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicIp parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicIp' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2AddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ByoipCidrCmdlet">
            <summary>
            Releases the specified address range that you provisioned for use with your AWS resources
            through bring your own IP addresses (BYOIP) and deletes the corresponding address
            pool.
            
             
            <para>
            Before you can release an address range, you must stop advertising it using <a>WithdrawByoipCidr</a>
            and you must not have any IP addresses allocated from its address range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ByoipCidrCmdlet.Cidr">
            <summary>
            <para>
            <para>The address range, in CIDR notation. The prefix must be the same prefix that you specified
            when you provisioned the address range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ByoipCidrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ByoipCidr'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeprovisionByoipCidrResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeprovisionByoipCidrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ByoipCidrCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Cidr parameter.
            The -PassThru parameter is deprecated, use -Select '^Cidr' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ByoipCidrCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet">
            <summary>
            Disassociates a target network from the specified Client VPN endpoint. When you disassociate
            the last target network from a Client VPN, the following happens:
            
             <ul><li><para>
            The route that was automatically added for the VPC is deleted
            </para></li><li><para>
            All active client connections are terminated
            </para></li><li><para>
            New client connections are disallowed
            </para></li><li><para>
            The Client VPN endpoint's status changes to <code>pending-associate</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the target network association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet.ClientVpnEndpointId">
            <summary>
            <para>
            <para>The ID of the Client VPN endpoint from which to disassociate the target network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateClientVpnTargetNetworkResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateClientVpnTargetNetworkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ClientVpnTargetNetworkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2IamInstanceProfileCmdlet">
            <summary>
            Disassociates an IAM instance profile from a running or stopped instance.
            
             
            <para>
            Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2IamInstanceProfileCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the IAM instance profile association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2IamInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IamInstanceProfileAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateIamInstanceProfileResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateIamInstanceProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2IamInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2IamInstanceProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ImageCmdlet">
            <summary>
            Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch
            new instances; however, it doesn't affect any instances that you've already launched
            from the AMI. You'll continue to incur usage costs for those instances until you terminate
            them.
            
             
            <para>
            When you deregister an Amazon EBS-backed AMI, it doesn't affect the snapshot that
            was created for the root volume of the instance during the AMI creation process. When
            you deregister an instance store-backed AMI, it doesn't affect the files that you
            uploaded to Amazon S3 when you created the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeregisterImageResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2ImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet">
            <summary>
            Deregisters tag keys to prevent tags that have the specified tag keys from being included
            in scheduled event notifications for resources in the Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet.InstanceTagAttribute_IncludeAllTagsOfInstance">
            <summary>
            <para>
            <para>Indicates whether to deregister all tag keys in the current Region. Specify <code>false</code>
            to deregister all tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet.InstanceTagAttribute_InstanceTagKey">
            <summary>
            <para>
            <para>Information about the tag keys to deregister.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceTagAttribute'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeregisterInstanceEventNotificationAttributesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeregisterInstanceEventNotificationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceTagAttribute_IncludeAllTagsOfInstance parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceTagAttribute_IncludeAllTagsOfInstance' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2InstanceEventNotificationAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet">
            <summary>
            Unassigns one or more IPv6 addresses from a network interface.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet.Ipv6Address">
            <summary>
            <para>
            <para>The IPv6 addresses to unassign from the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.UnassignIpv6AddressesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.UnassignIpv6AddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NetworkInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^NetworkInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2Ipv6AddressListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet">
            <summary>
            Unassigns one or more secondary private IP addresses from a network interface.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The ID of the network interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet.PrivateIpAddress">
            <summary>
            <para>
            <para>The secondary private IP addresses to unassign from the network interface. You can
            specify this option multiple times to unassign more than one IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.UnassignPrivateIpAddressesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet.PassThru">
            <summary>
            Returns the secondary private IP addresses
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2PrivateIpAddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2RouteTableCmdlet">
            <summary>
            Disassociates a subnet or gateway from a route table.
            
             
            <para>
            After you perform this action, the subnet no longer uses the routes in the route table.
            Instead, it uses the routes in the VPC's main route table. For more information about
            route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2RouteTableCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID representing the current association between the route table and
            subnet or gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2RouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateRouteTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2RouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2RouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2SubnetCidrBlockCmdlet">
            <summary>
            Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6
            CIDR block only. You must detach or delete all gateways and resources that are associated
            with the CIDR block before you can disassociate it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2SubnetCidrBlockCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID for the CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2SubnetCidrBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateSubnetCidrBlockResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateSubnetCidrBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2SubnetCidrBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2SubnetCidrBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet">
            <summary>
            Disassociates the specified subnets from the transit gateway multicast domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.SubnetId">
            <summary>
            <para>
            <para>The IDs of the subnets;</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Associations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateTransitGatewayMulticastDomainResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateTransitGatewayMulticastDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet">
            <summary>
            Deregisters the specified members (network interfaces) from the transit gateway multicast
            group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.GroupIpAddress">
            <summary>
            <para>
            <para>The IP address assigned to the transit gateway multicast group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The IDs of the group members' network interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeregisteredMulticastGroupMembers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupMembersResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet">
            <summary>
            Deregisters the specified sources (network interfaces) from the transit gateway multicast
            group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.GroupIpAddress">
            <summary>
            <para>
            <para>The IP address assigned to the transit gateway multicast group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.NetworkInterfaceId">
            <summary>
            <para>
            <para>The IDs of the group sources' network interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.TransitGatewayMulticastDomainId">
            <summary>
            <para>
            <para>The ID of the transit gateway multicast domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeregisteredMulticastGroupSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupSourcesResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DeregisterTransitGatewayMulticastGroupSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayMulticastDomainId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayMulticastDomainId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayMulticastGroupSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet">
            <summary>
            Disassociates a resource attachment from a transit gateway route table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet.TransitGatewayAttachmentId">
            <summary>
            <para>
            <para>The ID of the attachment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet.TransitGatewayRouteTableId">
            <summary>
            <para>
            <para>The ID of the transit gateway route table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Association'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateTransitGatewayRouteTableResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateTransitGatewayRouteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransitGatewayAttachmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransitGatewayAttachmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2TransitGatewayRouteTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2VpcCidrBlockCmdlet">
            <summary>
            Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify
            its association ID. You can get the association ID by using <a>DescribeVpcs</a>. You
            must detach or delete all gateways and resources that are associated with the CIDR
            block before you can disassociate it. 
            
             
            <para>
            You cannot disassociate the CIDR block with which you originally created the VPC (the
            primary CIDR block).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2VpcCidrBlockCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID for the CIDR block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2VpcCidrBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.DisassociateVpcCidrBlockResponse).
            Specifying the name of a property of type Amazon.EC2.Model.DisassociateVpcCidrBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2VpcCidrBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UnregisterEC2VpcCidrBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet">
            <summary>
            [VPC only] Updates the description of an egress (outbound) security group rule. You
            can replace an existing description, or add a description to a rule that did not have
            one previously.
            
             
            <para>
            You specify the description as part of the IP permissions structure. You can remove
            a description for a security group rule by omitting the description parameter in the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group. You must specify either the security group ID or the
            security group name in the request. For security groups in a nondefault VPC, you must
            specify the security group ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.GroupName">
            <summary>
            <para>
            <para>[Default VPC] The name of the security group. You must specify either the security
            group ID or the security group name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.IpPermission">
            <summary>
            <para>
            <para>The IP permissions for the security group rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsEgressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsEgressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleEgressDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet">
            <summary>
            Updates the description of an ingress (inbound) security group rule. You can replace
            an existing description, or add a description to a rule that did not have one previously.
            
             
            <para>
            You specify the description as part of the IP permissions structure. You can remove
            a description for a security group rule by omitting the description parameter in the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.GroupId">
            <summary>
            <para>
            <para>The ID of the security group. You must specify either the security group ID or the
            security group name in the request. For security groups in a nondefault VPC, you must
            specify the security group ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.GroupName">
            <summary>
            <para>
            <para>[EC2-Classic, default VPC] The name of the security group. You must specify either
            the security group ID or the security group name in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.IpPermission">
            <summary>
            <para>
            <para>The IP permissions for the security group rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Return'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsIngressResponse).
            Specifying the name of a property of type Amazon.EC2.Model.UpdateSecurityGroupRuleDescriptionsIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC2.UpdateEC2SecurityGroupRuleIngressDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
