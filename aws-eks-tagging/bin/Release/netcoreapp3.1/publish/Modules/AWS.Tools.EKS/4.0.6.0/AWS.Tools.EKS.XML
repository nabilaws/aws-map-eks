<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.EKS</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            worker nodes associated with the cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the
            supported resources are Amazon EKS clusters and managed node groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the resource. A tag is an array of key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para><note><para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the cluster to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet">
            <summary>
            Lists the Amazon EKS clusters in your AWS account in the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para><note><para>This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Clusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListClustersResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet">
            <summary>
            Returns descriptive information about an AWS Fargate profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet">
            <summary>
            Lists the AWS Fargate profiles associated with the specified cluster in your AWS account
            in the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that you would like to listFargate profiles in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Fargate profile results returned by <code>ListFargateProfiles</code>
            in paginated output. When you use this parameter, <code>ListFargateProfiles</code>
            returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListFargateProfiles</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListFargateProfiles</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListFargateProfiles</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfileNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListFargateProfilesResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListFargateProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the node group to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your AWS account in the specified Region. Self-managed node groups are not listed.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that you would like to list node groups in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of node group results returned by <code>ListNodegroups</code> in
            paginated output. When you use this parameter, <code>ListNodegroups</code> returns
            only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListNodegroups</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListNodegroups</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListNodegroups</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListNodegroupsResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListNodegroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the supported resources are Amazon EKS clusters and managed node
            groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the Amazon EKS node group associated with the update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.UpdateId">
            <summary>
            <para>
            <para>The ID of the update to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeUpdateResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeUpdateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UpdateId parameter.
            The -PassThru parameter is deprecated, use -Select '^UpdateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            AWS account, in the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to list updates for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the Amazon EKS managed node group to list updates for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of update results returned by <code>ListUpdates</code> in paginated
            output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListUpdates</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UpdateIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListUpdatesResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListUpdatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API
            server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique
            and runs on its own set of Amazon EC2 instances.
            </para><para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the worker nodes (for example, to support <code>kubectl exec</code>,
            <code>logs</code>, and <code>proxy</code> data flows).
            </para><para>
            Amazon EKS worker nodes run in your AWS account and connect to your cluster's control
            plane via the Kubernetes API server endpoint and a certificate file that is created
            for your cluster.
            </para><para>
            You can use the <code>endpointPublicAccess</code> and <code>endpointPrivateAccess</code>
            parameters to enable or disable public and private access to your cluster's Kubernetes
            API server endpoint. By default, public access is enabled, and private access is disabled.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i><i>Amazon EKS User Guide</i></i>.
            
            </para><para>
            You can use the <code>logging</code> parameter to enable or disable exporting the
            Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster
            control plane logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i><i>Amazon EKS User Guide</i></i>.
            </para><note><para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para></note><para>
            Cluster creation typically takes between 10 and 15 minutes. After you create an Amazon
            EKS cluster, you must configure your Kubernetes tooling to communicate with the API
            server and launch worker nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Logging_ClusterLogging">
            <summary>
            <para>
            <para>The cluster control plane logging configuration for your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.EncryptionConfig">
            <summary>
            <para>
            <para>The encryption configuration for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The unique name to give to your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.ResourcesVpcConfig">
            <summary>
            <para>
            <para>The VPC configuration used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify
            at least two subnets. You can specify up to five security groups, but we recommend
            that you use a dedicated security group for your cluster control plane.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role that provides permissions for Amazon
            EKS to make calls to other AWS API operations on your behalf. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon
            EKS Service IAM Role</a> in the <i><i>Amazon EKS User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Version">
            <summary>
            <para>
            <para>The desired Kubernetes version for your cluster. If you don't specify a value here,
            the latest version available in Amazon EKS is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet">
            <summary>
            Creates an AWS Fargate profile for your Amazon EKS cluster. You must have at least
            one Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para><para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para><para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">AWS
            Fargate Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to apply the Fargate profile to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.PodExecutionRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the pod execution role to use for pods that match
            the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure
            to register with your cluster as a node, and it provides read access to Amazon ECR
            image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Selector">
            <summary>
            <para>
            <para>The selectors to match for pods to use this Fargate profile. Each selector must have
            an associated namespace. Optionally, you can also specify labels for a namespace.
            You may specify up to five selectors in a Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Subnet">
            <summary>
            <para>
            <para>The IDs of subnets to launch your pods into. At this time, pods running on Fargate
            are not assigned public IP addresses, so only private subnets (with no direct route
            to an Internet Gateway) are accepted for this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the Fargate profile to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Fargate
            profile tags do not propagate to any other resources associated with the Fargate profile,
            such as the pods that are scheduled with it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet">
            <summary>
            Creates a managed worker node group for an Amazon EKS cluster. You can only create
            a node group for your cluster that is equal to the current Kubernetes version for
            the cluster. All node groups are created with the latest AMI release version for the
            respective minor Kubernetes version of the cluster.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by AWS for an Amazon EKS cluster. Each node
            group uses a version of the Amazon EKS-optimized Amazon Linux 2 AMI. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.AmiType">
            <summary>
            <para>
            <para>The AMI type for your node group. GPU instance types should use the <code>AL2_x86_64_GPU</code>
            AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU
            instances should use the <code>AL2_x86_64</code> AMI type, which uses the Amazon EKS-optimized
            Linux AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to create the node group in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_DesiredSize">
            <summary>
            <para>
            <para>The current number of worker nodes that the managed node group should maintain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.DiskSize">
            <summary>
            <para>
            <para>The root device disk size (in GiB) for your node group instances. The default disk
            size is 20 GiB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.RemoteAccess_Ec2SshKey">
            <summary>
            <para>
            <para>The Amazon EC2 SSH key that provides access for SSH communication with the worker
            nodes in the managed node group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon
            EC2 Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.InstanceType">
            <summary>
            <para>
            <para>The instance type to use for your node group. Currently, you can specify a single
            instance type for a node group. The default value for this parameter is <code>t3.medium</code>.
            If you choose a GPU instance type, be sure to specify the <code>AL2_x86_64_GPU</code>
            with the <code>amiType</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Label">
            <summary>
            <para>
            <para>The Kubernetes labels to be applied to the nodes in the node group when they are created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_MaxSize">
            <summary>
            <para>
            <para>The maximum number of worker nodes that the managed node group can scale out to. Managed
            node groups can support up to 100 nodes by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_MinSize">
            <summary>
            <para>
            <para>The minimum number of worker nodes that the managed node group can scale in to. This
            number must be greater than zero.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The unique name to give your node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.NodeRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
            The Amazon EKS worker node <code>kubelet</code> daemon makes calls to AWS APIs on
            your behalf. Worker nodes receive permissions for these API calls through an IAM instance
            profile and associated policies. Before you can launch worker nodes and register them
            into a cluster, you must create an IAM role for those worker nodes to use when they
            are launched. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html">Amazon
            EKS Worker Node IAM Role</a> in the <i><i>Amazon EKS User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ReleaseVersion">
            <summary>
            <para>
            <para>The AMI version of the Amazon EKS-optimized AMI to use with your node group. By default,
            the latest available AMI version for the node group's current Kubernetes version is
            used. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS-Optimized Linux AMI Versions</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.RemoteAccess_SourceSecurityGroup">
            <summary>
            <para>
            <para>The security groups that are allowed SSH access (port 22) to the worker nodes. If
            you specify an Amazon EC2 SSH key but do not specify a source security group when
            you create a managed node group, then port 22 on the worker nodes is opened to the
            internet (0.0.0.0/0). For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Subnet">
            <summary>
            <para>
            <para>The subnets to use for the Auto Scaling group that is created for your node group.
            These subnets must have the tag key <code>kubernetes.io/cluster/CLUSTER_NAME</code>
            with a value of <code>shared</code>, where <code>CLUSTER_NAME</code> is replaced with
            the name of your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the node group to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Node group
            tags do not propagate to any other resources associated with the node group, such
            as the Amazon EC2 instances or subnets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Version">
            <summary>
            <para>
            <para>The Kubernetes version to use for your managed nodes. By default, the Kubernetes version
            of the cluster is used, and this is the only accepted specified value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the cluster to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet">
            <summary>
            Deletes an AWS Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para><para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the Fargate profile to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that is associated with your node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the node group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet">
            <summary>
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently,
            the supported resources are Amazon EKS clusters and managed node groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i><i>Amazon EKS User Guide</i></i>.
            </para><note><para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para></note><para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i><i>Amazon EKS User Guide</i></i>.
            
            </para><important><para>
            At this time, you can not update the subnets or security group IDs for an existing
            cluster.
            </para></important><para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Logging_ClusterLogging">
            <summary>
            <para>
            <para>The cluster control plane logging configuration for your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.ResourcesVpcConfig">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateClusterConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateClusterConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para><para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Version">
            <summary>
            <para>
            <para>The desired Kubernetes version following a successful update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateClusterVersionResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateClusterVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Labels_AddOrUpdateLabel">
            <summary>
            <para>
            <para>Kubernetes labels to be added or updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that the managed node group resides in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_DesiredSize">
            <summary>
            <para>
            <para>The current number of worker nodes that the managed node group should maintain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_MaxSize">
            <summary>
            <para>
            <para>The maximum number of worker nodes that the managed node group can scale out to. Managed
            node groups can support up to 100 nodes by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_MinSize">
            <summary>
            <para>
            <para>The minimum number of worker nodes that the managed node group can scale in to. This
            number must be greater than zero.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the managed node group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Labels_RemoveLabel">
            <summary>
            <para>
            <para>Kubernetes labels to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateNodegroupConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateNodegroupConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update to the latest available AMI version of a node group's current Kubernetes
            version by not specifying a Kubernetes version in the request. You can update to the
            latest AMI version of your cluster's current Kubernetes version by specifying your
            cluster's Kubernetes version in the request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS-Optimized Linux AMI Versions</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para><para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that is associated with the managed node group
            to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Enforce">
            <summary>
            <para>
            <para>Force the update if the existing node group's pods are unable to be drained due to
            a pod disruption budget issue. If an update fails because pods could not be drained,
            you can force the update after it fails to terminate the old node whether or not any
            pods are running on the node.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the managed node group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ReleaseVersion">
            <summary>
            <para>
            <para>The AMI version of the Amazon EKS-optimized AMI to use for the update. By default,
            the latest available AMI version for the node group's Kubernetes version is used.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS-Optimized Linux AMI Versions </a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Version">
            <summary>
            <para>
            <para>The Kubernetes version to update to. If no version is specified, then the Kubernetes
            version of the node group does not change. You can specify the Kubernetes version
            of the cluster to update the node group to the latest AMI version of the cluster's
            Kubernetes version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateNodegroupVersionResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateNodegroupVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
