<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.AutoScaling</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet">
            <summary>
            <note><para>
            To attach an Application Load Balancer or a Network Load Balancer, use the <a>AttachLoadBalancerTargetGroups</a>
            API operation instead.
            </para></note><para>
            Attaches one or more Classic Load Balancers to the specified Auto Scaling group. Amazon
            EC2 Auto Scaling registers the running instances with these Classic Load Balancers.
            </para><para>
            To describe the load balancers for an Auto Scaling group, call the <a>DescribeLoadBalancers</a>
            API. To detach the load balancer from the Auto Scaling group, call the <a>DetachLoadBalancers</a>
            API.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching
            a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The names of the load balancers. You can specify up to 10 load balancers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachLoadBalancersResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet">
            <summary>
            Attaches one or more target groups to the specified Auto Scaling group.
            
             
            <para>
            To describe the target groups for an Auto Scaling group, call the <a>DescribeLoadBalancerTargetGroups</a>
            API. To detach the target group from the Auto Scaling group, call the <a>DetachLoadBalancerTargetGroups</a>
            API.
            </para><para>
            With Application Load Balancers and Network Load Balancers, instances are registered
            as targets with a target group. With Classic Load Balancers, instances are registered
            with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching
            a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target
            groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachLoadBalancerTargetGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet">
            <summary>
            Completes the lifecycle action for the specified token or instance with the specified
            result.
            
             
            <para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke
            your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para>
            Create the lifecycle hook. Specify whether the hook is used when the instances launch
            or terminate.
            </para></li><li><para>
            If you need more time, record the lifecycle action heartbeat to keep the instance
            in a pending state.
            </para></li><li><para><b>If you finish before the timeout period ends, complete the lifecycle action.</b></para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon
            EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleActionResult">
            <summary>
            <para>
            <para>The action for the group to take. This parameter can be either <code>CONTINUE</code>
            or <code>ABANDON</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleActionToken">
            <summary>
            <para>
            <para>A universally unique identifier (UUID) that identifies a specific lifecycle action
            associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification
            target you specified when you created the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CompleteLifecycleActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet">
            <summary>
            Disables group metrics for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Metric">
            <summary>
            <para>
            <para>Specifies one or more of the following metrics:</para><ul><li><para><code>GroupMinSize</code></para></li><li><para><code>GroupMaxSize</code></para></li><li><para><code>GroupDesiredCapacity</code></para></li><li><para><code>GroupInServiceInstances</code></para></li><li><para><code>GroupPendingInstances</code></para></li><li><para><code>GroupStandbyInstances</code></para></li><li><para><code>GroupTerminatingInstances</code></para></li><li><para><code>GroupTotalInstances</code></para></li><li><para><code>GroupInServiceCapacity</code></para></li><li><para><code>GroupPendingCapacity</code></para></li><li><para><code>GroupStandbyCapacity</code></para></li><li><para><code>GroupTerminatingCapacity</code></para></li><li><para><code>GroupTotalCapacity</code></para></li></ul><para>If you omit this parameter, all metrics are disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DisableMetricsCollectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet">
            <summary>
            Removes one or more instances from the specified Auto Scaling group.
            
             
            <para>
            After the instances are detached, you can manage them independent of the Auto Scaling
            group.
            </para><para>
            If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto
            Scaling launches instances to replace the ones that are detached.
            </para><para>
            If there is a Classic Load Balancer attached to the Auto Scaling group, the instances
            are deregistered from the load balancer. If there are target groups attached to the
            Auto Scaling group, the instances are deregistered from the target groups.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach
            EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether the Auto Scaling group decrements the desired capacity value by
            the number of instances detached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachInstancesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DetachInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet">
            <summary>
            Detaches one or more Classic Load Balancers from the specified Auto Scaling group.
            
             
            <para>
            This operation detaches only Classic Load Balancers. If you have Application Load
            Balancers or Network Load Balancers, use the <a>DetachLoadBalancerTargetGroups</a>
            API instead.
            </para><para>
            When you detach a load balancer, it enters the <code>Removing</code> state while deregistering
            the instances in the group. When all instances are deregistered, then you can no longer
            describe the load balancer using the <a>DescribeLoadBalancers</a> API call. The instances
            remain running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The names of the load balancers. You can specify up to 10 load balancers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachLoadBalancersResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet">
            <summary>
            Detaches one or more target groups from the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target
            groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachLoadBalancerTargetGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet">
            <summary>
            Enables group metrics for the specified Auto Scaling group. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring
            Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Granularity">
            <summary>
            <para>
            <para>The granularity to associate with the metrics to collect. The only valid value is
            <code>1Minute</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Metric">
            <summary>
            <para>
            <para>Specifies which group-level metrics to start collecting. You can specify one or more
            of the following metrics:</para><ul><li><para><code>GroupMinSize</code></para></li><li><para><code>GroupMaxSize</code></para></li><li><para><code>GroupDesiredCapacity</code></para></li><li><para><code>GroupInServiceInstances</code></para></li><li><para><code>GroupPendingInstances</code></para></li><li><para><code>GroupStandbyInstances</code></para></li><li><para><code>GroupTerminatingInstances</code></para></li><li><para><code>GroupTotalInstances</code></para></li></ul><para>The instance weighting feature supports the following additional metrics: </para><ul><li><para><code>GroupInServiceCapacity</code></para></li><li><para><code>GroupPendingCapacity</code></para></li><li><para><code>GroupStandbyCapacity</code></para></li><li><para><code>GroupTerminatingCapacity</code></para></li><li><para><code>GroupTotalCapacity</code></para></li></ul><para>If you omit this parameter, all metrics are enabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.EnableMetricsCollectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet">
            <summary>
            Moves the specified instances into the standby state.
            
             
            <para>
            If you choose to decrement the desired capacity of the Auto Scaling group, the instances
            can enter standby as long as the desired capacity of the Auto Scaling group after
            the instances are placed into standby is equal to or greater than the minimum capacity
            of the group.
            </para><para>
            If you choose not to decrement the desired capacity of the Auto Scaling group, the
            Auto Scaling group launches new instances to replace the instances on standby.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily
            Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether to decrement the desired capacity of the Auto Scaling group by the
            number of instances moved to <code>Standby</code> mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.EnterStandbyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.EnterStandbyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet">
            <summary>
            Moves the specified instances out of the standby state.
            
             
            <para>
            After you put the instances back in service, the desired capacity is incremented.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily
            Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ExitStandbyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.ExitStandbyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAccountLimitCmdlet">
            <summary>
            Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.
            
             
            <para>
            For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon
            EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAccountLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAccountLimitsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAccountLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAdjustmentTypeCmdlet">
            <summary>
            Describes the available adjustment types for Amazon EC2 Auto Scaling scaling policies.
            These settings apply to step scaling policies and simple scaling policies; they do
            not apply to target tracking scaling policies.
            
             
            <para>
            The following adjustment types are supported:
            </para><ul><li><para>
            ChangeInCapacity
            </para></li><li><para>
            ExactCapacity
            </para></li><li><para>
            PercentChangeInCapacity
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAdjustmentTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AdjustmentTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet">
            <summary>
            Describes one or more Auto Scaling groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters.
            By default, you can only specify up to 50 names. You can optionally increase this
            limit using the <code>MaxRecords</code> parameter.</para><para>If you omit this parameter, all Auto Scaling groups are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet">
            <summary>
            Describes one or more Auto Scaling instances.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you
            omit this parameter, all Auto Scaling instances are described. If you specify an ID
            that does not exist, it is ignored with no error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>50</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingNotificationTypeCmdlet">
            <summary>
            Describes the notification types that are supported by Amazon EC2 Auto Scaling.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingNotificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingNotificationTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet">
            <summary>
            Describes one or more launch configurations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The launch configuration names. If you omit this parameter, all launch configurations
            are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet">
            <summary>
            Describes the lifecycle hooks for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle
            hooks are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecycleHooks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookTypeCmdlet">
            <summary>
            Describes the available types of lifecycle hooks.
            
             
            <para>
            The following hook types are supported:
            </para><ul><li><para>
            autoscaling:EC2_INSTANCE_LAUNCHING
            </para></li><li><para>
            autoscaling:EC2_INSTANCE_TERMINATING
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecycleHookTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet">
            <summary>
            Describes the load balancers for the specified Auto Scaling group.
            
             
            <para>
            This operation describes only Classic Load Balancers. If you have Application Load
            Balancers or Network Load Balancers, use the <a>DescribeLoadBalancerTargetGroups</a>
            API instead.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLoadBalancersResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLoadBalancersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet">
            <summary>
            Describes the target groups for the specified Auto Scaling group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancerTargetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLoadBalancerTargetGroupsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLoadBalancerTargetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASMetricCollectionTypeCmdlet">
            <summary>
            Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.
            
             
            <para>
            The <code>GroupStandbyInstances</code> metric is not returned by default. You must
            explicitly request this metric when calling the <a>EnableMetricsCollection</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASMetricCollectionTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet">
            <summary>
            Describes the notification actions associated with the specified Auto Scaling group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet">
            <summary>
            Describes the policies for the specified Auto Scaling group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The names of one or more policies. If you omit this parameter, all policies are described.
            If a group name is provided, the results are limited to that group. This list is limited
            to 50 items. If you specify an unknown policy name, it is ignored with no error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>,
            and <code>TargetTrackingScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to be returned with each call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribePoliciesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribePoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet">
            <summary>
            Describes one or more scaling activities for the specified Auto Scaling group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.ActivityId">
            <summary>
            <para>
            <para>The activity IDs of the desired scaling activities. You can specify up to 50 IDs.
            If you omit this parameter, all activities for the past six weeks are described. If
            unknown activities are requested, they are ignored with no error. If you specify an
            Auto Scaling group, the results are limited to that group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScalingProcessTypeCmdlet">
            <summary>
            Describes the scaling process types for use with the <a>ResumeProcesses</a> and <a>SuspendProcesses</a>
            APIs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingProcessTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Processes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet">
            <summary>
            Describes the actions scheduled for your Auto Scaling group that haven't run or that
            have not reached their end time. To describe the actions that have already run, call
            the <a>DescribeScalingActivities</a> API.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The latest scheduled start time to return. If scheduled action names are provided,
            this parameter is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The names of one or more scheduled actions. You can specify up to 50 actions. If you
            omit this parameter, all scheduled actions are described. If you specify an unknown
            scheduled action, it is ignored with no error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The earliest scheduled start time to return. If scheduled action names are provided,
            this parameter is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The latest scheduled start time to return. If scheduled action names are provided,
            this parameter is ignored.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The earliest scheduled start time to return. If scheduled action names are provided,
            this parameter is ignored.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledUpdateGroupActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScheduledActionsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScheduledActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet">
            <summary>
            Describes the specified tags.
            
             
            <para>
            You can use filters to limit the results. For example, you can query for the tags
            for a specific Auto Scaling group. You can specify multiple values for a filter. A
            tag must match at least one of the specified values for it to be included in the results.
            </para><para>
            You can also specify multiple filters. The result includes information for a particular
            tag only if it matches all the filters. If there's no match, no special message is
            returned.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging
            Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters to scope the tags to return. The maximum number of filters per
            filter type (for example, <code>auto-scaling-group</code>) is 1000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASTerminationPolicyTypeCmdlet">
            <summary>
            Describes the termination policies supported by Amazon EC2 Auto Scaling.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling
            Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTerminationPolicyTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TerminationPolicyTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet">
            <summary>
            Attaches one or more EC2 instances to the specified Auto Scaling group.
            
             
            <para>
            When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity
            of the group by the number of instances being attached. If the number of instances
            being attached plus the desired capacity of the group exceeds the maximum size of
            the group, the operation fails.
            </para><para>
            If there is a Classic Load Balancer attached to your Auto Scaling group, the instances
            are also registered with the load balancer. If there are target groups attached to
            your Auto Scaling group, the instances are also registered with the target groups.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach
            EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachInstancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet">
            <summary>
            Creates an Auto Scaling group with the specified name and attributes.
            
             
            <para>
            If you exceed your maximum limit of Auto Scaling groups, the call fails. To query
            this limit, call the <a>DescribeAccountLimits</a> API. For information about updating
            this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon
            EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            For introductory exercises for creating an Auto Scaling group, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/GettingStartedTutorial.html">Getting
            Started with Amazon EC2 Auto Scaling</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-register-lbs-with-asg.html">Tutorial:
            Set Up a Scaled and Load-Balanced Application</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html">Auto
            Scaling Groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group. This name must be unique per Region per account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>One or more Availability Zones for the group. This parameter is optional if you specify
            one or more subnets for <code>VPCZoneIdentifier</code>.</para><para>Conditional: If your account supports EC2-Classic and VPC, this parameter is required
            to launch instances into EC2-Classic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DefaultCooldown">
            <summary>
            <para>
            <para>The amount of time, in seconds, after a scaling activity completes before another
            scaling activity can start. The default value is <code>300</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group at the time
            of its creation and the capacity it attempts to maintain. It can scale beyond this
            capacity if you configure automatic scaling.</para><para>This number must be greater than or equal to the minimum size of the group and less
            than or equal to the maximum size of the group. If you do not specify a desired capacity,
            the default is the minimum size of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.HealthCheckGracePeriod">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking
            the health status of an EC2 instance that has come into service. During this time,
            any health check failures for the instance are ignored. The default value is <code>0</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health
            Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Conditional: This parameter is required if you are adding an <code>ELB</code> health
            check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.HealthCheckType">
            <summary>
            <para>
            <para>The service to use for the health checks. The valid values are <code>EC2</code> and
            <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto
            Scaling group to use ELB health checks, it considers the instance unhealthy if it
            fails either the EC2 status checks or the load balancer health checks.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health
            Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance used to create a launch configuration for the group. To get
            the instance ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a>
            API operation.</para><para>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch
            configuration and associates it with the group. This launch configuration derives
            its attributes from the specified instance, except for the block device mapping.</para><para>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>,
            <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration to use when an instance is launched. To get the
            launch configuration name, use the <a>DescribeLaunchConfigurations</a> API operation.
            New launch configurations can be created with the <a>CreateLaunchConfiguration</a>
            API.</para><para>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>,
            <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API.</para><para>You must specify either a template ID or a template name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API.</para><para>You must specify either a template ID or a template name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LifecycleHookSpecificationList">
            <summary>
            <para>
            <para>One or more lifecycle hooks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>A list of Classic Load Balancers associated with this Auto Scaling group. For Application
            Load Balancers and Network Load Balancers, specify a list of target groups using the
            <code>TargetGroupARNs</code> property instead.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using
            a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MaxInstanceLifetime">
            <summary>
            <para>
            <para>The maximum amount of time, in seconds, that an instance can be in service. The default
            is null.</para><para>This parameter is optional, but if you specify a value for it, you must specify a
            value of at least 604,800 seconds (7 days). To clear a previously set value, specify
            a new value of 0.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing
            Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2
            Auto Scaling User Guide</i>.</para><para>Valid Range: Minimum value of 0.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the group.</para><note><para>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling
            may need to go above <code>MaxSize</code> to meet your capacity requirements. In this
            event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than
            your maximum instance weight (weights that define how many capacity units each instance
            contributes to the capacity of the group).</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MixedInstancesPolicy">
            <summary>
            <para>
            <para>An embedded object that specifies a mixed instances policy. The required parameters
            must be specified. If optional parameters are unspecified, their default values are
            used.</para><para>The policy includes parameters that not only define the distribution of On-Demand
            Instances and Spot Instances, the maximum price to pay for Spot Instances, and how
            the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacity,
            but also the parameters that specify the instance configuration information—the launch
            template and instance types.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_MixedInstancesPolicy.html">MixedInstancesPolicy</a>
            in the <i>Amazon EC2 Auto Scaling API Reference</i> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto
            Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para><para>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>,
            <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.NewInstancesProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether newly launched instances are protected from termination by Amazon
            EC2 Auto Scaling when scaling in.</para><para>For more information about preventing instances from terminating on scale in, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.PlacementGroup">
            <summary>
            <para>
            <para>The name of the placement group into which to launch your instances, if any. A placement
            group is a logical grouping of instances within a single Availability Zone. You cannot
            specify multiple Availability Zones and a placement group. For more information, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.ServiceLinkedRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group
            uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling
            uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if
            it does not exist. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked
            Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. You can tag your Auto Scaling group and propagate the tags to the
            Amazon EC2 instances it launches.</para><para>Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes,
            specify the tags in a launch template but use caution. If the launch template specifies
            an instance tag with a key that is also specified for the Auto Scaling group, Amazon
            EC2 Auto Scaling overrides the value of that instance tag with the value specified
            by the Auto Scaling group.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging
            Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling
            group. Instances are registered as targets in a target group, and traffic is routed
            to the target group.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using
            a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.TerminationPolicy">
            <summary>
            <para>
            <para>One or more termination policies used to select the instance to terminate. These policies
            are executed in the order that they are listed.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling
            Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version
            number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a>
            API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a>
            API.</para><para>If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version
            of the launch template when launching instances. If the value is <code>$Default</code>,
            Amazon EC2 Auto Scaling selects the default version of the launch template when launching
            instances. The default value is <code>$Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.VPCZoneIdentifier">
            <summary>
            <para>
            <para>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</para><para>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>,
            the subnets that you specify for this parameter must reside in those Availability
            Zones.</para><para>Conditional: If your account supports EC2-Classic and VPC, this parameter is required
            to launch instances into a VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet">
            <summary>
            Creates a launch configuration.
            
             
            <para>
            If you exceed your maximum limit of launch configurations, the call fails. To query
            this limit, call the <a>DescribeAccountLimits</a> API. For information about updating
            this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon
            EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch
            Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.AssociatePublicIpAddress">
            <summary>
            <para>
            <para>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies
            whether to assign a public IP address to the group's instances. If you specify <code>true</code>,
            each instance in the Auto Scaling group receives a unique public IP address. For more
            information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching
            Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code>
            when you create your group.</para><note><para>If the instance is launched into a default subnet, the default is to assign a public
            IP address, unless you disabled the option to assign a public IP address on the subnet.
            If the instance is launched into a nondefault subnet, the default is not to assign
            a public IP address, unless you enabled the option to assign a public IP address on
            the subnet.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>A block device mapping, which specifies the block devices for the instance. You can
            specify virtual devices and EBS volumes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block
            Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ClassicLinkVPCId">
            <summary>
            <para>
            <para>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking
            EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>This parameter can only be used if you are launching EC2-Classic instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ClassicLinkVPCSecurityGroup">
            <summary>
            <para>
            <para>The IDs of one or more security groups for the specified ClassicLink-enabled VPC.
            For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking
            EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.EbsOptimized">
            <summary>
            <para>
            <para>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>)
            or not (<code>false</code>). The optimization provides dedicated throughput to Amazon
            EBS and an optimized configuration stack to provide optimal I/O performance. This
            optimization is not available with all instance types. Additional fees are incurred
            when you enable EBS optimization for an instance type that is not EBS-optimized by
            default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon
            EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><para>The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceMonitoring_Enabled">
            <summary>
            <para>
            <para>If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring
            is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.IamInstanceProfile">
            <summary>
            <para>
            <para>The name or the Amazon Resource Name (ARN) of the instance profile associated with
            the IAM role for the instance. The instance profile contains the IAM role.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM
            Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding
            an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><para>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance to use to create the launch configuration. The new launch configuration
            derives attributes from the instance, except for the block device mapping.</para><para>To create a launch configuration with a block device mapping or override any other
            instance attributes, specify them as part of the same request.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Create
            a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para><para>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code>
            and <code>InstanceType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceType">
            <summary>
            <para>
            <para>Specifies the instance type of the EC2 instance.</para><para>For information about available instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available
            Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i></para><para>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.KernelId">
            <summary>
            <para>
            <para>The ID of the kernel associated with the AMI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.KeyName">
            <summary>
            <para>
            <para>The name of the key pair. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon
            EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration. This name must be unique per Region per account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.PlacementTenancy">
            <summary>
            <para>
            <para>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs
            on isolated, single-tenant hardware and can only be launched into a VPC.</para><para>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement
            tenancy attribute set to <code>default</code>), you must set the value of this parameter
            to <code>dedicated</code>.</para><para>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet
            for <code>VPCZoneIdentifier</code> when you create your group.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy">Instance
            Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Valid Values: <code>default</code> | <code>dedicated</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk to select.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>A list that contains the security groups to assign to the instances in the Auto Scaling
            group.</para><para>[EC2-VPC] Specify the security group IDs. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</para><para>[EC2-Classic] Specify either the security group names or the security group IDs. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.SpotPrice">
            <summary>
            <para>
            <para>The maximum hourly price to be paid for any Spot Instance launched to fulfill the
            request. Spot Instances are launched when the price you specify exceeds the current
            Spot price. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Launching
            Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.</para><note><para>When you change your maximum price by creating a new launch configuration, running
            instances will continue to run as long as the maximum price for those running instances
            is higher than the current Spot price.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.UserData">
            <summary>
            <para>
            <para>The Base64-encoded user data to make available to the launched EC2 instances. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance
            Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateLaunchConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet">
            <summary>
            Deletes the specified Auto Scaling group.
            
             
            <para>
            If the group has instances or scaling activities in progress, you must specify the
            option to force the deletion in order for it to succeed.
            </para><para>
            If the group has policies, deleting the group deletes the policies, the underlying
            alarm actions, and any alarm that no longer has an associated action.
            </para><para>
            To remove instances from the Auto Scaling group before deleting it, call the <a>DetachInstances</a>
            API with the list of instances and the option to decrement the desired capacity. This
            ensures that Amazon EC2 Auto Scaling does not launch replacement instances.
            </para><para>
            To terminate all instances before deleting the Auto Scaling group, call the <a>UpdateAutoScalingGroup</a>
            API and set the minimum size and desired capacity of the Auto Scaling group to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.ForceDelete">
            <summary>
            <para>
            <para>Specifies that the group is to be deleted along with all instances associated with
            the group, without waiting for all instances to be terminated. This parameter also
            deletes any lifecycle actions associated with the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet">
            <summary>
            Deletes the specified launch configuration.
            
             
            <para>
            The launch configuration must not be attached to an Auto Scaling group. When this
            call completes, the launch configuration is no longer available for use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteLaunchConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet">
            <summary>
            Deletes the specified lifecycle hook.
            
             
            <para>
            If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code>
            for launching instances, <code>CONTINUE</code> for terminating instances).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteLifecycleHookResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet">
            <summary>
            Deletes the specified notification.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.TopicARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
            topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteNotificationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet">
            <summary>
            Deletes the specified scaling policy.
            
             
            <para>
            Deleting either a step scaling policy or a simple scaling policy deletes the underlying
            alarm action, but does not delete the alarm, even if it no longer has an associated
            action.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting
            a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeletePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet">
            <summary>
            Deletes the specified scheduled action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the action to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteScheduledActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet">
            <summary>
            Deletes one or more scheduled actions for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The names of the scheduled actions to delete. The maximum number allowed is 50. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedScheduledActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.BatchDeleteScheduledActionResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.BatchDeleteScheduledActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet">
            <summary>
            Deletes the specified tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet">
            <summary>
            Resumes the specified suspended automatic scaling processes, or all suspended process,
            for the specified Auto Scaling group.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending
            and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.ScalingProcess">
            <summary>
            <para>
            <para>One or more of the following processes. If you omit this parameter, all processes
            are specified.</para><ul><li><para><code>Launch</code></para></li><li><para><code>Terminate</code></para></li><li><para><code>HealthCheck</code></para></li><li><para><code>ReplaceUnhealthy</code></para></li><li><para><code>AZRebalance</code></para></li><li><para><code>AlarmNotification</code></para></li><li><para><code>ScheduledActions</code></para></li><li><para><code>AddToLoadBalancer</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ResumeProcessesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet">
            <summary>
            Sets the size of the specified Auto Scaling group.
            
             
            <para>
            If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value
            that is lower than the current size of the group, the Auto Scaling group uses its
            termination policy to determine which instances to terminate. 
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-manual-scaling.html">Manual
            Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after this
            operation completes and the capacity it attempts to maintain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.HonorCooldown">
            <summary>
            <para>
            <para>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete
            before initiating a scaling activity to set your Auto Scaling group to its new capacity.
            By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual
            scaling activities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetDesiredCapacityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet">
            <summary>
            Sets the health status of the specified instance.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health
            Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.HealthStatus">
            <summary>
            <para>
            <para>The health status of the instance. Set to <code>Healthy</code> to have the instance
            remain in service. Set to <code>Unhealthy</code> to have the instance be out of service.
            Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.ShouldRespectGracePeriod">
            <summary>
            <para>
            <para>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code>
            specified for the group, by default, this call respects the grace period. Set this
            to <code>False</code>, to have the call not respect the grace period associated with
            the group.</para><para>For more information about the health check grace period, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html">CreateAutoScalingGroup</a>
            in the <i>Amazon EC2 Auto Scaling API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetInstanceHealthResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet">
            <summary>
            Updates the instance protection settings of the specified instances.
            
             
            <para>
            For more information about preventing instances that are part of an Auto Scaling group
            from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.InstanceId">
            <summary>
            <para>
            <para>One or more instance IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.ProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling
            when scaling in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetInstanceProtectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet">
            <summary>
            Creates or updates one or more scheduled scaling actions for an Auto Scaling group.
            If you leave a parameter unspecified when updating a scheduled scaling action, the
            corresponding value remains unchanged.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.ScheduledUpdateGroupAction">
            <summary>
            <para>
            <para>One or more scheduled actions. The maximum number allowed is 50.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedScheduledUpdateGroupActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.BatchPutScheduledUpdateGroupActionResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.BatchPutScheduledUpdateGroupActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet">
            <summary>
            Creates or updates tags for the specified Auto Scaling group.
            
             
            <para>
            When you specify a tag with a key that already exists, the operation overwrites the
            previous tag definition, and you do not get an error message.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging
            Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateOrUpdateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet">
            <summary>
            Executes the specified policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.BreachThreshold">
            <summary>
            <para>
            <para>The breach threshold for the alarm.</para><para>Conditional: This parameter is required if the policy type is <code>StepScaling</code>
            and not supported otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.HonorCooldown">
            <summary>
            <para>
            <para>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete
            before executing the policy.</para><para>This parameter is not supported if the policy type is <code>StepScaling</code> or
            <code>TargetTrackingScaling</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.MetricValue">
            <summary>
            <para>
            <para>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute
            a policy of type <code>StepScaling</code> and determine which step adjustment to use.
            For example, if the breach threshold is 50 and you want to use a step adjustment with
            a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</para><para>If you specify a metric value that doesn't correspond to a step adjustment for the
            policy, the call returns an error.</para><para>Conditional: This parameter is required if the policy type is <code>StepScaling</code>
            and not supported otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name or ARN of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ExecutePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet">
            <summary>
            Terminates the specified instance and optionally adjusts the desired group size. 
            
             
            <para>
            This call simply makes a termination request. The instance is not terminated immediately.
            When an instance is terminated, the instance status changes to <code>terminated</code>.
            You can't connect to or start an instance after you've terminated it.
            </para><para>
            If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto
            Scaling launches instances to replace the ones that are terminated. 
            </para><para>
            By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones.
            If you decrement the desired capacity, your Auto Scaling group can become unbalanced
            between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group,
            and rebalancing might terminate instances in other zones. For more information, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing
            Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether terminating the instance also decrements the size of the Auto Scaling
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activity'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet">
            <summary>
            Suspends the specified automatic scaling processes, or all processes, for the specified
            Auto Scaling group.
            
             
            <para>
            If you suspend either the <code>Launch</code> or <code>Terminate</code> process types,
            it can prevent other process types from functioning properly. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending
            and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            To resume processes that have been suspended, call the <a>ResumeProcesses</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.ScalingProcess">
            <summary>
            <para>
            <para>One or more of the following processes. If you omit this parameter, all processes
            are specified.</para><ul><li><para><code>Launch</code></para></li><li><para><code>Terminate</code></para></li><li><para><code>HealthCheck</code></para></li><li><para><code>ReplaceUnhealthy</code></para></li><li><para><code>AZRebalance</code></para></li><li><para><code>AlarmNotification</code></para></li><li><para><code>ScheduledActions</code></para></li><li><para><code>AddToLoadBalancer</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SuspendProcessesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet">
            <summary>
            Updates the configuration for the specified Auto Scaling group.
            
             
            <para>
            To update an Auto Scaling group, specify the name of the group and the parameter that
            you want to change. Any parameters that you don't specify are not changed by this
            update request. The new settings take effect on any scaling activities after this
            call returns. 
            </para><para>
            If you associate a new launch configuration or template with an Auto Scaling group,
            all new instances will get the updated configuration. Existing instances continue
            to run with the configuration that they were originally launched with. When you update
            a group to specify a mixed instances policy instead of a launch configuration or template,
            existing instances may be replaced to match the new purchasing options that you specified
            in the policy. For example, if the group currently has 100% On-Demand capacity and
            the policy specifies 50% Spot capacity, this means that half of your instances will
            be gradually terminated and relaunched as Spot Instances. When replacing instances,
            Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so
            that updating your group does not compromise the performance or availability of your
            application.
            </para><para>
            Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>,
            or <code>MinSize</code>:
            </para><ul><li><para>
            If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value
            that is lower than the current size of the group, the Auto Scaling group uses its
            termination policy to determine which instances to terminate.
            </para></li><li><para>
            If you specify a new value for <code>MinSize</code> without specifying a value for
            <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the
            current size of the group, this sets the group's <code>DesiredCapacity</code> to the
            new <code>MinSize</code> value.
            </para></li><li><para>
            If you specify a new value for <code>MaxSize</code> without specifying a value for
            <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the
            current size of the group, this sets the group's <code>DesiredCapacity</code> to the
            new <code>MaxSize</code> value.
            </para></li></ul><para>
            To see which parameters have been set, call the <a>DescribeAutoScalingGroups</a> API.
            To view the scaling policies for an Auto Scaling group, call the <a>DescribePolicies</a>
            API. If the group has scaling policies, you can update them by calling the <a>PutScalingPolicy</a>
            API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>One or more Availability Zones for the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DefaultCooldown">
            <summary>
            <para>
            <para>The amount of time, in seconds, after a scaling activity completes before another
            scaling activity can start. The default value is <code>300</code>. This cooldown period
            is not used when a scaling-specific cooldown is specified.</para><para>Cooldown periods are not supported for target tracking scaling policies, step scaling
            policies, or scheduled scaling. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after this
            operation completes and the capacity it attempts to maintain.</para><para>This number must be greater than or equal to the minimum size of the group and less
            than or equal to the maximum size of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.HealthCheckGracePeriod">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking
            the health status of an EC2 instance that has come into service. The default value
            is <code>0</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health
            Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Conditional: This parameter is required if you are adding an <code>ELB</code> health
            check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.HealthCheckType">
            <summary>
            <para>
            <para>The service to use for the health checks. The valid values are <code>EC2</code> and
            <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks,
            it considers the instance unhealthy if it fails either the EC2 status checks or the
            load balancer health checks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration. If you specify <code>LaunchConfigurationName</code>
            in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API.</para><para>You must specify either a template ID or a template name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API.</para><para>You must specify either a template ID or a template name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MaxInstanceLifetime">
            <summary>
            <para>
            <para>The maximum amount of time, in seconds, that an instance can be in service. The default
            is null.</para><para>This parameter is optional, but if you specify a value for it, you must specify a
            value of at least 604,800 seconds (7 days). To clear a previously set value, specify
            a new value of 0.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing
            Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2
            Auto Scaling User Guide</i>.</para><para>Valid Range: Minimum value of 0.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the Auto Scaling group.</para><note><para>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling
            may need to go above <code>MaxSize</code> to meet your capacity requirements. In this
            event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than
            your maximum instance weight (weights that define how many capacity units each instance
            contributes to the capacity of the group).</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MixedInstancesPolicy">
            <summary>
            <para>
            <para>An embedded object that specifies a mixed instances policy.</para><para>In your call to <code>UpdateAutoScalingGroup</code>, you can make changes to the policy
            that is specified. All optional parameters are left unchanged if not specified.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_MixedInstancesPolicy.html">MixedInstancesPolicy</a>
            in the <i>Amazon EC2 Auto Scaling API Reference</i> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto
            Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.NewInstancesProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether newly launched instances are protected from termination by Amazon
            EC2 Auto Scaling when scaling in.</para><para>For more information about preventing instances from terminating on scale in, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.PlacementGroup">
            <summary>
            <para>
            <para>The name of the placement group into which to launch your instances, if any. A placement
            group is a logical grouping of instances within a single Availability Zone. You cannot
            specify multiple Availability Zones and a placement group. For more information, see
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.ServiceLinkedRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group
            uses to call other AWS services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked
            Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.TerminationPolicy">
            <summary>
            <para>
            <para>A standalone termination policy or a list of termination policies used to select the
            instance to terminate. The policies are executed in the order that they are listed.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling
            Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version
            number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a>
            API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a>
            API.</para><para>If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version
            of the launch template when launching instances. If the value is <code>$Default</code>,
            Amazon EC2 Auto Scaling selects the default version of the launch template when launching
            instances. The default value is <code>$Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.VPCZoneIdentifier">
            <summary>
            <para>
            <para>A comma-separated list of subnet IDs for virtual private cloud (VPC).</para><para>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>,
            the subnets that you specify for this parameter must reside in those Availability
            Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.UpdateAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet">
            <summary>
            Records a heartbeat for the lifecycle action associated with the specified token or
            instance. This extends the timeout by the length of time defined using the <a>PutLifecycleHook</a>
            API call.
            
             
            <para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke
            your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para>
            Create the lifecycle hook. Specify whether the hook is used when the instances launch
            or terminate.
            </para></li><li><para><b>If you need more time, record the lifecycle action heartbeat to keep the instance
            in a pending state.</b></para></li><li><para>
            If you finish before the timeout period ends, complete the lifecycle action.
            </para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto
            Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.LifecycleActionToken">
            <summary>
            <para>
            <para>A token that uniquely identifies a specific lifecycle action associated with an instance.
            Amazon EC2 Auto Scaling sends this token to the notification target that you specified
            when you created the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet">
            <summary>
            Creates or updates a lifecycle hook for the specified Auto Scaling group.
            
             
            <para>
            A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance
            when the instance launches (before it is put into service) or as the instance terminates
            (before it is fully terminated).
            </para><para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke
            your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para><b>Create the lifecycle hook. Specify whether the hook is used when the instances
            launch or terminate.</b></para></li><li><para>
            If you need more time, record the lifecycle action heartbeat to keep the instance
            in a pending state using the <a>RecordLifecycleActionHeartbeat</a> API call.
            </para></li><li><para>
            If you finish before the timeout period ends, complete the lifecycle action using
            the <a>CompleteLifecycleAction</a> API call.
            </para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon
            EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto
            Scaling group, the call fails.
            </para><para>
            You can view the lifecycle hooks for an Auto Scaling group using the <a>DescribeLifecycleHooks</a>
            API call. If you are no longer using a lifecycle hook, you can delete it by calling
            the <a>DeleteLifecycleHook</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.DefaultResult">
            <summary>
            <para>
            <para>Defines the action the Auto Scaling group should take when the lifecycle hook timeout
            elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code>
            or <code>ABANDON</code>. The default value is <code>ABANDON</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.HeartbeatTimeout">
            <summary>
            <para>
            <para>The maximum time, in seconds, that can elapse before the lifecycle hook times out.
            The range is from <code>30</code> to <code>7200</code> seconds. The default value
            is <code>3600</code> seconds (1 hour).</para><para>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that
            you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle
            hook from timing out by calling the <a>RecordLifecycleActionHeartbeat</a> API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.LifecycleTransition">
            <summary>
            <para>
            <para>The instance state to which you want to attach the lifecycle hook. The valid values
            are:</para><ul><li><para>autoscaling:EC2_INSTANCE_LAUNCHING</para></li><li><para>autoscaling:EC2_INSTANCE_TERMINATING</para></li></ul><para>Conditional: This parameter is required for new lifecycle hooks, but optional when
            updating existing hooks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.NotificationMetadata">
            <summary>
            <para>
            <para>Additional information that you want to include any time Amazon EC2 Auto Scaling sends
            a message to the notification target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.NotificationTargetARN">
            <summary>
            <para>
            <para>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you
            when an instance is in the transition state for the lifecycle hook. This target can
            be either an SQS queue or an SNS topic.</para><para>If you specify an empty string, this overrides the current ARN.</para><para>This operation uses the JSON format when sending notifications to an Amazon SQS queue,
            and an email key-value pair format when sending notifications to an Amazon SNS topic.</para><para>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message.
            Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.RoleARN">
            <summary>
            <para>
            <para>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified
            notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</para><para>Conditional: This parameter is required for new lifecycle hooks, but optional when
            updating existing hooks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutLifecycleHookResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet">
            <summary>
            Configures an Auto Scaling group to send notifications when specified events take
            place. Subscribers to the specified topic can have messages delivered to an endpoint
            such as a web server or an email address.
            
             
            <para>
            This configuration overwrites any existing configuration.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting
            Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.NotificationType">
            <summary>
            <para>
            <para>The type of event that causes the notification to be sent. To query the notification
            types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a>
            API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.TopicARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
            topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutNotificationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet">
            <summary>
            Creates or updates a scaling policy for an Auto Scaling group.
            
             
            <para>
            For more information about using scaling policies to scale your Auto Scaling group,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html">Target
            Tracking Scaling Policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html">Step
            and Simple Scaling Policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.AdjustmentType">
            <summary>
            <para>
            <para>Specifies whether the <code>ScalingAdjustment</code> parameter is an absolute number
            or a percentage of the current capacity. The valid values are <code>ChangeInCapacity</code>,
            <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</para><para>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>.
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling
            Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Cooldown">
            <summary>
            <para>
            <para>The amount of time, in seconds, after a scaling activity completes before any further
            dynamic scaling activities can start. If this parameter is not specified, the default
            cooldown period for the group applies.</para><para>Valid only if the policy type is <code>SimpleScaling</code>. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Dimension">
            <summary>
            <para>
            <para>The dimensions of the metric.</para><para>Conditional: If you published your metric with dimensions, you must specify the same
            dimensions in your scaling policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.TargetTrackingConfiguration_DisableScaleIn">
            <summary>
            <para>
            <para>Indicates whether scaling in by the target tracking scaling policy is disabled. If
            scaling in is disabled, the target tracking scaling policy doesn't remove instances
            from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove
            instances from the Auto Scaling group. The default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Enabled">
            <summary>
            <para>
            <para>Indicates whether the scaling policy is enabled or disabled. The default is enabled.
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling
            a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.EstimatedInstanceWarmup">
            <summary>
            <para>
            <para>The estimated time, in seconds, until a newly launched instance can contribute to
            the CloudWatch metrics. The default is to use the value specified for the default
            cooldown period for the group.</para><para>Valid only if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MetricAggregationType">
            <summary>
            <para>
            <para>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>,
            <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the
            value is treated as <code>Average</code>.</para><para>Valid only if the policy type is <code>StepScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_MetricName">
            <summary>
            <para>
            <para>The name of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MinAdjustmentMagnitude">
            <summary>
            <para>
            <para>The minimum value to scale by when scaling by percentages. For example, suppose that
            you create a step scaling policy to scale out an Auto Scaling group by 25 percent
            and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances
            and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified
            a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the
            group by 2 instances. </para><para>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>
            and the adjustment type is <code>PercentChangeInCapacity</code>. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling
            Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MinAdjustmentStep">
            <summary>
            <para>
            <para>Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Namespace">
            <summary>
            <para>
            <para>The namespace of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>,
            and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated
            as <code>SimpleScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredefinedMetricSpecification_PredefinedMetricType">
            <summary>
            <para>
            <para>The metric type. The following predefined metrics are available:</para><ul><li><para><code>ASGAverageCPUUtilization</code> - Average CPU utilization of the Auto Scaling
            group.</para></li><li><para><code>ASGAverageNetworkIn</code> - Average number of bytes received on all network
            interfaces by the Auto Scaling group.</para></li><li><para><code>ASGAverageNetworkOut</code> - Average number of bytes sent out on all network
            interfaces by the Auto Scaling group.</para></li><li><para><code>ALBRequestCountPerTarget</code> - Number of requests completed per target in
            an Application Load Balancer target group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredefinedMetricSpecification_ResourceLabel">
            <summary>
            <para>
            <para>Identifies the resource associated with the metric type. You can't specify a resource
            label unless the metric type is <code>ALBRequestCountPerTarget</code> and there is
            a target group attached to the Auto Scaling group.</para><para>The format is <code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i>/targetgroup/<i>target-group-name</i>/<i>target-group-id</i></code>, where </para><ul><li><para><code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i></code> is the final
            portion of the load balancer ARN, and</para></li><li><para><code>targetgroup/<i>target-group-name</i>/<i>target-group-id</i></code> is the
            final portion of the target group ARN.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.ScalingAdjustment">
            <summary>
            <para>
            <para>The amount by which a simple scaling policy scales the Auto Scaling group in response
            to an alarm breach. The adjustment is based on the value that you specified in the
            <code>AdjustmentType</code> parameter (either an absolute number or a percentage).
            A positive value adds to the current capacity and a negative value subtracts from
            the current capacity. For exact capacity, you must specify a positive value.</para><para>Conditional: If you specify <code>SimpleScaling</code> for the policy type, you must
            specify this parameter. (Not used with any other policy type.) </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Statistic">
            <summary>
            <para>
            <para>The statistic of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.StepAdjustment">
            <summary>
            <para>
            <para>A set of adjustments that enable you to scale based on the size of the alarm breach.</para><para>Conditional: If you specify <code>StepScaling</code> for the policy type, you must
            specify this parameter. (Not used with any other policy type.) </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.TargetTrackingConfiguration_TargetValue">
            <summary>
            <para>
            <para>The target value for the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Unit">
            <summary>
            <para>
            <para>The unit of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutScalingPolicyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.PutScalingPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet">
            <summary>
            Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave
            a parameter unspecified when updating a scheduled scaling action, the corresponding
            value remains unchanged.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled
            Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after the scheduled
            action runs and the capacity it attempts to maintain. It can scale beyond this capacity
            if you add more scaling conditions. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does
            not perform the action after this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Recurrence">
            <summary>
            <para>
            <para>The recurring schedule for this action, in Unix cron syntax format. This format consists
            of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year]
            [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>).
            For more information about this format, see <a href="http://crontab.org">Crontab</a>.</para><para>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>,
            they form the boundaries of when the recurring action starts and stops.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of this scaling action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
            only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</para><para>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto
            Scaling performs the action at this time, and then performs the action based on the
            specified recurrence.</para><para>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an
            error message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcTime">
            <summary>
            <para>
            <para>This parameter is no longer used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does
            not perform the action after this time.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
            only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</para><para>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto
            Scaling performs the action at this time, and then performs the action based on the
            specified recurrence.</para><para>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an
            error message.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Time">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use TimeUtc instead. Setting either Time or TimeUtc results
            in both Time and TimeUtc being assigned, the latest assignment to either one of the
            two property is reflected in the value of both. Time is provided for backwards compatibility
            only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed
            to the service.</para><para>This parameter is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
